spawn /home/lactose/nvdla/vp/aarch64_toplevel -c /usr/local/nvdla/aarch64_nvdla.lua

             SystemC 2.3.0-ASI --- Oct  9 2017 04:21:14
        Copyright (c) 1996-2012 by all Contributors,
        ALL RIGHTS RESERVED

sc_log control string: [outfile:sc.log;verbosity_level:sc_debug;csb_adaptor:enable;dbb_adaptor:enable;sram_adaptor:enable]
Set SC LOG file to sc.log
Set debug verbosity to sc_debug
DMI mode enable
RAM base address: 0xc0000000
bridge: tlm2c_elaborate..

Info: NV_NVDLA_glb.cpp: 228:calling NV_NVDLA_glb::Update_nvdla_intr_bdma_0


Info: NV_NVDLA_glb.cpp: 236:calling NV_NVDLA_glb::Update_nvdla_intr_bdma_1


Info: NV_NVDLA_glb.cpp: 244:calling NV_NVDLA_glb::Update_nvdla_intr_pdp_0


Info: NV_NVDLA_glb.cpp: 252:calling NV_NVDLA_glb::Update_nvdla_intr_pdp_1


Info: NV_NVDLA_glb.cpp: 260:calling NV_NVDLA_glb::Update_nvdla_intr_sdp_0


Info: NV_NVDLA_glb.cpp: 268:calling NV_NVDLA_glb::Update_nvdla_intr_sdp_1


Info: NV_NVDLA_glb.cpp: 276:calling NV_NVDLA_glb::Update_nvdla_intr_cdp_0


Info: NV_NVDLA_glb.cpp: 284:calling NV_NVDLA_glb::Update_nvdla_intr_cdp_1


Info: NV_NVDLA_glb.cpp: 292:calling NV_NVDLA_glb::Update_nvdla_intr_rbk_0


Info: NV_NVDLA_glb.cpp: 300:calling NV_NVDLA_glb::Update_nvdla_intr_rbk_1


Info: NV_NVDLA_glb.cpp: 308:calling NV_NVDLA_glb::Update_nvdla_intr_cdma_dat_0


Info: NV_NVDLA_glb.cpp: 316:calling NV_NVDLA_glb::Update_nvdla_intr_cdma_dat_1


Info: NV_NVDLA_glb.cpp: 324:calling NV_NVDLA_glb::Update_nvdla_intr_cdma_wt_0


Info: NV_NVDLA_glb.cpp: 332:calling NV_NVDLA_glb::Update_nvdla_intr_cdma_wt_1


Info: NV_NVDLA_glb.cpp: 340:calling NV_NVDLA_glb::Update_nvdla_intr_cacc_0


Info: NV_NVDLA_glb.cpp: 348:calling NV_NVDLA_glb::Update_nvdla_intr_cacc_1


Info: NV_NVDLA_mcif.cpp: 3553:NV_NVDLA_mcif::ReadRequestArbiter, no pending request, waiting.


Info: NV_NVDLA_mcif.cpp: 3718:Calling WriteRequestArbiter


Info: NV_NVDLA_mcif.cpp: 2065:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, num_available:0

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.13.3 (yali@unassigned) (gcc version 6.4.1 20170707 (Linaro GCC 6.4-2017.08)) #1 SMP PREEMPT Mon Nov 27 09:22:34 CST 2017
[    0.000000] Boot CPU: AArch64 Processor [411fd070]
[    0.000000] Machine model: linux,dummy-virt
[    0.000000] efi: Getting EFI parameters from FDT:
[    0.000000] efi: UEFI not found.
[    0.000000] cma: Reserved 16 MiB at 0x000000007f000000
[    0.000000] NUMA: No NUMA configuration found
[    0.000000] NUMA: Faking a node at [mem 0x0000000000000000-0x000000007fffffff]
[    0.000000] NUMA: NODE_DATA [mem 0x7efe8900-0x7efea3ff]
[    0.000000] Zone ranges:
[    0.000000]   DMA      [mem 0x0000000040000000-0x000000007fffffff]
[    0.000000]   Normal   empty
[    0.000000] Movable zone start for each node
[    0.000000] Early memory node ranges
[    0.000000]   node   0: [mem 0x0000000040000000-0x000000007fffffff]
[    0.000000] Initmem setup node 0 [mem 0x0000000040000000-0x000000007fffffff]
[    0.000000] psci: probing for conduit method from DT.
[    0.000000] psci: PSCIv0.2 detected in firmware.
[    0.000000] psci: Using standard PSCI v0.2 function IDs
[    0.000000] psci: Trusted OS migration not required
[    0.000000] percpu: Embedded 26 pages/cpu @ffff80003efcb000 s67352 r8192 d30952 u106496
[    0.000000] Detected PIPT I-cache on CPU0
[    0.000000] CPU features: enabling workaround for ARM erratum 832075
[    0.000000] CPU features: enabling workaround for ARM erratum 834220
[    0.000000] Built 1 zonelists in Node order, mobility grouping on.  Total pages: 258048
[    0.000000] Policy zone: DMA
[    0.000000] Kernel command line: "root=/dev/vda"
[    0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000000] Memory: 999232K/1048576K available (9404K kernel code, 1130K rwdata, 4164K rodata, 1088K init, 400K bss, 32960K reserved, 16384K cma-reserved)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     modules : 0xffff000000000000 - 0xffff000008000000   (   128 MB)
[    0.000000]     vmalloc : 0xffff000008000000 - 0xffff7dffbfff0000   (129022 GB)
[    0.000000]       .text : 0xffff000008080000 - 0xffff0000089b0000   (  9408 KB)
[    0.000000]     .rodata : 0xffff0000089b0000 - 0xffff000008dd0000   (  4224 KB)
[    0.000000]       .init : 0xffff000008dd0000 - 0xffff000008ee0000   (  1088 KB)
[    0.000000]       .data : 0xffff000008ee0000 - 0xffff000008ffaa00   (  1131 KB)
[    0.000000]        .bss : 0xffff000008ffaa00 - 0xffff00000905ed60   (   401 KB)
[    0.000000]     fixed   : 0xffff7dfffe7fd000 - 0xffff7dfffec00000   (  4108 KB)
[    0.000000]     PCI I/O : 0xffff7dfffee00000 - 0xffff7dffffe00000   (    16 MB)
[    0.000000]     vmemmap : 0xffff7e0000000000 - 0xffff800000000000   (  2048 GB maximum)
[    0.000000]               0xffff7e0000000000 - 0xffff7e0001000000   (    16 MB actual)
[    0.000000]     memory  : 0xffff800000000000 - 0xffff800040000000   (  1024 MB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Preemptible hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS: 64, nr_irqs: 64, preallocated irqs: 0
[    0.000000] GICv2m: range[mem 0x08020000-0x08020fff], SPI[80:143]
[    0.000000] arch_timer: cp15 timer(s) running at 62.50MHz (virt).
[    0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x1cd42e208c, max_idle_ns: 881590405314 ns
[    0.000417] sched_clock: 56 bits at 62MHz, resolution 16ns, wraps every 4398046511096ns
[    0.017118] Console: colour dummy device 80x25
[    0.024365] console [tty0] enabled
[    0.027187] Calibrating delay loop (skipped), value calculated using timer frequency.. 125.00 BogoMIPS (lpj=250000)
[    0.027708] pid_max: default: 32768 minimum: 301
[    0.030500] Security Framework initialized
[    0.034973] Dentry cache hash table entries: 131072 (order: 8, 1048576 bytes)
[    0.036501] Inode-cache hash table entries: 65536 (order: 7, 524288 bytes)
[    0.037102] Mount-cache hash table entries: 2048 (order: 2, 16384 bytes)
[    0.037350] Mountpoint-cache hash table entries: 2048 (order: 2, 16384 bytes)
[    0.120707] ASID allocator initialised with 65536 entries
[    0.123338] Hierarchical SRCU implementation.
[    0.147432] EFI services will not be available.
[    0.153523] smp: Bringing up secondary CPUs ...
[    0.153849] smp: Brought up 1 node, 1 CPU
[    0.153990] SMP: Total of 1 processors activated.
[    0.154265] CPU features: detected feature: 32-bit EL0 Support
[    0.157870] CPU: All CPU(s) started at EL1
[    0.160004] alternatives: patching kernel code
[    0.195346] devtmpfs: initialized
[    0.218405] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns
[    0.218890] futex hash table entries: 256 (order: 3, 32768 bytes)
[    0.228506] pinctrl core: initialized pinctrl subsystem
[    0.266129] random: fast init done
[    0.292404] DMI not present or invalid.
[    0.307639] NET: Registered protocol family 16
[    0.341814] cpuidle: using governor menu
[    0.345114] vdso: 2 pages (1 code @ ffff0000089b6000, 1 data @ ffff000008ee5000)
[    0.345793] hw-breakpoint: found 6 breakpoint and 4 watchpoint registers.
[    0.363328] DMA: preallocated 256 KiB pool for atomic allocations
[    0.372140] Serial: AMBA PL011 UART driver
[    0.473470] 9000000.pl011: ttyAMA0 at MMIO 0x9000000 (irq = 40, base_baud = 0) is a PL011 rev1
[    0.490334] console [ttyAMA0] enabled
[    0.747343] HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.765490] ACPI: Interpreter disabled.
[    0.787463] vgaarb: loaded
[    0.793425] SCSI subsystem initialized
[    0.808399] usbcore: registered new interface driver usbfs
[    0.811825] usbcore: registered new interface driver hub
[    0.814603] usbcore: registered new device driver usb
[    0.827336] pps_core: LinuxPPS API ver. 1 registered
[    0.827669] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.828573] PTP clock support registered
[    0.832001] EDAC MC: Ver: 3.0.0
[    0.840682] dmi: Firmware registration failed.
[    0.846061] Advanced Linux Sound Architecture Driver Initialized.
[    0.869438] clocksource: Switched to clocksource arch_sys_counter
[    0.876255] VFS: Disk quotas dquot_6.6.0
[    0.876962] VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.883663] pnp: PnP ACPI: disabled
[    0.994515] NET: Registered protocol family 2
[    1.009965] TCP established hash table entries: 8192 (order: 4, 65536 bytes)
[    1.011306] TCP bind hash table entries: 8192 (order: 5, 131072 bytes)
[    1.012010] TCP: Hash tables configured (established 8192 bind 8192)
[    1.015764] UDP hash table entries: 512 (order: 2, 16384 bytes)
[    1.016562] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)
[    1.020232] NET: Registered protocol family 1
[    1.038827] RPC: Registered named UNIX socket transport module.
[    1.039491] RPC: Registered udp transport module.
[    1.039949] RPC: Registered tcp transport module.
[    1.040330] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    1.055923] hw perfevents: enabled with armv8_pmuv3 PMU driver, 1 counters available
[    1.057808] kvm [1]: HYP mode not available
[    1.086543] audit: initializing netlink subsys (disabled)
[    1.092427] audit: type=2000 audit(1.039:1): state=initialized audit_enabled=0 res=1
[    1.098029] workingset: timestamp_bits=44 max_order=18 bucket_order=0
[    1.192362] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    1.209924] NFS: Registering the id_resolver key type
[    1.214651] Key type id_resolver registered
[    1.214959] Key type id_legacy registered
[    1.215423] nfs4filelayout_init: NFSv4 File Layout Driver Registering...
[    1.217921] 9p: Installing v9fs 9p2000 file system support
[    1.242894] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 247)
[    1.243618] io scheduler noop registered
[    1.246904] io scheduler cfq registered (default)
[    1.247260] io scheduler mq-deadline registered
[    1.247562] io scheduler kyber registered
[    1.323841] pl061_gpio 9030000.pl061: PL061 GPIO chip @0x0000000009030000 registered
[    1.343030] OF: PCI: host bridge /pcie@10000000 ranges:
[    1.344346] OF: PCI:    IO 0x3eff0000..0x3effffff -> 0x00000000
[    1.346064] OF: PCI:   MEM 0x10000000..0x3efeffff -> 0x10000000
[    1.346465] OF: PCI:   MEM 0x8000000000..0xffffffffff -> 0x8000000000
[    1.348168] pci-host-generic 3f000000.pcie: ECAM at [mem 0x3f000000-0x3fffffff] for [bus 00-0f]
[    1.351423] pci-host-generic 3f000000.pcie: PCI host bridge to bus 0000:00
[    1.352183] pci_bus 0000:00: root bus resource [bus 00-0f]
[    1.352681] pci_bus 0000:00: root bus resource [io  0x0000-0xffff]
[    1.353020] pci_bus 0000:00: root bus resource [mem 0x10000000-0x3efeffff]
[    1.353667] pci_bus 0000:00: root bus resource [mem 0x8000000000-0xffffffffff]
[    1.527599] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    1.553984] SuperH (H)SCI(F) driver initialized
[    1.560818] msm_serial: driver initialized
[    1.571997] cacheinfo: Unable to detect cache hierarchy for CPU 0
[    1.632389] loop: module loaded
[    1.724904] hisi_sas: driver version v1.6
[    1.772975] libphy: Fixed MDIO Bus: probed
[    1.784947] tun: Universal TUN/TAP device driver, 1.6
[    1.813530] e1000e: Intel(R) PRO/1000 Network Driver - 3.2.6-k
[    1.813895] e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.815161] igb: Intel(R) Gigabit Ethernet Network Driver - version 5.4.0-k
[    1.815578] igb: Copyright (c) 2007-2014 Intel Corporation.
[    1.816768] igbvf: Intel(R) Gigabit Virtual Function Network Driver - version 2.4.0-k
[    1.817767] igbvf: Copyright (c) 2009 - 2012 Intel Corporation.
[    1.823101] sky2: driver version 1.30
[    1.830321] VFIO - User Level meta-driver version: 0.3
[    1.854177] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.854649] ehci-pci: EHCI PCI platform driver
[    1.856546] ehci-platform: EHCI generic platform driver
[    1.858646] ehci-orion: EHCI orion driver
[    1.859932] ehci-exynos: EHCI EXYNOS driver
[    1.861976] ehci-msm: Qualcomm On-Chip EHCI Host Controller
[    1.863879] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.864390] ohci-pci: OHCI PCI platform driver
[    1.866069] ohci-platform: OHCI generic platform driver
[    1.867567] ohci-exynos: OHCI EXYNOS driver
[    1.878245] usbcore: registered new interface driver usb-storage
[    1.912010] rtc-pl031 9010000.pl031: rtc core: registered pl031 as rtc0
[    1.921579] i2c /dev entries driver
[    1.975695] sdhci: Secure Digital Host Controller Interface driver
[    1.976070] sdhci: Copyright(c) Pierre Ossman
[    1.982196] Synopsys Designware Multimedia Card Interface Driver
[    1.993504] sdhci-pltfm: SDHCI platform and OF driver helper
[    2.012053] ledtrig-cpu: registered to indicate activity on CPUs
[    2.031171] usbcore: registered new interface driver usbhid
[    2.031497] usbhid: USB HID core driver
[    2.067765] NET: Registered protocol family 17
[    2.071794] 9pnet: Installing 9P2000 support
[    2.074907] Key type dns_resolver registered
[    2.084619] registered taskstats version 1
[    2.106529] input: gpio-keys as /devices/platform/gpio-keys/input/input0
[    2.113891] rtc-pl031 9010000.pl031: setting system clock to 2023-10-27 09:52:09 UTC (1698400329)
[    2.115894] ALSA device list:
[    2.116155]   No soundcards found.
[    2.125328] uart-pl011 9000000.pl011: no DMA platform data
[    2.138338] EXT4-fs (vda): couldn't mount as ext3 due to feature incompatibilities
[    2.146318] EXT4-fs (vda): INFO: recovery required on readonly filesystem
[    2.146713] EXT4-fs (vda): write access will be enabled during recovery
[    2.244741] EXT4-fs (vda): recovery complete
[    2.254590] EXT4-fs (vda): mounted filesystem with ordered data mode. Opts: (null)
[    2.255506] VFS: Mounted root (ext4 filesystem) readonly on device 254:0.
[    2.261732] devtmpfs: mounted
[    2.394967] Freeing unused kernel memory: 1088K
[    2.721874] EXT4-fs (vda): re-mounted. Opts: data=ordered
Starting logging: OK
Initializing random number generator... done.
Starting network: udhcpc: started, v1.27.2
udhcpc: sending discover
udhcpc: sending select for 10.0.2.15
udhcpc: lease of 10.0.2.15 obtained, lease time 86400
deleting routers
adding dns 10.0.2.3
OK
Starting sshd: [    6.487550] NET: Registered protocol family 10
[    6.528085] Segment Routing with IPv6
OK

Welcome to Buildroot
nvdla login: root
Password: nvdla

# mount -t 9p -o trans=virtio r /mnt && cd /mnt
# insmod drm.ko && insmod opendla_1.ko
[    8.136069] opendla: loading out-of-tree module taints kernel.
[    8.147900] Probe NVDLA config nvidia,nvdla_os_initial
[    8.150847] 0 . 12 . 5
[    8.151344] reset engine done
[    8.159315] [drm] Initialized nvdla 0.0.0 20171017 for 10200000.nvdla on minor 0
# ./nvdla_runtime --loadable resnet18_in.nvdla
creating new runtime context...
[    9.625531] DMA paddr allocated: 0xc0000000 for vaddr 0xffff000040000000
[    9.631633] nvdla_gem_map_offset allocates args->offset = 0x100000000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa60d3000, size = 4096, offset = 0x100000000, fd = 3, flags = 3
exited nvdla_mem_map()

[   32.017232] DMA paddr allocated: 0xc4000000 for vaddr 0xffff000044000000
[   32.018184] nvdla_gem_map_offset allocates args->offset = 0x100001000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0bd3000, size = 38273024, offset = 0x100001000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.916348] DMA paddr allocated: 0xc0800000 for vaddr 0xffff000040800000
[   50.918671] nvdla_gem_map_offset allocates args->offset = 0x102481000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa04a1000, size = 7544832, offset = 0x102481000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.923795] DMA paddr allocated: 0xc0001000 for vaddr 0xffff000040001000
[   50.924384] nvdla_gem_map_offset allocates args->offset = 0x102bb3000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa60d2000, size = 40, offset = 0x102bb3000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.930012] DMA paddr allocated: 0xc0002000 for vaddr 0xffff000040002000
[   50.930541] nvdla_gem_map_offset allocates args->offset = 0x102bb4000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa60d1000, size = 1872, offset = 0x102bb4000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.938692] DMA paddr allocated: 0xc0004000 for vaddr 0xffff000040004000
[   50.939253] nvdla_gem_map_offset allocates args->offset = 0x102bb5000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa60cf000, size = 6032, offset = 0x102bb5000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.966067] DMA paddr allocated: 0xc0010000 for vaddr 0xffff000040010000
[   50.966630] nvdla_gem_map_offset allocates args->offset = 0x102bb7000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0498000, size = 33488, offset = 0x102bb7000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.992675] DMA paddr allocated: 0xc0003000 for vaddr 0xffff000040003000
[   50.993410] nvdla_gem_map_offset allocates args->offset = 0x102bc0000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa60ce000, size = 700, offset = 0x102bc0000, fd = 3, flags = 3
exited nvdla_mem_map()

[   50.998460] DMA paddr allocated: 0xc0006000 for vaddr 0xffff000040006000
[   50.999035] nvdla_gem_map_offset allocates args->offset = 0x102bc1000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0497000, size = 4096, offset = 0x102bc1000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.005430] DMA paddr allocated: 0xc0007000 for vaddr 0xffff000040007000
[   51.006432] nvdla_gem_map_offset allocates args->offset = 0x102bc2000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0496000, size = 256, offset = 0x102bc2000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.012347] DMA paddr allocated: 0xc0008000 for vaddr 0xffff000040008000
[   51.012917] nvdla_gem_map_offset allocates args->offset = 0x102bc3000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0495000, size = 24, offset = 0x102bc3000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.018386] DMA paddr allocated: 0xc0009000 for vaddr 0xffff000040009000
[   51.018951] nvdla_gem_map_offset allocates args->offset = 0x102bc4000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0494000, size = 512, offset = 0x102bc4000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.024262] DMA paddr allocated: 0xc000a000 for vaddr 0xffff00004000a000
[   51.024845] nvdla_gem_map_offset allocates args->offset = 0x102bc5000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0493000, size = 4096, offset = 0x102bc5000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.030290] DMA paddr allocated: 0xc000b000 for vaddr 0xffff00004000b000
[   51.030869] nvdla_gem_map_offset allocates args->offset = 0x102bc6000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0492000, size = 4096, offset = 0x102bc6000, fd = 3, flags = 3
exited nvdla_mem_map()

[   51.035690] DMA paddr allocated: 0xc000c000 for vaddr 0xffff00004000c000
[   51.036280] nvdla_gem_map_offset allocates args->offset = 0x102bc7000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffffa0491000, size = 4096, offset = 0x102bc7000, fd = 3, flags = 3
exited nvdla_mem_map()

Emulator starting
entered allocateSystemMemory()
[   52.207683] DMA paddr allocated: 0xc0200000 for vaddr 0xffff000040200000
[   52.208641] nvdla_gem_map_offset allocates args->offset = 0x102bc8000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffff9fb09000, size = 1605632, offset = 0x102bc8000, fd = 3, flags = 3
exited nvdla_mem_map()

*phMem = 0x3ce6720, *pData = 0xffff9fb09000
exited allocateSystemMemory()

Unknown image type: entered allocateSystemMemory()
[   52.218841] DMA paddr allocated: 0xc000d000 for vaddr 0xffff00004000d000
[   52.219375] nvdla_gem_map_offset allocates args->offset = 0x102d50000
entered nvdla_mem_map()
nvdla_mem_map: *pVirtAddr = 0xffff9fb08000, size = 2016, offset = 0x102d50000, fd = 3, flags = 3
exited nvdla_mem_map()

*phMem = 0x3ce67b0, *pData = 0xffff9fb08000
exited allocateSystemMemory()

submitting tasks...
dla_task id 0 has set addr id 0: handle = 3ce5500, offset = 0
dla_task id 0 has set addr id 1: handle = 3ce54c0, offset = 0
dla_task id 0 has set addr id 2: handle = 3ce54e0, offset = 0
dla_task id 0 has set addr id 3: handle = 3ce6720, offset = 0
dla_task id 0 has set addr id 4: handle = 3ce67b0, offset = 0
dla_task id 0 has set addr id 5: handle = 3ce6720, offset = 896000
dla_task id 0 has set addr id 6: handle = 3ce6720, offset = 451584
dla_task id 0 has set addr id 7: handle = 3ce6720, offset = 0
dla_task id 0 has set addr id 8: handle = 3ce6720, offset = 1340416
dla_task id 0 has set addr id 9: handle = 3ce5520, offset = 0
dla_task id 0 has set addr id 10: handle = 3ce5540, offset = 0
dla_task id 0 has set addr id 11: handle = 3ce5560, offset = 0
dla_task id 0 has set addr id 12: handle = 3ce5580, offset = 0
dla_task id 0 has set addr id 13: handle = 3ce55a0, offset = 0
address_list[0][0].handle = 7
address_list[0][0].offset = 0
address_list[0][1].handle = 5
address_list[0][1].offset = 0
address_list[0][2].handle = 6
address_list[0][2].offset = 0
address_list[0][3].handle = 19
address_list[0][3].offset = 0
address_list[0][4].handle = 20
address_list[0][4].offset = 0
address_list[0][5].handle = 19
address_list[0][5].offset = 896000
address_list[0][6].handle = 19
address_list[0][6].offset = 451584
address_list[0][7].handle = 19
address_list[0][7].offset = 0
address_list[0][8].handle = 19
address_list[0][8].offset = 1340416
address_list[0][9].handle = 8
address_list[0][9].offset = 0
address_list[0][10].handle = 9
address_list[0][10].offset = 0
address_list[0][11].handle = 10
address_list[0][11].offset = 0
address_list[0][12].handle = 11
address_list[0][12].offset = 0
address_list[0][13].handle = 12
address_list[0][13].offset = 0
[   52.236422] Enter:dla_read_network_config
[   52.236781] entered dla_get_dma_address(index = 0):
[   52.238400]  in branch dla_get_dma_address(DESTINATION_PROCESSOR):
[   52.238751] before: dst_ptr = 0xffff000000ac142c
[   52.238843] before set: *temp = 0xffff000000ac142c
[   52.239288] after set: *temp = 0x0
[   52.239487] after: dst_ptr = 0x0
[   52.239531] exiting dla_get_dma_address(), got dst_ptr = 0 (index = 0)
[   52.240815] dla_data_read(src_index = 0): mapped dma_buf(handle = 7, offset = 0) to vaddr = 0xffff000040001000
[   52.243966] *********************************************************
[   52.244327] NVDLA FW dla_network_desc
[   52.244538] ---------------------------------------------------------
[   52.244847] op desc index      = 10
[   52.246763] surface desc index = 11
[   52.247026] dep graph index    = 9
[   52.247237] lut data index     = 12
[   52.247447] stat_list_index    = -1
[   52.247653] roi array index    = -1
[   52.247859] surface index      = -1
[   52.248069] num rois           = 1
[   52.248270] num ops            = 52
[   52.248474] num luts           = 0
[   52.248677] num addr           = 14
[   52.248877] input layer        = 0
[   52.251666] dynamic roi        = 0
[   52.251982] entered dla_get_dma_address(index = 10):
[   52.252219]  in branch dla_get_dma_address(DESTINATION_PROCESSOR):
[   52.252512] before: dst_ptr = 0x0
[   52.252536] before set: *temp = 0x0
[   52.252872] after set: *temp = 0xa
[   52.255026] after: dst_ptr = 0xa
[   52.255063] exiting dla_get_dma_address(), got dst_ptr = a (index = 10)
[   52.255594] getting surface_desc_addr:
[   52.255806] before: task->surface_desc_addr = 0x0
[   52.255852] entered dla_get_dma_address(index = 11):
[   52.256291]  in branch dla_get_dma_address(DESTINATION_PROCESSOR):
[   52.256563] before: dst_ptr = 0x0
[   52.256585] before set: *temp = 0x0
[   52.256927] after set: *temp = 0xb
[   52.259601] after: dst_ptr = 0xb
[   52.259638] exiting dla_get_dma_address(), got dst_ptr = b (index = 11)
[   52.260159] after: task->surface_desc_addr = 0xb
[   52.260203] 
[   52.260564] entered dla_get_dma_address(index = 9):
[   52.260795]  in branch dla_get_dma_address(DESTINATION_PROCESSOR):
[   52.263048] before: dst_ptr = 0x0
[   52.263080] before set: *temp = 0x0
[   52.263476] after set: *temp = 0x9
[   52.263654] after: dst_ptr = 0x9
[   52.263676] exiting dla_get_dma_address(), got dst_ptr = 9 (index = 9)
[   52.264211] Exit:dla_read_network_config status=0
[   52.264522] *********************************************************
[   52.264830] NVDLA FW address list
[   52.267210] ---------------------------------------------------------
[   52.267599] task base address        = 0
[   52.267819] op desc address          = 10
[   52.268044] surface desc address     = 11
[   52.268263] dependency graph address = 9
[   52.268483] LUT data address         = 0
[   52.268703] stat address             = 0
[   52.268924] ROI array address        = 0
[   52.271389] surface address          = 0
[   52.271856] Enter: dla_initiate_processors
[   52.272648] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.275161] Enter: dla_submit_operation
[   52.275460] Prepare Convolution operation index 0 ROI 0 dep_count 1
[   52.275769] Enter: dla_prepare_operation

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9004


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x3


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 670:NV_NVDLA_csb_master::cacc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x9004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.276580] processor:Convolution group:0, rdma_group:0 available
[   52.278747] Enter: dla_read_config
[   52.279130] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[   52.279677] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[   52.280316] *********************************************************
[   52.280625] NVDLA FW ROI[0]: dla_conv_surface_desc
[   52.280868] ---------------------------------------------------------
[   52.283258] weight_data         = [ dla_data_cube =>
[   52.283606]     type          = 0
[   52.283806]     address       = 1
[   52.284011]     offset        = 0
[   52.284212]     width         = 7
[   52.284417]     height        = 7
[   52.284616]     channel       = 3
[   52.284818]     size          = 18816
[   52.287259]     line_stride   = 0
[   52.287524]     surf_stride   = 0
[   52.287724]     plane_stride  = 0
[   52.287923] ]
[   52.287980] wmb_data            = [ dla_data_cube =>
[   52.288325]     type          = 0
[   52.288506]     address       = 0
[   52.288687]     offset        = 0
[   52.288863]     width         = 0
[   52.291397]     height        = 0
[   52.291636]     channel       = 0
[   52.291814]     size          = 0
[   52.291995]     line_stride   = 0
[   52.292178]     surf_stride   = 0
[   52.292357]     plane_stride  = 0
[   52.292534] ]
[   52.292576] wgs_data            = [ dla_data_cube =>
[   52.292928]     type          = 0
[   52.295491]     address       = 0
[   52.295766]     offset        = 0
[   52.295953]     width         = 0
[   52.296139]     height        = 0
[   52.296320]     channel       = 0
[   52.296498]     size          = 0
[   52.296683]     line_stride   = 0
[   52.296862]     surf_stride   = 0
[   52.299267]     plane_stride  = 0
[   52.299505] ]
[   52.299548] src_data            = [ dla_data_cube =>
[   52.299906]     type          = 0
[   52.300093]     address       = 7
[   52.300282]     offset        = 0
[   52.300465]     width         = e0
[   52.300647]     height        = 44
[   52.300832]     channel       = 3
[   52.303369]     size          = 487424
[   52.303633]     line_stride   = 7168
[   52.303825]     surf_stride   = 1605632
[   52.304026]     plane_stride  = 0
[   52.304205] ]
[   52.304246] dst_data            = [ dla_data_cube =>
[   52.304602]     type          = 2
[   52.304794]     address       = -1
[   52.304976]     offset        = 0
[   52.307530]     width         = 70
[   52.307769]     height        = 21
[   52.307960]     channel       = 40
[   52.308144]     size          = 473088
[   52.308337]     line_stride   = 3584
[   52.308528]     surf_stride   = 118272
[   52.308723]     plane_stride  = 0
[   52.308901] ]
[   52.308950] offset_u            = 0
[   52.313013] in_line_uv_stride   = 0
[   52.313013] 
[   52.315977] *********************************************************
[   52.316565] NVDLA FW ROI[0]: dla_conv_op_desc
[   52.316988] ---------------------------------------------------------
[   52.320170] conv_mode          = 0
[   52.320670] data_reuse         = 0
[   52.322792] weight_reuse       = 0
[   52.323051] skip_data_rls      = 0
[   52.323249] skip_weight_rls    = 1
[   52.323448] entry_per_slice    = 56
[   52.323655] data_format        = 36
[   52.323860] pixel_mapping      = 0
[   52.324059] fetch_grain        = 1
[   52.324254] batch              = 1
[   52.324449] weight_format      = 0
[   52.324675] data_bank          = 15
[   52.324878] weight_bank        = 1
[   52.327745] batch_stride       = 0
[   52.328002] post_extension     = 0
[   52.328202] pixel_override     = 1
[   52.328407] release            = 68
[   52.328613] input_width_csc    = 224
[   52.328827] input_height_csc   = 68
[   52.330955] input_channel_csc  = 3
[   52.331234] kernel_width_csc   = 7
[   52.331441] kernel_height_csc  = 7
[   52.331641] kernel_channel_csc = 3
[   52.331842] input_width_cmac   = 112
[   52.332049] input_height_cmac  = 33
[   52.332253] bytes_per_kernel   = 294
[   52.332459] mean_ry            = 0
[   52.332663] mean_gu            = 0
[   52.332867] mean_bv            = 0
[   52.335523] mean_ax            = 0
[   52.335788] mean_format        = 0
[   52.335990] conv_stride_x      = 2
[   52.336193] conv_stride_y      = 2
[   52.336391] pad_x_left         = 3
[   52.336587] pad_x_right        = 3
[   52.336792] pad_y_top          = 3
[   52.336994] pad_y_bottom       = 0
[   52.339407] dilation_x         = 1
[   52.339666] dilation_y         = 1
[   52.339869] pra_truncate       = 0
[   52.340070] in_precision       = 2
[   52.340276] out_precision      = 2
[   52.340489] pad_val            = 0
[   52.340685] in_cvt             =
[   52.340901] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[   52.344620] out_cvt            =
[   52.347084] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[   52.347671] 
[   52.347997] Exit: dla_read_config
[   52.348470] Exit: dla_prepare_operation status=0
[   52.351027] Enter: dla_program_operation
[   52.351368] Program Convolution operation index 0 ROI 0 Group[0]

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9004


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7004


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x7004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8004


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x8004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6004


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5004


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.352421] 
[   52.352421] entered processor_conv_program():
[   52.352825] conv getting weight_address:
[   52.354990] entered dla_get_dma_cube_address(index = 1, offset = 0x0):
[   52.355393] entered dla_get_dma_address(index = 1):
[   52.355690] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.355992] entered dla_read_dma_address(index = 1):
[   52.356335] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[   52.358879] *phys_addr = 0xc4000000 + 0x0
[   52.359212] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[   52.359575] back to dla_get_dma_cube_address: dst_ptr += 0x0
[   52.359898] conv weight_addr = 0xc4000000
[   52.359898] 
[   52.360221] conv getting input_address:
[   52.360521] entered dla_read_input_address():
[   52.360809] passed to dla_get_dma_cube_address(data->address = 7, data->offset = 0)
[   52.363477] entered dla_get_dma_cube_address(index = 7, offset = 0x0):
[   52.363828] entered dla_get_dma_address(index = 7):
[   52.364063] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.364329] entered dla_read_dma_address(index = 7):
[   52.364576] pass to nvdla_gem_dma_addr(fd = handles[index=7] = 19):
[   52.364887] *phys_addr = 0xc0200000 + 0x0
[   52.367087] exiting dla_get_dma_address(), got dst_ptr = c0200000 (index = 7)
[   52.367458] back to dla_get_dma_cube_address: dst_ptr += 0x0
[   52.367786] conv input_addr = 0xc0200000
[   52.367786] 

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 670:NV_NVDLA_csb_master::cacc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x9000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 582:NV_NVDLA_csb_master::cmac_a2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x7000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 626:NV_NVDLA_csb_master::cmac_b2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x8000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 538:NV_NVDLA_csb_master::csc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x6000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 494:NV_NVDLA_csb_master::cdma2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x5000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x900c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x900c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9010


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x20006f


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9010 len=4 data=0x 0020006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9014


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9014 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9018


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9018 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x901c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x901c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9020


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0xe00


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9020 len=4 data=0x 00000e00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9024


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x1ce00


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9024 len=4 data=0x 0001ce00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9028


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9028 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x902c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x902c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x700c


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x700c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x800c


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x800c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x600c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x10002200


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x600c len=4 data=0x 10002200 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6010


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6010 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6014


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6014 len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6018


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x2


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6018 len=4 data=0x 00000002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x601c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x601c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6020


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6020 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6024


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x37


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6024 len=4 data=0x 00000037 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6028


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6028 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x602c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x60006


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x602c len=4 data=0x 00060006 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6030


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x3f0002


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6030 len=4 data=0x 003f0002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6034


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x4980


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6034 len=4 data=0x 00004980 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6038


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6038 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x603c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x20006f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x603c len=4 data=0x 0020006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6040


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6040 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6044


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0xe6f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6044 len=4 data=0x 00000e6f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6048


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x43


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6048 len=4 data=0x 00000043 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x604c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x10001


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x604c len=4 data=0x 00010001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6050


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6050 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6054


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x30003


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6054 len=4 data=0x 00030003 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6058


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6058 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x605c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0xe


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x605c len=4 data=0x 0000000e resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6060


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6060 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5014


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x10002200


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5014 len=4 data=0x 10002200 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5018


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x100000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5018 len=4 data=0x 00100000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x501c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x501c len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5020


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x2


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5020 len=4 data=0x 00000002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5024


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5024 len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x502c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x502c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5030


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5030 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5034


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc0200000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5034 len=4 data=0x c0200000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5038


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5038 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x503c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc0200000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x503c len=4 data=0x c0200000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5040


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1c00


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5040 len=4 data=0x 00001c00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5048


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x188000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5048 len=4 data=0x 00188000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5044


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5044 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x504c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x504c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5058


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5058 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x505c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x505c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5060


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x37


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5060 len=4 data=0x 00000037 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5064


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5064 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5068


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5068 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x506c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x125


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x506c len=4 data=0x 00000125 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5070


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5070 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5074


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5074 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5078


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5078 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x507c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc4000000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x507c len=4 data=0x c4000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5080


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4980


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5080 len=4 data=0x 00004980 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5098


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5098 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50a4


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50a4 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b0


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x10001


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b0 len=4 data=0x 00010001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b4


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x30303


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b4 len=4 data=0x 00030303 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b8


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b8 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50bc


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xe


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50bc len=4 data=0x 0000000e resp=TLM_OK_RESPONSE
[   52.377604] no desc get due to index==-1
[   52.378241] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.378991] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.379684] no desc get due to index==-1
[   52.380015] no desc get due to index==-1
[   52.380332] no desc get due to index==-1
[   52.380705] no desc get due to index==-1
[   52.384607] Enter: dla_op_programmed
[   52.387780] Update dependency operation index 2 ROI 0 DEP_COUNT=2
[   52.388393] Update dependency operation index 1 ROI 0 DEP_COUNT=1
[   52.388928] enable SDP in dla_update_dependency as depdency are resolved
[   52.391192] Enter: dla_enable_operation
[   52.391525] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[   52.391930] Exit: dla_enable_operation status=0
[   52.392288] Exit: dla_op_programmed
[   52.392525] Exit: dla_program_operation status=0
[   52.392838] Exit: dla_submit_operation
[   52.395277] Enter: dla_dequeue_operation
[   52.395650] Dequeue op from Convolution processor, index=2 ROI=0
[   52.396084] Enter: dla_submit_operation
[   52.396294] Prepare Convolution operation index 2 ROI 0 dep_count 1
[   52.396585] Enter: dla_prepare_operation

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9004


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 670:NV_NVDLA_csb_master::cacc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x9004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.396926] processor:Convolution group:1, rdma_group:0 available
[   52.399222] Enter: dla_read_config
[   52.399512] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[   52.399988] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[   52.400506] *********************************************************
[   52.400790] NVDLA FW ROI[0]: dla_conv_surface_desc
[   52.402873] ---------------------------------------------------------
[   52.403215] weight_data         = [ dla_data_cube =>
[   52.403452]     type          = 0
[   52.403638]     address       = 1
[   52.403823]     offset        = 0
[   52.404010]     width         = 7
[   52.404196]     height        = 7
[   52.404379]     channel       = 3
[   52.404558]     size          = 18816
[   52.404755]     line_stride   = 0
[   52.404933]     surf_stride   = 0
[   52.407789]     plane_stride  = 0
[   52.408025] ]
[   52.408047] wmb_data            = [ dla_data_cube =>
[   52.408375]     type          = 0
[   52.408553]     address       = 0
[   52.408734]     offset        = 0
[   52.408918]     width         = 0
[   52.411250]     height        = 0
[   52.411496]     channel       = 0
[   52.411684]     size          = 0
[   52.411869]     line_stride   = 0
[   52.412054]     surf_stride   = 0
[   52.412238]     plane_stride  = 0
[   52.412419] ]
[   52.412440] wgs_data            = [ dla_data_cube =>
[   52.412778]     type          = 0
[   52.412950]     address       = 0
[   52.415811]     offset        = 0
[   52.416046]     width         = 0
[   52.416223]     height        = 0
[   52.416405]     channel       = 0
[   52.416594]     size          = 0
[   52.416783]     line_stride   = 0
[   52.416967]     surf_stride   = 0
[   52.419276]     plane_stride  = 0
[   52.419512] ]
[   52.419533] src_data            = [ dla_data_cube =>
[   52.419863]     type          = 0
[   52.420042]     address       = 6
[   52.420220]     offset        = 0
[   52.420398]     width         = e0
[   52.420579]     height        = 44
[   52.420772]     channel       = 3
[   52.420982]     size          = 487424
[   52.423739]     line_stride   = 7168
[   52.423982]     surf_stride   = 1605632
[   52.424180]     plane_stride  = 0
[   52.424357] ]
[   52.424378] dst_data            = [ dla_data_cube =>
[   52.424711]     type          = 2
[   52.424890]     address       = -1
[   52.428076]     offset        = 0
[   52.428444]     width         = 70
[   52.428734]     height        = 1f
[   52.429030]     channel       = 40
[   52.431859]     size          = 444416
[   52.432160]     line_stride   = 3584
[   52.432451]     surf_stride   = 111104
[   52.432752]     plane_stride  = 0
[   52.432988] ]
[   52.433028] offset_u            = 0
[   52.436544] in_line_uv_stride   = 0
[   52.436544] 
[   52.436970] *********************************************************
[   52.439148] NVDLA FW ROI[0]: dla_conv_op_desc
[   52.439415] ---------------------------------------------------------
[   52.439710] conv_mode          = 0
[   52.439888] data_reuse         = 0
[   52.440067] weight_reuse       = 1
[   52.440249] skip_data_rls      = 0
[   52.440431] skip_weight_rls    = 1
[   52.440615] entry_per_slice    = 56
[   52.440804] data_format        = 36
[   52.440986] pixel_mapping      = 0
[   52.443768] fetch_grain        = 1
[   52.444006] batch              = 1
[   52.444187] weight_format      = 0
[   52.444371] data_bank          = 15
[   52.444558] weight_bank        = 1
[   52.444736] batch_stride       = 0
[   52.444918] post_extension     = 0
[   52.447225] pixel_override     = 1
[   52.447466] release            = 68
[   52.447657] input_width_csc    = 224
[   52.447839] input_height_csc   = 68
[   52.448020] input_channel_csc  = 3
[   52.448200] kernel_width_csc   = 7
[   52.448382] kernel_height_csc  = 7
[   52.448560] kernel_channel_csc = 3
[   52.448743] input_width_cmac   = 112
[   52.448933] input_height_cmac  = 31
[   52.451606] bytes_per_kernel   = 294
[   52.451888] mean_ry            = 0
[   52.452098] mean_gu            = 0
[   52.452308] mean_bv            = 0
[   52.452525] mean_ax            = 0
[   52.452734] mean_format        = 0
[   52.452943] conv_stride_x      = 2
[   52.455310] conv_stride_y      = 2
[   52.455558] pad_x_left         = 3
[   52.455753] pad_x_right        = 3
[   52.455948] pad_y_top          = 0
[   52.456136] pad_y_bottom       = 0
[   52.456329] dilation_x         = 1
[   52.456529] dilation_y         = 1
[   52.456727] pra_truncate       = 0
[   52.456919] in_precision       = 2
[   52.459497] out_precision      = 2
[   52.459747] pad_val            = 0
[   52.459937] in_cvt             =
[   52.460126] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[   52.460405] out_cvt            =
[   52.460590] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[   52.460870] 
[   52.460989] Exit: dla_read_config
[   52.463433] Exit: dla_prepare_operation status=0
[   52.463729] Enter: dla_program_operation
[   52.463945] Program Convolution operation index 2 ROI 0 Group[1]

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9004


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9004 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7004


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x7004 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8004


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x8004 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6004


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6004 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5004


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5004 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE
[   52.464559] 
[   52.464559] entered processor_conv_program():
[   52.464884] conv getting weight_address:
[   52.467114] entered dla_get_dma_cube_address(index = 1, offset = 0x0):
[   52.467498] entered dla_get_dma_address(index = 1):
[   52.467769] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.468053] entered dla_read_dma_address(index = 1):
[   52.468319] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[   52.468662] *phys_addr = 0xc4000000 + 0x0
[   52.468894] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[   52.471476] back to dla_get_dma_cube_address: dst_ptr += 0x0
[   52.471834] conv weight_addr = 0xc4000000
[   52.471834] 
[   52.472160] conv getting input_address:
[   52.472407] entered dla_read_input_address():
[   52.472665] passed to dla_get_dma_cube_address(data->address = 6, data->offset = 0)
[   52.475039] entered dla_get_dma_cube_address(index = 6, offset = 0x0):
[   52.475440] entered dla_get_dma_address(index = 6):
[   52.475708] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.475994] entered dla_read_dma_address(index = 6):
[   52.476267] pass to nvdla_gem_dma_addr(fd = handles[index=6] = 19):
[   52.476621] *phys_addr = 0xc0200000 + 0x6e400
[   52.476873] exiting dla_get_dma_address(), got dst_ptr = c026e400 (index = 6)
[   52.479384] back to dla_get_dma_cube_address: dst_ptr += 0x0
[   52.479724] conv input_addr = 0xc026e400
[   52.479724] 

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 670:NV_NVDLA_csb_master::cacc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x9000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 582:NV_NVDLA_csb_master::cmac_a2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x7000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 626:NV_NVDLA_csb_master::cmac_b2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x8000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 538:NV_NVDLA_csb_master::csc2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x6000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 494:NV_NVDLA_csb_master::cdma2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x5000 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x900c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x900c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9010


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x1e006f


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9010 len=4 data=0x 001e006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9014


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9014 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9018


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9018 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x901c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x901c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9020


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0xe00


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9020 len=4 data=0x 00000e00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9024


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x1b200


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9024 len=4 data=0x 0001b200 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9028


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9028 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x902c


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x902c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x700c


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x700c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x800c


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x2000


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x800c len=4 data=0x 00002000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x600c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x10102200


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x600c len=4 data=0x 10102200 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6010


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6010 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6014


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6014 len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6018


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x2


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6018 len=4 data=0x 00000002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x601c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x601c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6020


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6020 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6024


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x37


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6024 len=4 data=0x 00000037 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6028


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6028 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x602c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x60006


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x602c len=4 data=0x 00060006 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6030


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x3f0002


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6030 len=4 data=0x 003f0002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6034


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x4980


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6034 len=4 data=0x 00004980 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6038


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6038 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x603c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x1e006f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x603c len=4 data=0x 001e006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6040


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6040 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6044


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0xd8f


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6044 len=4 data=0x 00000d8f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6048


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x43


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6048 len=4 data=0x 00000043 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x604c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x10001


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x604c len=4 data=0x 00010001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6050


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6050 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6054


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x3


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6054 len=4 data=0x 00000003 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6058


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6058 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x605c


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0xe


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x605c len=4 data=0x 0000000e resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6060


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6060 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5014


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x10102200


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5014 len=4 data=0x 10102200 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5018


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x100000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5018 len=4 data=0x 00100000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x501c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x501c len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5020


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x2


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5020 len=4 data=0x 00000002 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5024


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4300df


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5024 len=4 data=0x 004300df resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x502c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x502c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5030


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5030 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5034


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc026e400


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5034 len=4 data=0x c026e400 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5038


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5038 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x503c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc026e400


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x503c len=4 data=0x c026e400 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5040


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1c00


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5040 len=4 data=0x 00001c00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5048


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x188000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5048 len=4 data=0x 00188000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5044


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5044 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x504c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x504c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5058


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5058 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x505c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x505c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5060


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x37


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5060 len=4 data=0x 00000037 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5064


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5064 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5068


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5068 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x506c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x125


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x506c len=4 data=0x 00000125 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5070


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5070 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5074


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5074 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5078


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5078 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x507c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xc4000000


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x507c len=4 data=0x c4000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5080


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x4980


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5080 len=4 data=0x 00004980 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5098


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5098 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50a4


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50a4 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b0


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x10001


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b0 len=4 data=0x 00010001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b4


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x303


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b4 len=4 data=0x 00000303 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50b8


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50b8 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x50bc


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0xe


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x50bc len=4 data=0x 0000000e resp=TLM_OK_RESPONSE
[   52.485996] no desc get due to index==-1
[   52.486508] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.487241] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.487945] no desc get due to index==-1
[   52.488261] no desc get due to index==-1
[   52.488574] no desc get due to index==-1
[   52.488889] no desc get due to index==-1
[   52.492484] Enter: dla_op_programmed
[   52.492893] Update dependency operation index 4 ROI 0 DEP_COUNT=2
[   52.495987] Update dependency operation index 3 ROI 0 DEP_COUNT=2
[   52.496317] Exit: dla_op_programmed
[   52.496503] Exit: dla_program_operation status=0
[   52.496724] Exit: dla_submit_operation
[   52.496982] Exit: dla_dequeue_operation
[   52.499184] Enter: dla_submit_operation
[   52.499451] Prepare SDP operation index 1 ROI 0 dep_count 0
[   52.499706] Enter: dla_prepare_operation

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb004


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 758:NV_NVDLA_csb_master::sdp2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0xb004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa004


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 714:NV_NVDLA_csb_master::sdp_rdma2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0xa004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.500140] processor:SDP group:0, rdma_group:0 available
[   52.500399] Enter: dla_read_config
[   52.500627] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[   52.503085] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[   52.503745] *********************************************************
[   52.504048] NVDLA FW ROI[0]: dla_sdp_surface_desc
[   52.504292] ---------------------------------------------------------
[   52.504582] src_data            = [ dla_data_cube =>
[   52.504837]     type          = 2
[   52.507101]     address       = -1
[   52.507341]     offset        = 0
[   52.507523]     width         = 70
[   52.507712]     height        = 21
[   52.507898]     channel       = 40
[   52.508084]     size          = 473088
[   52.508273]     line_stride   = 3584
[   52.508458]     surf_stride   = 118272
[   52.508648]     plane_stride  = 0
[   52.508822] ]
[   52.508861] x1_data             = [ dla_data_cube =>
[   52.511803]     type          = 0
[   52.512041]     address       = 1
[   52.512222]     offset        = 8000
[   52.512410]     width         = 1
[   52.512589]     height        = 1
[   52.512778]     channel       = 40
[   52.512957]     size          = 128
[   52.515235]     line_stride   = 32
[   52.515475]     surf_stride   = 32
[   52.515658]     plane_stride  = 0
[   52.515832] ]
[   52.515870] x2_data             = [ dla_data_cube =>
[   52.516218]     type          = 0
[   52.516399]     address       = 0
[   52.516581]     offset        = 0
[   52.516758]     width         = 0
[   52.516938]     height        = 0
[   52.519590]     channel       = 0
[   52.519826]     size          = 0
[   52.520001]     line_stride   = 0
[   52.520177]     surf_stride   = 0
[   52.520359]     plane_stride  = 0
[   52.520542] ]
[   52.520580] y_data              = [ dla_data_cube =>
[   52.520925]     type          = 0
[   52.523339]     address       = 0
[   52.523580]     offset        = 0
[   52.523759]     width         = 0
[   52.523947]     height        = 0
[   52.524126]     channel       = 0
[   52.524306]     size          = 0
[   52.524502]     line_stride   = 0
[   52.524715]     surf_stride   = 0
[   52.524927]     plane_stride  = 0
[   52.527461] ]
[   52.527509] dst_data            = [ dla_data_cube =>
[   52.527967]     type          = 0
[   52.528181]     address       = 2
[   52.528392]     offset        = 0
[   52.528602]     width         = 70
[   52.528814]     height        = 21
[   52.531242]     channel       = 40
[   52.531513]     size          = 473088
[   52.531735]     line_stride   = 3584
[   52.531960]     surf_stride   = 401408
[   52.532180]     plane_stride  = 0
[   52.532386] ]
[   52.532488] *********************************************************
[   52.532963] NVDLA FW ROI[0]: dla_sdp_op_desc
[   52.535416] ---------------------------------------------------------
[   52.535841] src_precision    = 2
[   52.536075] dst_precision    = 2
[   52.536311] lut_index        = -1
[   52.536526] out_cvt          =
[   52.536752] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[   52.539038] conv_mode        = 0
[   52.539326] batch_num        = 1
[   52.539538] batch_stride     = 0
[   52.539737] x1_op            = [ dla_sdp_op =>
[   52.540010]     enable         = 1
[   52.540232]     alu_type       = 2
[   52.540444]     type           = 2
[   52.540663]     mode           = 1
[   52.540880]     act            = 1
[   52.543442]     shift_value    = 0
[   52.543717]     truncate       = 0
[   52.543938]     precision      = 2
[   52.544156]     alu_operand    = 0
[   52.544385]     mul_operand    = 1
[   52.544590] cvt.alu_cvt          =
[   52.544830] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.547218] cvt.mul_cvt          =
[   52.547513] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.547823] ]
[   52.547991] x2_op            = [ dla_sdp_op =>
[   52.548241]     enable         = 0
[   52.548434]     alu_type       = 0
[   52.548624]     type           = 0
[   52.548820]     mode           = 0
[   52.549015]     act            = 0
[   52.551597]     shift_value    = 0
[   52.551800]     truncate       = 0
[   52.551995]     precision      = 0
[   52.552188]     alu_operand    = 0
[   52.552384]     mul_operand    = 0
[   52.552577] cvt.alu_cvt          =
[   52.552782] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.555540] cvt.mul_cvt          =
[   52.555799] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.556083] ]
[   52.556228] y_op             = [ dla_sdp_op =>
[   52.556487]     enable         = 0
[   52.556686]     alu_type       = 0
[   52.556878]     type           = 0
[   52.559122]     mode           = 0
[   52.559374]     act            = 0
[   52.559577]     shift_value    = 0
[   52.559771]     truncate       = 0
[   52.559964]     precision      = 0
[   52.560161]     alu_operand    = 0
[   52.560357]     mul_operand    = 0
[   52.560546] cvt.alu_cvt          =
[   52.560747] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.564318] cvt.mul_cvt          =
[   52.564718] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.567203] ]
[   52.567603] Exit: dla_read_config
[   52.568130] Exit: dla_prepare_operation status=0
[   52.568574] Enter: dla_program_operation
[   52.568898] Program SDP operation index 1 ROI 0 Group[0]

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb004


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa004


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x0


Info: NV_NVDLA_csb_master.cpp: 58:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to GLB_BASE, 


Info: NV_NVDLA_csb_master.cpp: 59:Addr: 0x4


Info: NV_NVDLA_csb_master.cpp: 60:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 61:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 62:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 274:NV_NVDLA_csb_master::glb2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x4 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x0


Info: NV_NVDLA_csb_master.cpp: 58:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to GLB_BASE, 


Info: NV_NVDLA_csb_master.cpp: 59:Addr: 0x4


Info: NV_NVDLA_csb_master.cpp: 60:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 61:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 62:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x4 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.571912] 
[   52.571912] entered processor_sdp_program():
[   52.572399] sdp skip getting src_addr
[   52.572399] 
[   52.572748] sdp getting dst_addr:
[   52.572965] entered dla_get_dma_cube_address(index = 2, offset = 0x0):
[   52.575204] entered dla_get_dma_address(index = 2):
[   52.575488] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.575746] entered dla_read_dma_address(index = 2):
[   52.575979] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[   52.576283] *phys_addr = 0xc0800000 + 0x0
[   52.576484] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[   52.576793] back to dla_get_dma_cube_address: dst_ptr += 0x0
[   52.579147] sdp dst_addr = 0xc0800000
[   52.579147] 
[   52.579584] sdp getting x1_addr:
[   52.579803] entered dla_get_dma_cube_address(index = 1, offset = 0x8000):
[   52.580110] entered dla_get_dma_address(index = 1):
[   52.580340] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.580593] entered dla_read_dma_address(index = 1):
[   52.580843] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[   52.583349] *phys_addr = 0xc4000000 + 0x0
[   52.583605] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[   52.583910] back to dla_get_dma_cube_address: dst_ptr += 0x8000
[   52.584196] sdp x1_addr = 0xc4008000
[   52.584196] 
[   52.584485] sdp skip getting x2_addr
[   52.584485] 
[   52.584766] sdp skip getting y_addr
[   52.584766] 

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa070


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa070 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa028


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa028 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa040


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa040 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa058


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa058 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa070


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0xa9


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa070 len=4 data=0x 000000a9 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa00c


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x6f


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa00c len=4 data=0x 0000006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa010


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x20


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa010 len=4 data=0x 00000020 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa014


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa014 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa028


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x2a


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa028 len=4 data=0x 0000002a resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa02c


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0xc4008000


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa02c len=4 data=0x c4008000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa030


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa030 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa034


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x20


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa034 len=4 data=0x 00000020 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa038


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x20


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa038 len=4 data=0x 00000020 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa040


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x31


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa040 len=4 data=0x 00000031 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa058


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x31


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa058 len=4 data=0x 00000031 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb03c


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x6f


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb03c len=4 data=0x 0000006f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb040


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x20


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb040 len=4 data=0x 00000020 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb044


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x3f


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb044 len=4 data=0x 0000003f resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb04c


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb04c len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb048


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0xc0800000


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb048 len=4 data=0x c0800000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb050


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0xe00


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb050 len=4 data=0x 00000e00 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb054


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x62000


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb054 len=4 data=0x 00062000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb058


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x18


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb058 len=4 data=0x 00000018 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb05c


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb05c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb064


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb064 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb06c


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x53


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb06c len=4 data=0x 00000053 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb080


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x53


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb080 len=4 data=0x 00000053 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0b0


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0b0 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0b4


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0b4 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0bc


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0xa


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0bc len=4 data=0x 0000000a resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0c0


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0c0 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0c4


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0c4 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb0c8


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb0c8 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE
[   52.591925] no desc get due to index==-1
[   52.592227] no desc get due to index==-1
[   52.592458] no desc get due to index==-1
[   52.592694] no desc get due to index==-1
[   52.592913] no desc get due to index==-1
[   52.595035] Enter: dla_op_programmed
[   52.595324] Update dependency operation index 3 ROI 0 DEP_COUNT=1
[   52.595646] enable SDP in dla_update_dependency as depdency are resolved
[   52.595975] Enter: dla_enable_operation
[   52.596235] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[   52.596685] Exit: dla_enable_operation status=0
[   52.596934] Exit: dla_op_programmed
[   52.599229] Exit: dla_program_operation status=0
[   52.599568] Enter: dla_enable_operation
[   52.599915] Enable SDP operation index 1 ROI 0

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb004


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa004


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa008


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xa008 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb038


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0xb038 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE
[   52.600675] Enter: dla_op_enabled
[   52.600920] Update dependency operation index 0 ROI 0 DEP_COUNT=1
[   52.603076] enable Convolution in dla_update_dependency as depdency are resolved
[   52.603511] Enter: dla_enable_operation
[   52.603738] Enable Convolution operation index 0 ROI 0

Info: NV_NVDLA_mcif.cpp: 1244:NV_NVDLA_mcif::sdp_b2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4008000


Info: NV_NVDLA_mcif.cpp: 1244:NV_NVDLA_mcif::sdp_b2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4008040


Info: NV_NVDLA_mcif.cpp: 3555:NV_NVDLA_mcif::ReadRequestArbiter, get new request, wake up.


Info: NV_NVDLA_mcif.cpp: 3641:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from sdp_b, begin, atom:2, num_free:81920 credit_mcif2sdp_b_rd_rsp_fifo_=81918.


Info: NV_NVDLA_mcif.cpp: 3643:NV_NVDLA_mcif::ReadRequestArbiter, send read request, sdp_b_rd_req_payload_ from sdp_b, end.


Info: NV_NVDLA_mcif.cpp: 3641:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from sdp_b, begin, atom:2, num_free:81920 credit_mcif2sdp_b_rd_rsp_fifo_=81916.


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9004


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 2333:write to sdp2mcif_wr_cmd_fifo_, addr:c0800000, size:3584, num_free:40960


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc4008000


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc4008000 len=64 data=0x 2b113031 b3be2cfb 32162cab a8142c88 2e0d2c8e b3ad2d6c 2db42d26 2e3a2cbe 2dfe2d5e 2bba333c 2e8a3967 2cd88000 2ba12e25 2bc93941 2e5a2dfb b1ae2a35 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x5


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xb220b0


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0xaf3fa0


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3175:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read sdp_b_rd_atom_enable_fifo_, sdp_b payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3246:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3248:    0x31


Info: NV_NVDLA_mcif.cpp: 3248:    0x30


Info: NV_NVDLA_mcif.cpp: 3248:    0x11


Info: NV_NVDLA_mcif.cpp: 3248:    0x2b


Info: NV_NVDLA_mcif.cpp: 3248:    0xfb


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0xbe


Info: NV_NVDLA_mcif.cpp: 3248:    0xb3


Info: NV_NVDLA_mcif.cpp: 3248:    0xab


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0x16


Info: NV_NVDLA_mcif.cpp: 3248:    0x32


Info: NV_NVDLA_mcif.cpp: 3248:    0x88


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0x14


Info: NV_NVDLA_mcif.cpp: 3248:    0xa8


Info: NV_NVDLA_mcif.cpp: 3248:    0x8e


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0xd


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x6c


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xad


Info: NV_NVDLA_mcif.cpp: 3248:    0xb3


Info: NV_NVDLA_mcif.cpp: 3248:    0x26


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xb4


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xbe


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0x3a


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3251:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, sdp_b payload atom mask is 0x1, write an atom to mcif2sdp_b_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3175:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read sdp_b_rd_atom_enable_fifo_, sdp_b payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3246:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3248:    0x5e


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xfe


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0x3c


Info: NV_NVDLA_mcif.cpp: 3248:    0x33


Info: NV_NVDLA_mcif.cpp: 3248:    0xba


Info: NV_NVDLA_mcif.cpp: 3248:    0x2b


Info: NV_NVDLA_mcif.cpp: 3248:    0x67


Info: NV_NVDLA_mcif.cpp: 3248:    0x39


Info: NV_NVDLA_mcif.cpp: 3248:    0x8a


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x0


Info: NV_NVDLA_mcif.cpp: 3248:    0x80


Info: NV_NVDLA_mcif.cpp: 3248:    0xd8


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0x25


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0xa1


Info: NV_NVDLA_mcif.cpp: 3248:    0x2b


Info: NV_NVDLA_mcif.cpp: 3248:    0x41


Info: NV_NVDLA_mcif.cpp: 3248:    0x39


Info: NV_NVDLA_mcif.cpp: 3248:    0xc9


Info: NV_NVDLA_mcif.cpp: 3248:    0x2b


Info: NV_NVDLA_mcif.cpp: 3248:    0xfb


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0x5a


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x35


Info: NV_NVDLA_mcif.cpp: 3248:    0x2a


Info: NV_NVDLA_mcif.cpp: 3248:    0xae


Info: NV_NVDLA_mcif.cpp: 3248:    0xb1


Info: NV_NVDLA_mcif.cpp: 3251:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, sdp_b payload atom mask is 0x1, write an atom to mcif2sdp_b_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 2402:XXXXXXX NV_NVDLA_mcif::WriteRequest_sdp2mcif, first_base_addr=0xc0800000 total_axi_size is 0xe00 payload_addr=0xc0800000 payload_size=0xe00


Info: NV_NVDLA_mcif.cpp: 2416:NV_NVDLA_mcif::WriteRequest_sdp2mcif, before spliting DMA transaction. user_size_first=0x3 user_size_first=0x3


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7004


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x7004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3643:NV_NVDLA_mcif::ReadRequestArbiter, send read request, sdp_b_rd_req_payload_ from sdp_b, end.


Info: NV_NVDLA_mcif.cpp: 3553:NV_NVDLA_mcif::ReadRequestArbiter, no pending request, waiting.


Info: NV_NVDLA_mcif.cpp: 1370:    0xb3be2cfb2b113031


Info: NV_NVDLA_mcif.cpp: 1370:    0xa8142c8832162cab


Info: NV_NVDLA_mcif.cpp: 1370:    0xb3ad2d6c2e0d2c8e


Info: NV_NVDLA_mcif.cpp: 1370:    0x2e3a2cbe2db42d26


Info: NV_NVDLA_mcif.cpp: 1370:    0x2bba333c2dfe2d5e


Info: NV_NVDLA_mcif.cpp: 1370:    0x2cd880002e8a3967


Info: NV_NVDLA_mcif.cpp: 1370:    0x2bc939412ba12e25


Info: NV_NVDLA_mcif.cpp: 1370:    0xb1ae2a352e5a2dfb


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8004


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x8004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc4008040


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc4008040 len=64 data=0x 2e1f2e27 2ed12e6f 311e3133 2cce2df3 2964af0a 9faf2ea4 29aa2f3a 29a4b24d 324cb5c4 2d9a2b50 2db42939 2f382eb9 2edc2d18 2d7c2dbe 2eb8b355 2dfc2905 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x5


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xae4a80


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0xae3610


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3175:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read sdp_b_rd_atom_enable_fifo_, sdp_b payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3246:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3248:    0x27


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x1f


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x6f


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0xd1


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x33


Info: NV_NVDLA_mcif.cpp: 3248:    0x31


Info: NV_NVDLA_mcif.cpp: 3248:    0x1e


Info: NV_NVDLA_mcif.cpp: 3248:    0x31


Info: NV_NVDLA_mcif.cpp: 3248:    0xf3


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xce


Info: NV_NVDLA_mcif.cpp: 3248:    0x2c


Info: NV_NVDLA_mcif.cpp: 3248:    0xa


Info: NV_NVDLA_mcif.cpp: 3248:    0xaf


Info: NV_NVDLA_mcif.cpp: 3248:    0x64


Info: NV_NVDLA_mcif.cpp: 3248:    0x29


Info: NV_NVDLA_mcif.cpp: 3248:    0xa4


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0xaf


Info: NV_NVDLA_mcif.cpp: 3248:    0x9f


Info: NV_NVDLA_mcif.cpp: 3248:    0x3a


Info: NV_NVDLA_mcif.cpp: 3248:    0x2f


Info: NV_NVDLA_mcif.cpp: 3248:    0xaa


Info: NV_NVDLA_mcif.cpp: 3248:    0x29


Info: NV_NVDLA_mcif.cpp: 3248:    0x4d


Info: NV_NVDLA_mcif.cpp: 3248:    0xb2


Info: NV_NVDLA_mcif.cpp: 3248:    0xa4


Info: NV_NVDLA_mcif.cpp: 3248:    0x29


Info: NV_NVDLA_mcif.cpp: 3251:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, sdp_b payload atom mask is 0x1, write an atom to mcif2sdp_b_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3175:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read sdp_b_rd_atom_enable_fifo_, sdp_b payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3246:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3248:    0xc4


Info: NV_NVDLA_mcif.cpp: 3248:    0xb5


Info: NV_NVDLA_mcif.cpp: 3248:    0x4c


Info: NV_NVDLA_mcif.cpp: 3248:    0x32


Info: NV_NVDLA_mcif.cpp: 3248:    0x50


Info: NV_NVDLA_mcif.cpp: 3248:    0x2b


Info: NV_NVDLA_mcif.cpp: 3248:    0x9a


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0x39


Info: NV_NVDLA_mcif.cpp: 3248:    0x29


Info: NV_NVDLA_mcif.cpp: 3248:    0xb4


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xb9


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x38


Info: NV_NVDLA_mcif.cpp: 3248:    0x2f


Info: NV_NVDLA_mcif.cpp: 3248:    0x18


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0xdc


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0xbe


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0x7c


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3248:    0x55


Info: NV_NVDLA_mcif.cpp: 3248:    0xb3


Info: NV_NVDLA_mcif.cpp: 3248:    0xb8


Info: NV_NVDLA_mcif.cpp: 3248:    0x2e


Info: NV_NVDLA_mcif.cpp: 3248:    0x5


Info: NV_NVDLA_mcif.cpp: 3248:    0x29


Info: NV_NVDLA_mcif.cpp: 3248:    0xfc


Info: NV_NVDLA_mcif.cpp: 3248:    0x2d


Info: NV_NVDLA_mcif.cpp: 3251:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, sdp_b payload atom mask is 0x1, write an atom to mcif2sdp_b_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 3555:NV_NVDLA_mcif::ReadRequestArbiter, get new request, wake up.


Info: NV_NVDLA_mcif.cpp: 3553:NV_NVDLA_mcif::ReadRequestArbiter, no pending request, waiting.


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6004


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 1370:    0x2ed12e6f2e1f2e27


Info: NV_NVDLA_mcif.cpp: 1370:    0x2cce2df3311e3133


Info: NV_NVDLA_mcif.cpp: 1370:    0x9faf2ea42964af0a


Info: NV_NVDLA_mcif.cpp: 1370:    0x29a4b24d29aa2f3a


Info: NV_NVDLA_mcif.cpp: 1370:    0x2d9a2b50324cb5c4


Info: NV_NVDLA_mcif.cpp: 1370:    0x2f382eb92db42939


Info: NV_NVDLA_mcif.cpp: 1370:    0x2d7c2dbe2edc2d18


Info: NV_NVDLA_mcif.cpp: 1370:    0x2dfc29052eb8b355


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5004


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3555:NV_NVDLA_mcif::ReadRequestArbiter, get new request, wake up.


Info: NV_NVDLA_mcif.cpp: 3553:NV_NVDLA_mcif::ReadRequestArbiter, no pending request, waiting.


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x500c


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 494:NV_NVDLA_csb_master::cdma2csb_resp_b_transport. Err bit: 0x0 Data: 0x1


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0x500c len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x9000


Info: NV_NVDLA_csb_master.cpp: 139:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CACC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 140:Addr: 0x9008


Info: NV_NVDLA_csb_master.cpp: 141:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 142:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 143:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x9008 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x7000


Info: NV_NVDLA_csb_master.cpp: 121:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_A_BASE, 


Info: NV_NVDLA_csb_master.cpp: 122:Addr: 0x7008


Info: NV_NVDLA_csb_master.cpp: 123:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 124:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 125:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x7008 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x8000


Info: NV_NVDLA_csb_master.cpp: 130:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CMAC_B_BASE, 


Info: NV_NVDLA_csb_master.cpp: 131:Addr: 0x8008


Info: NV_NVDLA_csb_master.cpp: 132:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 133:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 134:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x8008 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x6000


Info: NV_NVDLA_csb_master.cpp: 112:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CSC_BASE, 


Info: NV_NVDLA_csb_master.cpp: 113:Addr: 0x6008


Info: NV_NVDLA_csb_master.cpp: 114:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 115:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 116:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x6008 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0x5000


Info: NV_NVDLA_csb_master.cpp: 103:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to CDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 104:Addr: 0x5010


Info: NV_NVDLA_csb_master.cpp: 105:Data: 0x1


Info: NV_NVDLA_csb_master.cpp: 106:Is write: 0x1


Info: NV_NVDLA_csb_master.cpp: 107:nposted: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=1 addr=0x5010 len=4 data=0x 00000001 resp=TLM_OK_RESPONSE
[   52.608348] Enter: dla_op_enabled
[   52.608622] Exit: dla_op_enabled
[   52.608813] Exit: dla_enable_operation status=0
[   52.610593] Exit: dla_op_enabled
[   52.610836] Exit: dla_enable_operation status=0
[   52.611074] Exit: dla_submit_operation
[   52.611276] Enter: dla_dequeue_operation
[   52.611476] Dequeue op from SDP processor, index=3 ROI=0
[   52.611723] Enter: dla_submit_operation
[   52.611925] Prepare SDP operation index 3 ROI 0 dep_count 0
[   52.612177] Enter: dla_prepare_operation

Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xb000


Info: NV_NVDLA_csb_master.cpp: 157:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_BASE, 


Info: NV_NVDLA_csb_master.cpp: 158:Addr: 0xb004


Info: NV_NVDLA_csb_master.cpp: 159:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 160:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 161:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 758:NV_NVDLA_csb_master::sdp2csb_resp_b_transport. Err bit: 0x0 Data: 0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0xb004 len=4 data=0x 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3555:NV_NVDLA_mcif::ReadRequestArbiter, get new request, wake up.


Info: NV_NVDLA_mcif.cpp: 3686:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_dat, begin, atom:2, num_free:81920 credit_mcif2cdma_dat_rd_rsp_fifo_=81918.


Info: NV_NVDLA_mcif.cpp: 3688:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_dat_rd_req_payload_ from cdma_dat, end.


Info: NV_NVDLA_mcif.cpp: 3686:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_dat, begin, atom:2, num_free:81920 credit_mcif2cdma_dat_rd_rsp_fifo_=81916.


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000000


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163840


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163839


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000000, , num_free:81920


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000000


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000040


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163838


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163837


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000040, , num_free:81919


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000040


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000080


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163836


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163835


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000080, , num_free:81918


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000080


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40000c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163834


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163833


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40000c0, , num_free:81917


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40000c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000100


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163832


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163831


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000100, , num_free:81916


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000100


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000140


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163830


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163829


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000140, , num_free:81915


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000140


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000180


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163828


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163827


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000180, , num_free:81914


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000180


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40001c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163826


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163825


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40001c0, , num_free:81913


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40001c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000200


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163824


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163823


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000200, , num_free:81912


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000200


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000240


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163822


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163821


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000240, , num_free:81911


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000240


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000280


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163820


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163819


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000280, , num_free:81910


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000280


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40002c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163818


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163817


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40002c0, , num_free:81909


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40002c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000300


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163816


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163815


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000300, , num_free:81908


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000300


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163814


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163813


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000340, , num_free:81907


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000340


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163812


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163811


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000380, , num_free:81906


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000380


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40003c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163810


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163809


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40003c0, , num_free:81905


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40003c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163808


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163807


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000400, , num_free:81904


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000400


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000440


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163806


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163805


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000440, , num_free:81903


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000440


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000480


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163804


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163803


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000480, , num_free:81902


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000480


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40004c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163802


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163801


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40004c0, , num_free:81901


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40004c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000500


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163799


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000500, , num_free:81900


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000500


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163798


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163797


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000540, , num_free:81899


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000540


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163796


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163795


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000580, , num_free:81898


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000580


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40005c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163794


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163793


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40005c0, , num_free:81897


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40005c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163792


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163791


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000600, , num_free:81896


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000600


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000640


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163790


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163789


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000640, , num_free:81895


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000640


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000680


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163788


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163787


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000680, , num_free:81894


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000680


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40006c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163786


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163785


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40006c0, , num_free:81893


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40006c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000700


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163784


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163783


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000700, , num_free:81892


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000700


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163782


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163781


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000740, , num_free:81891


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000740


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163779


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000780, , num_free:81890


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000780


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40007c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163778


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163777


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40007c0, , num_free:81889


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40007c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163776


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163775


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000800, , num_free:81888


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000800


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000840


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163774


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163773


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000840, , num_free:81887


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000840


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000880


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163772


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163771


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000880, , num_free:81886


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000880


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40008c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163770


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163769


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40008c0, , num_free:81885


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40008c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000900


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163768


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163767


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000900, , num_free:81884


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000900


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000940


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163766


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163765


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000940, , num_free:81883


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000940


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000980


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163764


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163763


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000980, , num_free:81882


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000980


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40009c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163762


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163761


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40009c0, , num_free:81881


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40009c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000a00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163760


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163759


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a00, , num_free:81880


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000a40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163758


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163757


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a40, , num_free:81879


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000a80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163756


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163755


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a80, , num_free:81878


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000a80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000ac0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163754


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163753


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000ac0, , num_free:81877


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000ac0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000b00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163752


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163751


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b00, , num_free:81876


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000b40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163750


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163749


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b40, , num_free:81875


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000b80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163748


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163747


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b80, , num_free:81874


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000b80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000bc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163746


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163745


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000bc0, , num_free:81873


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000bc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000c00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163744


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163743


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c00, , num_free:81872


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000c40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163742


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163741


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c40, , num_free:81871


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000c80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163739


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c80, , num_free:81870


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000c80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000cc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163738


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163737


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000cc0, , num_free:81869


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000cc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000d00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163736


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163735


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d00, , num_free:81868


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000d40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163734


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163733


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d40, , num_free:81867


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000d80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163732


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163731


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d80, , num_free:81866


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000d80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000dc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163730


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163729


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000dc0, , num_free:81865


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000dc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000e00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163728


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163727


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e00, , num_free:81864


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000e40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163726


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163725


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e40, , num_free:81863


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000e80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163724


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163723


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e80, , num_free:81862


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000e80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000ec0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163722


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163721


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000ec0, , num_free:81861


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000ec0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000f00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163720


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163719


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f00, , num_free:81860


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000f40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163718


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163717


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f40, , num_free:81859


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000f80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163716


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163715


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f80, , num_free:81858


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000f80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4000fc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163714


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163713


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4000fc0, , num_free:81857


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4000fc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001000


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163712


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163711


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001000, , num_free:81856


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001000


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001040


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163710


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163709


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001040, , num_free:81855


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001040


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001080


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163708


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163707


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001080, , num_free:81854


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001080


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40010c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163706


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163705


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40010c0, , num_free:81853


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40010c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001100


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163704


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163703


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001100, , num_free:81852


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001100


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001140


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163702


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163701


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001140, , num_free:81851


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001140


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001180


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163700


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163699


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001180, , num_free:81850


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001180


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40011c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163698


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163697


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40011c0, , num_free:81849


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40011c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001200


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163696


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163695


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001200, , num_free:81848


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001200


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001240


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163694


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163693


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001240, , num_free:81847


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001240


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001280


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163692


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163691


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001280, , num_free:81846


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001280


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40012c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163690


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163689


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40012c0, , num_free:81845


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40012c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001300


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163688


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163687


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001300, , num_free:81844


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001300


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163686


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163685


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001340, , num_free:81843


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001340


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163684


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163683


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001380, , num_free:81842


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001380


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40013c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163682


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163681


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40013c0, , num_free:81841


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40013c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163680


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163679


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001400, , num_free:81840


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001400


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001440


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163678


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163677


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001440, , num_free:81839


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001440


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001480


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163676


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163675


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001480, , num_free:81838


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001480


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40014c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163674


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163673


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40014c0, , num_free:81837


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40014c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001500


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163672


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163671


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001500, , num_free:81836


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001500


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163670


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163669


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001540, , num_free:81835


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001540


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163668


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163667


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001580, , num_free:81834


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001580


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40015c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163666


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163665


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40015c0, , num_free:81833


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40015c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163664


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163663


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001600, , num_free:81832


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001600


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001640


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163662


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163661


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001640, , num_free:81831


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001640


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001680


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163660


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163659


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001680, , num_free:81830


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001680


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40016c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163658


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163657


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40016c0, , num_free:81829


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40016c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001700


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163656


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163655


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001700, , num_free:81828


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001700


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163654


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163653


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001740, , num_free:81827


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001740


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163652


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163651


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001780, , num_free:81826


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001780


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40017c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163650


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163649


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40017c0, , num_free:81825


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40017c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163648


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163647


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001800, , num_free:81824


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001800


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001840


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163646


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163645


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001840, , num_free:81823


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001840


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001880


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163644


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163643


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001880, , num_free:81822


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001880


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40018c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163642


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163641


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40018c0, , num_free:81821


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40018c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001900


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163640


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163639


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001900, , num_free:81820


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001900


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001940


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163638


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163637


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001940, , num_free:81819


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001940


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001980


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163636


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163635


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001980, , num_free:81818


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001980


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40019c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163634


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163633


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40019c0, , num_free:81817


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40019c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001a00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163632


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163631


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a00, , num_free:81816


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001a40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163630


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163629


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a40, , num_free:81815


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001a80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163628


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163627


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a80, , num_free:81814


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001a80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001ac0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163626


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163625


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001ac0, , num_free:81813


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001ac0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001b00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163624


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163623


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b00, , num_free:81812


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001b40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163622


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163621


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b40, , num_free:81811


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001b80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163620


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163619


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b80, , num_free:81810


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001b80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001bc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163618


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163617


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001bc0, , num_free:81809


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001bc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001c00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163616


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163615


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c00, , num_free:81808


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001c40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163614


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163613


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c40, , num_free:81807


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001c80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163612


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163611


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c80, , num_free:81806


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001c80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001cc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163610


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163609


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001cc0, , num_free:81805


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001cc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001d00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163608


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163607


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d00, , num_free:81804


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001d40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163606


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163605


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d40, , num_free:81803


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001d80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163604


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163603


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d80, , num_free:81802


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001d80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001dc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163602


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163601


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001dc0, , num_free:81801


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001dc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001e00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163599


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e00, , num_free:81800


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001e40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163598


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163597


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e40, , num_free:81799


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001e80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163596


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163595


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e80, , num_free:81798


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001e80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001ec0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163594


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163593


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001ec0, , num_free:81797


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001ec0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001f00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163592


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163591


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f00, , num_free:81796


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001f40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163590


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163589


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f40, , num_free:81795


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001f80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163588


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163587


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f80, , num_free:81794


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001f80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4001fc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163586


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163585


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4001fc0, , num_free:81793


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4001fc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002000


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163584


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163583


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002000, , num_free:81792


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002000


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002040


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163582


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163581


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002040, , num_free:81791


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002040


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002080


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163579


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002080, , num_free:81790


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002080


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40020c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163578


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163577


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40020c0, , num_free:81789


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40020c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002100


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163576


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163575


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002100, , num_free:81788


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002100


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002140


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163574


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163573


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002140, , num_free:81787


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002140


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002180


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163572


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163571


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002180, , num_free:81786


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002180


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40021c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163570


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163569


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40021c0, , num_free:81785


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40021c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002200


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163568


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163567


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002200, , num_free:81784


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002200


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002240


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163566


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163565


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002240, , num_free:81783


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002240


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002280


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163564


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163563


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002280, , num_free:81782


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002280


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40022c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163562


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163561


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40022c0, , num_free:81781


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40022c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002300


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163560


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163559


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002300, , num_free:81780


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002300


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163558


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163557


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002340, , num_free:81779


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002340


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163556


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163555


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002380, , num_free:81778


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002380


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40023c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163554


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163553


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40023c0, , num_free:81777


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40023c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163552


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163551


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002400, , num_free:81776


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002400


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002440


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163550


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163549


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002440, , num_free:81775


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002440


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002480


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163548


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163547


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002480, , num_free:81774


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002480


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40024c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163546


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163545


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40024c0, , num_free:81773


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40024c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002500


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163544


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163543


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002500, , num_free:81772


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002500


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163542


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163541


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002540, , num_free:81771


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002540


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163539


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002580, , num_free:81770


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002580


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40025c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163538


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163537


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40025c0, , num_free:81769


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40025c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163536


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163535


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002600, , num_free:81768


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002600


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002640


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163534


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163533


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002640, , num_free:81767


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002640


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002680


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163532


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163531


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002680, , num_free:81766


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002680


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40026c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163530


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163529


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40026c0, , num_free:81765


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40026c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002700


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163528


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163527


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002700, , num_free:81764


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002700


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163526


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163525


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002740, , num_free:81763


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002740


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163524


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163523


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002780, , num_free:81762


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002780


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40027c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163522


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163521


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40027c0, , num_free:81761


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40027c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163520


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163519


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002800, , num_free:81760


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002800


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002840


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163518


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163517


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002840, , num_free:81759


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002840


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002880


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163516


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163515


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002880, , num_free:81758


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002880


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40028c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163514


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163513


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40028c0, , num_free:81757


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40028c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002900


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163512


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163511


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002900, , num_free:81756


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002900


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002940


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163510


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163509


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002940, , num_free:81755


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002940


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002980


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163508


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163507


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002980, , num_free:81754


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002980


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40029c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163506


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163505


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40029c0, , num_free:81753


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40029c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002a00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163504


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163503


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a00, , num_free:81752


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002a40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163502


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163501


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a40, , num_free:81751


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002a80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163500


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163499


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a80, , num_free:81750


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002a80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002ac0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163498


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163497


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002ac0, , num_free:81749


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002ac0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002b00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163496


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163495


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b00, , num_free:81748


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002b40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163494


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163493


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b40, , num_free:81747


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002b80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163492


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163491


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b80, , num_free:81746


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002b80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002bc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163490


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163489


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002bc0, , num_free:81745


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002bc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002c00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163488


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163487


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c00, , num_free:81744


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002c40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163486


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163485


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c40, , num_free:81743


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002c80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163484


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163483


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c80, , num_free:81742


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002c80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002cc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163482


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163481


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002cc0, , num_free:81741


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002cc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002d00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163480


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163479


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d00, , num_free:81740


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002d40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163478


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163477


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d40, , num_free:81739


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002d80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163476


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163475


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d80, , num_free:81738


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002d80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002dc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163474


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163473


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002dc0, , num_free:81737


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002dc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002e00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163472


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163471


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e00, , num_free:81736


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002e40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163470


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163469


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e40, , num_free:81735


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002e80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163468


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163467


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e80, , num_free:81734


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002e80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002ec0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163466


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163465


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002ec0, , num_free:81733


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002ec0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002f00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163464


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163463


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f00, , num_free:81732


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002f40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163462


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163461


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f40, , num_free:81731


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002f80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163460


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163459


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f80, , num_free:81730


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002f80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4002fc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163458


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163457


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4002fc0, , num_free:81729


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4002fc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003000


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163456


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163455


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003000, , num_free:81728


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003000


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003040


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163454


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163453


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003040, , num_free:81727


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003040


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003080


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163452


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163451


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003080, , num_free:81726


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003080


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40030c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163450


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163449


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40030c0, , num_free:81725


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40030c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003100


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163448


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163447


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003100, , num_free:81724


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003100


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003140


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163446


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163445


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003140, , num_free:81723


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003140


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003180


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163444


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163443


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003180, , num_free:81722


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003180


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40031c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163442


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163441


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40031c0, , num_free:81721


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40031c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003200


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163440


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163439


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003200, , num_free:81720


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003200


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003240


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163438


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163437


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003240, , num_free:81719


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003240


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003280


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163436


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163435


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003280, , num_free:81718


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003280


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40032c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163434


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163433


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40032c0, , num_free:81717


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40032c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003300


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163432


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163431


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003300, , num_free:81716


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003300


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163430


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163429


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003340, , num_free:81715


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003340


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163428


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163427


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003380, , num_free:81714


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003380


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40033c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163426


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163425


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40033c0, , num_free:81713


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40033c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163424


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163423


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003400, , num_free:81712


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003400


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003440


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163422


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163421


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003440, , num_free:81711


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003440


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003480


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163420


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163419


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003480, , num_free:81710


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003480


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40034c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163418


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163417


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40034c0, , num_free:81709


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40034c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003500


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163416


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163415


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003500, , num_free:81708


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003500


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163414


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163413


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003540, , num_free:81707


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003540


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163412


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163411


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003580, , num_free:81706


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003580


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40035c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163410


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163409


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40035c0, , num_free:81705


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40035c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163408


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163407


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003600, , num_free:81704


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003600


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003640


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163406


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163405


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003640, , num_free:81703


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003640


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003680


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163404


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163403


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003680, , num_free:81702


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003680


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40036c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163402


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163401


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40036c0, , num_free:81701


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40036c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003700


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163399


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003700, , num_free:81700


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003700


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163398


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163397


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003740, , num_free:81699


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003740


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163396


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163395


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003780, , num_free:81698


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003780


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40037c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163394


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163393


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40037c0, , num_free:81697


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40037c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163392


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163391


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003800, , num_free:81696


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003800


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003840


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163390


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163389


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003840, , num_free:81695


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003840


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003880


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163388


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163387


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003880, , num_free:81694


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003880


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40038c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163386


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163385


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40038c0, , num_free:81693


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40038c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003900


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163384


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163383


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003900, , num_free:81692


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003900


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003940


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163382


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163381


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003940, , num_free:81691


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003940


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003980


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163379


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003980, , num_free:81690


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003980


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40039c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163378


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163377


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40039c0, , num_free:81689


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40039c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003a00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163376


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163375


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a00, , num_free:81688


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003a40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163374


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163373


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a40, , num_free:81687


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003a80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163372


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163371


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a80, , num_free:81686


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003a80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003ac0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163370


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163369


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003ac0, , num_free:81685


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003ac0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003b00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163368


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163367


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b00, , num_free:81684


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003b40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163366


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163365


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b40, , num_free:81683


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003b80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163364


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163363


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b80, , num_free:81682


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003b80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003bc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163362


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163361


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003bc0, , num_free:81681


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003bc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003c00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163360


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163359


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c00, , num_free:81680


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003c40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163358


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163357


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c40, , num_free:81679


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003c80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163356


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163355


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c80, , num_free:81678


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003c80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003cc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163354


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163353


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003cc0, , num_free:81677


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003cc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003d00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163352


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163351


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d00, , num_free:81676


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003d40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163350


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163349


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d40, , num_free:81675


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003d80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163348


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163347


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d80, , num_free:81674


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003d80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003dc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163346


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163345


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003dc0, , num_free:81673


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003dc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003e00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163344


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163343


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e00, , num_free:81672


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003e40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163342


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163341


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e40, , num_free:81671


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003e80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163339


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e80, , num_free:81670


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003e80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003ec0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163338


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163337


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003ec0, , num_free:81669


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003ec0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003f00


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163336


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163335


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f00, , num_free:81668


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f00


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003f40


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163334


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163333


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f40, , num_free:81667


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f40


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003f80


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163332


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163331


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f80, , num_free:81666


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003f80


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4003fc0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163330


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163329


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4003fc0, , num_free:81665


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4003fc0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004000


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163328


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163327


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004000, , num_free:81664


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004000


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004040


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163326


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163325


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004040, , num_free:81663


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004040


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004080


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163324


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163323


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004080, , num_free:81662


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004080


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40040c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163322


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163321


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40040c0, , num_free:81661


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40040c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004100


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163320


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163319


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004100, , num_free:81660


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004100


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004140


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163318


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163317


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004140, , num_free:81659


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004140


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004180


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163316


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163315


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004180, , num_free:81658


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004180


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40041c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163314


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163313


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40041c0, , num_free:81657


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40041c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004200


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163312


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163311


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004200, , num_free:81656


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004200


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004240


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163310


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163309


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004240, , num_free:81655


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004240


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004280


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163308


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163307


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004280, , num_free:81654


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004280


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40042c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163306


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163305


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40042c0, , num_free:81653


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40042c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004300


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163304


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163303


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004300, , num_free:81652


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004300


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004340


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163302


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163301


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004340, , num_free:81651


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004340


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004380


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163300


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163299


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004380, , num_free:81650


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004380


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40043c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163298


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163297


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40043c0, , num_free:81649


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40043c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004400


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163296


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163295


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004400, , num_free:81648


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004400


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004440


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163294


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163293


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004440, , num_free:81647


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004440


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004480


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163292


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163291


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004480, , num_free:81646


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004480


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40044c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163290


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163289


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40044c0, , num_free:81645


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40044c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004500


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163288


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163287


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004500, , num_free:81644


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004500


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004540


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163286


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163285


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004540, , num_free:81643


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004540


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004580


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163284


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163283


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004580, , num_free:81642


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004580


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40045c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163282


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163281


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40045c0, , num_free:81641


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40045c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004600


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163280


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163279


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004600, , num_free:81640


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004600


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004640


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163278


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163277


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004640, , num_free:81639


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004640


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004680


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163276


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163275


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004680, , num_free:81638


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004680


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40046c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163274


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163273


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40046c0, , num_free:81637


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40046c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004700


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163272


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163271


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004700, , num_free:81636


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004700


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004740


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163270


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163269


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004740, , num_free:81635


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004740


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004780


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163268


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163267


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004780, , num_free:81634


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004780


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40047c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163266


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163265


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40047c0, , num_free:81633


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40047c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x3 user_size_last=0x3


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004800


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163264


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163263


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004800, , num_free:81632


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004800


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004840


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163262


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163261


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004840, , num_free:81631


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004840


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004880


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163260


Info: NV_NVDLA_mcif.cpp: 2032:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163259


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004880, , num_free:81630


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004880


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc40048c0


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163258


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163257


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc40048c0, , num_free:81629


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc40048c0


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NV_NVDLA_mcif.cpp: 1974:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before spliting DMA transaction. user_size_first=0x1 user_size_last=0x1


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004900


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163256


Info: NV_NVDLA_mcif.cpp: 2018:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163255


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004900, , num_free:81628


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004900


Info: NV_NVDLA_mcif.cpp: 1976:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, prepare AXI transaction for address: 0xc4004940


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163254


Info: NV_NVDLA_mcif.cpp: 2003:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, write true to cdma_wt_rd_atom_enable_fifo_, num_free:163253


Info: NV_NVDLA_mcif.cpp: 2046:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, before sending data to cdma_wt_rd_req_fifo_ addr=0xc4004940, , num_free:81627


Info: NV_NVDLA_mcif.cpp: 2048:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after sending data to cdma_wt_rd_req_fifo_ addr=0xc4004940


Info: NV_NVDLA_mcif.cpp: 2052:NV_NVDLA_mcif::cdma_wt2mcif_rd_req_b_transport, after spliting DMA transaction


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc0200000


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc0200000 len=64 data=0x 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x8


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xe78b50


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0x146e5a0


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 2067:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, update atom_num_left from cdma_wt2mcif_rd_req_atom_num_fifo_, atom_num_left is 0x8


Info: NV_NVDLA_mcif.cpp: 2069:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, atom_num_left is 0x8


Info: NV_NVDLA_mcif.cpp: 2077:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, num_available:0


Info: NV_NVDLA_csb_master.cpp: 54:NV_NVDLA_csb_master::nvdla2csb_b_transport, base_addr: 0xa000


Info: NV_NVDLA_csb_master.cpp: 148:NV_NVDLA_csb_master::nvdla2csb_b_transport, csb req to SDP_RDMA_BASE, 


Info: NV_NVDLA_csb_master.cpp: 149:Addr: 0xa004


Info: NV_NVDLA_csb_master.cpp: 150:Data: 0x0


Info: NV_NVDLA_csb_master.cpp: 151:Is write: 0x0


Info: NV_NVDLA_csb_master.cpp: 152:nposted: 0x0


Info: NV_NVDLA_csb_master.cpp: 714:NV_NVDLA_csb_master::sdp_rdma2csb_resp_b_transport. Err bit: 0x0 Data: 0x10000


Info: NV_NVDLA_mcif.cpp: 3688:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_dat_rd_req_payload_ from cdma_dat, end.


Info: NV_NVDLA_mcif.cpp: 3686:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_dat, begin, atom:2, num_free:81918 credit_mcif2cdma_dat_rd_rsp_fifo_=81914.


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: nvdla.csb_adaptor: GP: iswrite=0 addr=0xa004 len=4 data=0x 00010000 resp=TLM_OK_RESPONSE
[   52.640688] processor:SDP group:1, rdma_group:1 available
[   52.641840] Enter: dla_read_config
[   52.642084] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[   52.642540] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[   52.643039] *********************************************************
[   52.643325] NVDLA FW ROI[0]: dla_sdp_surface_desc
[   52.643537] ---------------------------------------------------------
[   52.643806] src_data            = [ dla_data_cube =>
[   52.644035]     type          = 2
[   52.644211]     address       = -1
[   52.644390]     offset        = 0
[   52.644564]     width         = 70
[   52.644741]     height        = 1f
[   52.644919]     channel       = 40
[   52.648992]     size          = 444416
[   52.650652]     line_stride   = 3584
[   52.650895]     surf_stride   = 111104
[   52.651098]     plane_stride  = 0
[   52.651282] ]
[   52.651303] x1_data             = [ dla_data_cube =>
[   52.651662]     type          = 0
[   52.651845]     address       = 1
[   52.652024]     offset        = 8000
[   52.652211]     width         = 1
[   52.652387]     height        = 1
[   52.652567]     channel       = 40
[   52.652749]     size          = 128
[   52.652949]     line_stride   = 32
[   52.656944]     surf_stride   = 32
[   52.658635]     plane_stride  = 0
[   52.658876] ]
[   52.658898] x2_data             = [ dla_data_cube =>
[   52.659257]     type          = 0
[   52.659437]     address       = 0
[   52.659617]     offset        = 0
[   52.659805]     width         = 0
[   52.659983]     height        = 0
[   52.660164]     channel       = 0
[   52.660341]     size          = 0
[   52.660518]     line_stride   = 0
[   52.660701]     surf_stride   = 0
[   52.660881]     plane_stride  = 0
[   52.664659] ]
[   52.664689] y_data              = [ dla_data_cube =>
[   52.666535]     type          = 0
[   52.666786]     address       = 0
[   52.666982]     offset        = 0
[   52.667177]     width         = 0
[   52.667366]     height        = 0
[   52.667564]     channel       = 0
[   52.667745]     size          = 0
[   52.667924]     line_stride   = 0
[   52.668105]     surf_stride   = 0
[   52.668280]     plane_stride  = 0
[   52.668456] ]
[   52.668477] dst_data            = [ dla_data_cube =>
[   52.668803]     type          = 0
[   52.668979]     address       = 2

Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc0200040


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc0200040 len=64 data=0x 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x8


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xb07c00


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0xad7e80


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 3688:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_dat_rd_req_payload_ from cdma_dat, end.


Info: NV_NVDLA_mcif.cpp: 3701:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_wt, begin, atom:2, num_free:81920 credit_mcif2cdma_wt_rd_rsp_fifo_=81918.


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc0200080


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc0200080 len=64 data=0x 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x8


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xc5efe0


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0xb23aa0


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 3703:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_wt_rd_req_payload_ from cdma_wt, end.


Info: NV_NVDLA_mcif.cpp: 3686:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_dat, begin, atom:2, num_free:81918 credit_mcif2cdma_dat_rd_rsp_fifo_=81916.


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc4000000


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc4000000 len=64 data=0x 01c80077 003084fc 02ef01d0 85b981ab 88158442 8088033b 060b87a7 08c6056a 08cd8c24 84628075 01698379 8004850a 816a80ca 80298204 0129800f 00838138 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x9


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xae6340


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0xc944a0


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3191:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_wt_rd_atom_enable_fifo_, cdma_wt payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3278:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3280:    0x77


Info: NV_NVDLA_mcif.cpp: 3280:    0x0


Info: NV_NVDLA_mcif.cpp: 3280:    0xc8


Info: NV_NVDLA_mcif.cpp: 3280:    0x1


Info: NV_NVDLA_mcif.cpp: 3280:    0xfc


Info: NV_NVDLA_mcif.cpp: 3280:    0x84


Info: NV_NVDLA_mcif.cpp: 3280:    0x30


Info: NV_NVDLA_mcif.cpp: 3280:    0x0


Info: NV_NVDLA_mcif.cpp: 3280:    0xd0


Info: NV_NVDLA_mcif.cpp: 3280:    0x1


Info: NV_NVDLA_mcif.cpp: 3280:    0xef


Info: NV_NVDLA_mcif.cpp: 3280:    0x2


Info: NV_NVDLA_mcif.cpp: 3280:    0xab


Info: NV_NVDLA_mcif.cpp: 3280:    0x81


Info: NV_NVDLA_mcif.cpp: 3280:    0xb9


Info: NV_NVDLA_mcif.cpp: 3280:    0x85


Info: NV_NVDLA_mcif.cpp: 3280:    0x42


Info: NV_NVDLA_mcif.cpp: 3280:    0x84


Info: NV_NVDLA_mcif.cpp: 3280:    0x15


Info: NV_NVDLA_mcif.cpp: 3280:    0x88


Info: NV_NVDLA_mcif.cpp: 3280:    0x3b


Info: NV_NVDLA_mcif.cpp: 3280:    0x3


Info: NV_NVDLA_mcif.cpp: 3280:    0x88


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0xa7


Info: NV_NVDLA_mcif.cpp: 3280:    0x87


Info: NV_NVDLA_mcif.cpp: 3280:    0xb


Info: NV_NVDLA_mcif.cpp: 3280:    0x6


Info: NV_NVDLA_mcif.cpp: 3280:    0x6a


Info: NV_NVDLA_mcif.cpp: 3280:    0x5


Info: NV_NVDLA_mcif.cpp: 3280:    0xc6


Info: NV_NVDLA_mcif.cpp: 3280:    0x8


Info: NV_NVDLA_mcif.cpp: 3283:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_wt payload atom mask is 0x1, write an atom to mcif2cdma_wt_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3191:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_wt_rd_atom_enable_fifo_, cdma_wt payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3278:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3280:    0x24


Info: NV_NVDLA_mcif.cpp: 3280:    0x8c


Info: NV_NVDLA_mcif.cpp: 3280:    0xcd


Info: NV_NVDLA_mcif.cpp: 3280:    0x8


Info: NV_NVDLA_mcif.cpp: 3280:    0x75


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0x62


Info: NV_NVDLA_mcif.cpp: 3280:    0x84


Info: NV_NVDLA_mcif.cpp: 3280:    0x79


Info: NV_NVDLA_mcif.cpp: 3280:    0x83


Info: NV_NVDLA_mcif.cpp: 3280:    0x69


Info: NV_NVDLA_mcif.cpp: 3280:    0x1


Info: NV_NVDLA_mcif.cpp: 3280:    0xa


Info: NV_NVDLA_mcif.cpp: 3280:    0x85


Info: NV_NVDLA_mcif.cpp: 3280:    0x4


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0xca


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0x6a


Info: NV_NVDLA_mcif.cpp: 3280:    0x81


Info: NV_NVDLA_mcif.cpp: 3280:    0x4


Info: NV_NVDLA_mcif.cpp: 3280:    0x82


Info: NV_NVDLA_mcif.cpp: 3280:    0x29


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0xf


Info: NV_NVDLA_mcif.cpp: 3280:    0x80


Info: NV_NVDLA_mcif.cpp: 3280:    0x29


Info: NV_NVDLA_mcif.cpp: 3280:    0x1


Info: NV_NVDLA_mcif.cpp: 3280:    0x38


Info: NV_NVDLA_mcif.cpp: 3280:    0x81


Info: NV_NVDLA_mcif.cpp: 3280:    0x83


Info: NV_NVDLA_mcif.cpp: 3280:    0x0


Info: NV_NVDLA_mcif.cpp: 3283:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_wt payload atom mask is 0x1, write an atom to mcif2cdma_wt_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 3688:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_dat_rd_req_payload_ from cdma_dat, end.


Info: NV_NVDLA_mcif.cpp: 3701:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_wt, begin, atom:2, num_free:81918 credit_mcif2cdma_wt_rd_rsp_fifo_=81916.


Info: NV_NVDLA_mcif.cpp: 2080:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, read 1st atom of the 64B from mcif2cdma_wt_rd_rsp_fifo_


Info: NV_NVDLA_mcif.cpp: 2089:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, num_available:1


Info: NV_NVDLA_mcif.cpp: 2092:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, read 2nd atom of the 64B from mcif2cdma_wt_rd_rsp_fifo_


Info: NV_NVDLA_mcif.cpp: 2099:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, dma_rd_rsp_payload->pd.dma_read_data.mask is 0x3


Info: NV_NVDLA_mcif.cpp: 2100:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, dma_rd_rsp_payload->pd.dma_read_data.data are :


Info: NV_NVDLA_mcif.cpp: 2102:    0x3084fc01c80077


Info: NV_NVDLA_mcif.cpp: 2102:    0x85b981ab02ef01d0


Info: NV_NVDLA_mcif.cpp: 2102:    0x8088033b88158442


Info: NV_NVDLA_mcif.cpp: 2102:    0x8c6056a060b87a7


Info: NV_NVDLA_mcif.cpp: 2102:    0x8462807508cd8c24


Info: NV_NVDLA_mcif.cpp: 2102:    0x8004850a01698379


Info: NV_NVDLA_mcif.cpp: 2102:    0x80298204816a80ca


Info: NV_NVDLA_mcif.cpp: 2102:    0x8381380129800f


Info: NV_NVDLA_mcif.cpp: 2104:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, before NV_NVDLA_mcif_base::mcif2cdma_wt_rd_rsp_b_transport(dma_rd_rsp_payload, dma_delay_)


Info: NV_NVDLA_mcif.cpp: 2106:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, after NV_NVDLA_mcif_base::mcif2cdma_wt_rd_rsp_b_transport(dma_rd_rsp_payload, dma_delay_)


Info: NV_NVDLA_mcif.cpp: 2069:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, atom_num_left is 0x6


Info: NV_NVDLA_mcif.cpp: 2077:NV_NVDLA_mcif::ReadResp_mcif2cdma_wt, num_available:0


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc02000c0


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc02000c0 len=64 data=0x 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x8


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0x146e640


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64


Info: NV_NVDLA_mcif.cpp: 3132:axi_byte_enable_ptr: 0x0x146e5f0


Info: NV_NVDLA_mcif.cpp: 3133:axi_byte_enable_length: 64


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x0


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81920, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81919.


Info: NV_NVDLA_mcif.cpp: 3150:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, dma_sent_size: 0x20


Info: NV_NVDLA_mcif.cpp: 3187:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, read cdma_dat_rd_atom_enable_fifo_, cdma_dat payload atom mask is 0x1


Info: NV_NVDLA_mcif.cpp: 3270:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, num_free:81919, axi_atom_ptr value:


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3272:    0x0


Info: NV_NVDLA_mcif.cpp: 3275:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport, cdma_dat payload atom mask is 0x1, write an atom to mcif2cdma_dat_rd_rsp_fifo_, num_free:81918.


Info: NV_NVDLA_mcif.cpp: 3703:NV_NVDLA_mcif::ReadRequestArbiter, send read request, cdma_wt_rd_req_payload_ from cdma_wt, end.


Info: NV_NVDLA_mcif.cpp: 3686:NV_NVDLA_mcif::ReadRequestArbiter, send read request, payload from cdma_dat, begin, atom:2, num_free:81918 credit_mcif2cdma_dat_rd_rsp_fifo_=81916.


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NV_NVDLA_mcif.cpp: 1919:    0x0


Info: NvdlaAxiAdaptor.cpp: 71:NvdlaAxiAdaptor::axi_rd_wr_thread, send read request start. address=0xc4000040


Info: nvdla.dbb_adaptor: GP: iswrite=0 addr=0xc4000040 len=64 data=0x 08350314 81a7023c 812e0103 80ab0067 0053014f 81b8012a 01f9803c 057105fc 017a0192 819080d4 86f48611 81b20012 86ad0214 01e105a1 052387c2 03d0818c resp=TLM_OK_RESPONSE

Info: NV_NVDLA_mcif.cpp: 3128:NV_NVDLA_mcif::ext2mcif_rd_rsp_b_transport


Info: NV_NVDLA_mcif.cpp: 3129:axi_id: 0x9


Info: NV_NVDLA_mcif.cpp: 3130:axi_data_ptr: 0x0xae59a0


Info: NV_NVDLA_mcif.cpp: 3131:axi_length: 64

[   52.672962]     offset        = 1ce00
[   52.674648]     width         = 70
[   52.674890]     height        = 1f
[   52.675076]     channel       = 40
[   52.675261]     size          = 444416
[   52.675457]     line_stride   = 3584
[   52.675647]     surf_stride   = 401408
[   52.675838]     plane_stride  = 0
[   52.676012] ]
[   52.676034] *********************************************************
[   52.676409] NVDLA FW ROI[0]: dla_sdp_op_desc
[   52.676616] ---------------------------------------------------------
[   52.676907] src_precision    = 2
[   52.680487] dst_precision    = 2
[   52.680735] lut_index        = -1
[   52.680911] out_cvt          =
[   52.683176] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[   52.683698] conv_mode        = 0
[   52.683975] batch_num        = 1
[   52.684244] batch_stride     = 0
[   52.684501] x1_op            = [ dla_sdp_op =>
[   52.684811]     enable         = 1
[   52.687616]     alu_type       = 2
[   52.687963]     type           = 2
[   52.688251]     mode           = 1
[   52.688538]     act            = 1
[   52.688810]     shift_value    = 0
[   52.691574]     truncate       = 0
[   52.691914]     precision      = 2
[   52.692184]     alu_operand    = 0
[   52.692462]     mul_operand    = 1
[   52.692728] cvt.alu_cvt          =
[   52.693024] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.695547] cvt.mul_cvt          =
[   52.695767] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.696040] ]
[   52.696160] x2_op            = [ dla_sdp_op =>
[   52.696387]     enable         = 0
[   52.696576]     alu_type       = 0
[   52.696827]     type           = 0
[   52.699147]     mode           = 0
[   52.699433]     act            = 0
[   52.699658]     shift_value    = 0
[   52.699915]     truncate       = 0
[   52.700135]     precision      = 0
[   52.700355]     alu_operand    = 0
[   52.700593]     mul_operand    = 0
[   52.700827] cvt.alu_cvt          =
[   52.703256] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.703677] cvt.mul_cvt          =
[   52.703931] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.704290] ]
[   52.704434] y_op             = [ dla_sdp_op =>
[   52.704710]     enable         = 0
[   52.704939]     alu_type       = 0
[   52.707558]     type           = 0
[   52.707873]     mode           = 0
[   52.708133]     act            = 0
[   52.708373]     shift_value    = 0
[   52.708586]     truncate       = 0
[   52.708813]     precision      = 0
[   52.710946]     alu_operand    = 0
[   52.711230]     mul_operand    = 0
[   52.711432] cvt.alu_cvt          =
[   52.711656] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.711974] cvt.mul_cvt          =
[   52.712188] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[   52.712523] ]
[   52.712678] Exit: dla_read_config
[   52.712930] Exit: dla_prepare_operation status=0
[   52.716205] Enter: dla_program_operation
[   52.716555] Program SDP operation index 3 ROI 0 Group[1]
[   52.719776] 
[   52.719776] entered processor_sdp_program():
[   52.720235] sdp skip getting src_addr
[   52.720235] 
[   52.720580] sdp getting dst_addr:
[   52.720819] entered dla_get_dma_cube_address(index = 2, offset = 0x1ce00):
[   52.723311] entered dla_get_dma_address(index = 2):
[   52.723606] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.723871] entered dla_read_dma_address(index = 2):
[   52.724120] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[   52.724443] *phys_addr = 0xc0800000 + 0x0
[   52.724656] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[   52.724979] back to dla_get_dma_cube_address: dst_ptr += 0x1ce00
[   52.727443] sdp dst_addr = 0xc081ce00
[   52.727443] 
[   52.727788] sdp getting x1_addr:
[   52.727977] entered dla_get_dma_cube_address(index = 1, offset = 0x8000):
[   52.728289] entered dla_get_dma_address(index = 1):
[   52.728522] in branch dla_get_dma_address(DESTINATION_DMA):
[   52.728786] entered dla_read_dma_address(index = 1):
[   52.731164] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[   52.731541] *phys_addr = 0xc4000000 + 0x0
[   52.731754] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[   52.732074] back to dla_get_dma_cube_address: dst_ptr += 0x8000
[   52.732350] sdp x1_addr = 0xc4008000
[   52.732350] 
[   52.732614] sdp skip getting x2_addr
[   52.732614] 
[   52.732872] sdp skip getting y_addr
[   52.732872] 
[   52.746804] no desc get due to index==-1
[   52.747151] no desc get due to index==-1
[   52.747473] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.748169] no desc get due to index==-1
[   52.748428] no desc get due to index==-1
[   52.748686] no desc get due to index==-1
[   52.748938] Enter: dla_op_programmed
[   52.751706] Update dependency operation index 5 ROI 0 DEP_COUNT=2
[   52.752134] Exit: dla_op_programmed
[   52.752373] Exit: dla_program_operation status=0
[   52.752655] Enter: dla_enable_operation
[   52.755142] Enable SDP operation index 3 ROI 0
[   52.756463] Enter: dla_op_enabled
[   52.756701] Update dependency operation index 2 ROI 0 DEP_COUNT=1
[   52.759077] enable Convolution in dla_update_dependency as depdency are resolved
[   52.759568] Enter: dla_enable_operation
[   52.759828] Enable Convolution operation index 2 ROI 0
[   52.764485] Enter: dla_op_enabled
[   52.764761] Exit: dla_op_enabled
[   52.764988] Exit: dla_enable_operation status=0
[   52.766958] Exit: dla_op_enabled
[   52.767207] Exit: dla_enable_operation status=0
[   52.767439] Exit: dla_submit_operation
[   52.767647] Exit: dla_dequeue_operation
[   52.767899] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[   52.768366] Enter: dla_submit_operation
[   52.768579] Prepare PDP operation index 8 ROI 0 dep_count 1
[   52.768838] Enter: dla_prepare_operation
[  601.698332] processor:PDP group:0, rdma_group:0 available
[  601.698927] Enter: dla_read_config
[  601.699303] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.700170] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.701858] *********************************************************
[  601.702460] NVDLA FW ROI[0]: dla_pdp_surface_desc
[  601.702819] ---------------------------------------------------------
[  601.703164] src_data            = [ dla_data_cube =>
[  601.703446]     type          = 0
[  601.703641]     address       = 2
[  601.703843]     offset        = 0
[  601.704033]     width         = 70
[  601.704235]     height        = 70
[  601.704434]     channel       = 40
[  601.704648]     size          = 1605632
[  601.704877]     line_stride   = 3584
[  601.705322]     surf_stride   = 401408
[  601.705572]     plane_stride  = 0
[  601.705776] ]
[  601.705818] dst_data            = [ dla_data_cube =>
[  601.706223]     type          = 0
[  601.706414]     address       = 2
[  601.706615]     offset        = 200000
[  601.706833]     width         = 38
[  601.707035]     height        = 38
[  601.707248]     channel       = 40
[  601.707453]     size          = 401408
[  601.707672]     line_stride   = 1792
[  601.707890]     surf_stride   = 100352
[  601.708118]     plane_stride  = 0
[  601.708331] ]
[  601.708436] *********************************************************
[  601.708942] NVDLA FW ROI[0]: dla_pdp_op_desc
[  601.709694] ---------------------------------------------------------
[  601.710160] precision               = 2
[  601.710412] padding_value           = [
[  601.710671]  0
[  601.710860]  0
[  601.711005]  0
[  601.711144]  0
[  601.711282]  0
[  601.711421]  0
[  601.711562]  0
[  601.711712] ]
[  601.711873] split_num               = 1
[  601.712121] partial_in_width_first  = 0
[  601.712371] partial_in_width_mid    = 0
[  601.712623] partial_in_width_last   = 0
[  601.712876] partial_width_first     = 0
[  601.713275] partial_width_mid       = 0
[  601.713549] partial_width_last      = 0
[  601.713809] pool_mode               = 1
[  601.714068] pool_width              = 2
[  601.714322] pool_height             = 2
[  601.714576] stride_x                = 2
[  601.714834] stride_y                = 2
[  601.715084] pad_left                = 0
[  601.715339] pad_right               = 1
[  601.715589] pad_top                 = 0
[  601.715833] pad_bottom              = 1
[  601.716128] Exit: dla_read_config
[  601.716393] Exit: dla_prepare_operation status=0
[  601.716683] Enter: dla_program_operation
[  601.716928] Program PDP operation index 8 ROI 0 Group[0]
[  601.717402] group id 0 rdma id 0
[  601.718391] entered dla_read_input_address():
[  601.718655] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 0)
[  601.719053] entered dla_get_dma_cube_address(index = 2, offset = 0x0):
[  601.719387] entered dla_get_dma_address(index = 2):
[  601.719661] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.719958] entered dla_read_dma_address(index = 2):
[  601.720222] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.720546] *phys_addr = 0xc0800000 + 0x0
[  601.720776] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.721253] back to dla_get_dma_cube_address: dst_ptr += 0x0
[  601.721632] entered dla_get_dma_cube_address(index = 2, offset = 0x200000):
[  601.721986] entered dla_get_dma_address(index = 2):
[  601.722247] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.722535] entered dla_read_dma_address(index = 2):
[  601.722810] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.723118] *phys_addr = 0xc0800000 + 0x0
[  601.723357] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.723731] back to dla_get_dma_cube_address: dst_ptr += 0x200000
[  601.726892] no desc get due to index==-1
[  601.727163] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.727681] no desc get due to index==-1
[  601.727938] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.728450] no desc get due to index==-1
[  601.728687] no desc get due to index==-1
[  601.728916] no desc get due to index==-1
[  601.729278] Enter: dla_op_programmed
[  601.729529] Update dependency operation index 49 ROI 0 DEP_COUNT=2
[  601.729856] Exit: dla_op_programmed
[  601.730080] Exit: dla_program_operation status=0
[  601.730334] Exit: dla_submit_operation
[  601.730571] Enter: dla_dequeue_operation
[  601.730820] Dequeue op from PDP processor, index=49 ROI=0
[  601.731124] Enter: dla_submit_operation
[  601.731367] Prepare PDP operation index 49 ROI 0 dep_count 1
[  601.731668] Enter: dla_prepare_operation
[  601.732027] processor:PDP group:1, rdma_group:1 available
[  601.732326] Enter: dla_read_config
[  601.732558] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.733242] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.733849] *********************************************************
[  601.734197] NVDLA FW ROI[0]: dla_pdp_surface_desc
[  601.734462] ---------------------------------------------------------
[  601.734798] src_data            = [ dla_data_cube =>
[  601.735072]     type          = 0
[  601.735274]     address       = 2
[  601.735477]     offset        = 720000
[  601.735702]     width         = 7
[  601.735909]     height        = 7
[  601.736108]     channel       = 200
[  601.736320]     size          = 50176
[  601.736536]     line_stride   = 224
[  601.736754]     surf_stride   = 1568
[  601.736966]     plane_stride  = 0
[  601.737367] ]
[  601.737391] dst_data            = [ dla_data_cube =>
[  601.737830]     type          = 0
[  601.738057]     address       = 2
[  601.738280]     offset        = 730000
[  601.738551]     width         = 1
[  601.738769]     height        = 1
[  601.738986]     channel       = 200
[  601.739212]     size          = 1024
[  601.739448]     line_stride   = 32
[  601.739672]     surf_stride   = 32
[  601.739892]     plane_stride  = 0
[  601.740102] ]
[  601.740124] *********************************************************
[  601.740588] NVDLA FW ROI[0]: dla_pdp_op_desc
[  601.740847] ---------------------------------------------------------
[  601.741362] precision               = 2
[  601.741624] padding_value           = [
[  601.741867]  0
[  601.742017]  0
[  601.742170]  0
[  601.742318]  0
[  601.742469]  0
[  601.742618]  0
[  601.742766]  0
[  601.742913] ]
[  601.743052] split_num               = 1
[  601.743295] partial_in_width_first  = 0
[  601.743538] partial_in_width_mid    = 0
[  601.743776] partial_in_width_last   = 0
[  601.744016] partial_width_first     = 0
[  601.744253] partial_width_mid       = 0
[  601.744491] partial_width_last      = 0
[  601.744730] pool_mode               = 0
[  601.744970] pool_width              = 6
[  601.745360] pool_height             = 6
[  601.745619] stride_x                = 1
[  601.745862] stride_y                = 1
[  601.746102] pad_left                = 0
[  601.746346] pad_right               = 0
[  601.746586] pad_top                 = 0
[  601.746825] pad_bottom              = 0
[  601.747063] Exit: dla_read_config
[  601.747286] Exit: dla_prepare_operation status=0
[  601.747557] Enter: dla_program_operation
[  601.747817] Program PDP operation index 49 ROI 0 Group[1]
[  601.748125] group id 1 rdma id 1
[  601.748555] entered dla_read_input_address():
[  601.748825] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7471104)
[  601.749423] entered dla_get_dma_cube_address(index = 2, offset = 0x720000):
[  601.749813] entered dla_get_dma_address(index = 2):
[  601.750087] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.750389] entered dla_read_dma_address(index = 2):
[  601.750662] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.750949] *phys_addr = 0xc0800000 + 0x0
[  601.751155] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.751454] back to dla_get_dma_cube_address: dst_ptr += 0x720000
[  601.751727] entered dla_get_dma_cube_address(index = 2, offset = 0x730000):
[  601.752032] entered dla_get_dma_address(index = 2):
[  601.752255] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.752501] entered dla_read_dma_address(index = 2):
[  601.752730] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.753014] *phys_addr = 0xc0800000 + 0x0
[  601.753340] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.753653] back to dla_get_dma_cube_address: dst_ptr += 0x730000
[  601.755289] no desc get due to index==-1
[  601.755512] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.755947] no desc get due to index==-1
[  601.756146] no desc get due to index==-1
[  601.756344] no desc get due to index==-1
[  601.756539] no desc get due to index==-1
[  601.756739] no desc get due to index==-1
[  601.756940] Enter: dla_op_programmed
[  601.757266] Exit: dla_op_programmed
[  601.757463] Exit: dla_program_operation status=0
[  601.757701] Exit: dla_submit_operation
[  601.757893] Exit: dla_dequeue_operation
[  601.758125] Exit: dla_initiate_processors status=0
[  601.758555] Enter:dla_handle_events, processor:BDMA
[  601.758994] Exit:dla_handle_events, ret:0
[  601.759273] Enter:dla_handle_events, processor:Convolution
[  601.759564] Handle cdma weight done event, processor Convolution group 0
[  601.759951] Handle cdma data done event, processor Convolution group 0
[  601.760329] Handle op complete event, processor Convolution group 0
[  601.760699] Enter:dla_op_completion processor Convolution group0
[  601.761017] Completed Convolution operation index 0 ROI 0
[  601.761473] 1 HWLs done, totally 52 layers
[  601.761857] Enter: dla_dequeue_operation
[  601.762073] Dequeue op from Convolution processor, index=4 ROI=0
[  601.762352] Enter: dla_submit_operation
[  601.762558] Prepare Convolution operation index 4 ROI 0 dep_count 1
[  601.762847] Enter: dla_prepare_operation
[  601.763128] processor:Convolution group:0, rdma_group:0 available
[  601.763412] Enter: dla_read_config
[  601.763627] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.764105] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.764625] *********************************************************
[  601.764917] NVDLA FW ROI[0]: dla_conv_surface_desc
[  601.765151] ---------------------------------------------------------
[  601.765443] weight_data         = [ dla_data_cube =>
[  601.765699]     type          = 0
[  601.765883]     address       = 1
[  601.766059]     offset        = 0
[  601.766232]     width         = 7
[  601.766407]     height        = 7
[  601.766584]     channel       = 3
[  601.766761]     size          = 18816
[  601.766952]     line_stride   = 0
[  601.767155]     surf_stride   = 0
[  601.767360]     plane_stride  = 0
[  601.767565] ]
[  601.767584] wmb_data            = [ dla_data_cube =>
[  601.767975]     type          = 0
[  601.768184]     address       = 0
[  601.768393]     offset        = 0
[  601.768602]     width         = 0
[  601.768815]     height        = 0
[  601.769028]     channel       = 0
[  601.769243]     size          = 0
[  601.769447]     line_stride   = 0
[  601.769667]     surf_stride   = 0
[  601.769884]     plane_stride  = 0
[  601.770083] ]
[  601.770102] wgs_data            = [ dla_data_cube =>
[  601.770489]     type          = 0
[  601.770700]     address       = 0
[  601.770908]     offset        = 0
[  601.771117]     width         = 0
[  601.771328]     height        = 0
[  601.771533]     channel       = 0
[  601.771738]     size          = 0
[  601.771942]     line_stride   = 0
[  601.772143]     surf_stride   = 0
[  601.772345]     plane_stride  = 0
[  601.772541] ]
[  601.772560] src_data            = [ dla_data_cube =>
[  601.772939]     type          = 0
[  601.773140]     address       = 5
[  601.773352]     offset        = 0
[  601.773564]     width         = e0
[  601.773777]     height        = 44
[  601.773990]     channel       = 3
[  601.774185]     size          = 487424
[  601.774421]     line_stride   = 7168
[  601.774646]     surf_stride   = 1605632
[  601.774876]     plane_stride  = 0
[  601.775076] ]
[  601.775094] dst_data            = [ dla_data_cube =>
[  601.775466]     type          = 2
[  601.775673]     address       = -1
[  601.775880]     offset        = 0
[  601.776085]     width         = 70
[  601.776294]     height        = 1f
[  601.776502]     channel       = 40
[  601.776710]     size          = 444416
[  601.776942]     line_stride   = 3584
[  601.777162]     surf_stride   = 111104
[  601.777393]     plane_stride  = 0
[  601.777609] ]
[  601.777631] offset_u            = 0
[  601.777949] in_line_uv_stride   = 0
[  601.777949] 
[  601.778260] *********************************************************
[  601.778582] NVDLA FW ROI[0]: dla_conv_op_desc
[  601.778823] ---------------------------------------------------------
[  601.779139] conv_mode          = 0
[  601.779353] data_reuse         = 0
[  601.779564] weight_reuse       = 1
[  601.779784] skip_data_rls      = 0
[  601.780000] skip_weight_rls    = 1
[  601.780216] entry_per_slice    = 56
[  601.780430] data_format        = 36
[  601.780639] pixel_mapping      = 0
[  601.780849] fetch_grain        = 1
[  601.781053] batch              = 1
[  601.781259] weight_format      = 0
[  601.781467] data_bank          = 15
[  601.781684] weight_bank        = 1
[  601.781888] batch_stride       = 0
[  601.782093] post_extension     = 0
[  601.782299] pixel_override     = 1
[  601.782504] release            = 68
[  601.782716] input_width_csc    = 224
[  601.782923] input_height_csc   = 68
[  601.783134] input_channel_csc  = 3
[  601.783339] kernel_width_csc   = 7
[  601.783541] kernel_height_csc  = 7
[  601.783742] kernel_channel_csc = 3
[  601.783950] input_width_cmac   = 112
[  601.784165] input_height_cmac  = 31
[  601.784378] bytes_per_kernel   = 294
[  601.784590] mean_ry            = 0
[  601.784794] mean_gu            = 0
[  601.785001] mean_bv            = 0
[  601.785207] mean_ax            = 0
[  601.785439] mean_format        = 0
[  601.785721] conv_stride_x      = 2
[  601.785968] conv_stride_y      = 2
[  601.786149] pad_x_left         = 3
[  601.786331] pad_x_right        = 3
[  601.786513] pad_y_top          = 0
[  601.786693] pad_y_bottom       = 0
[  601.786872] dilation_x         = 1
[  601.787053] dilation_y         = 1
[  601.787241] pra_truncate       = 0
[  601.787420] in_precision       = 2
[  601.787601] out_precision      = 2
[  601.787781] pad_val            = 0
[  601.787959] in_cvt             =
[  601.788141] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[  601.788402] out_cvt            =
[  601.788584] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[  601.788847] 
[  601.788966] Exit: dla_read_config
[  601.789145] Exit: dla_prepare_operation status=0
[  601.789368] Enter: dla_program_operation
[  601.789578] Program Convolution operation index 4 ROI 0 Group[0]
[  601.790058] 
[  601.790058] entered processor_conv_program():
[  601.790344] conv getting weight_address:
[  601.790545] entered dla_get_dma_cube_address(index = 1, offset = 0x0):
[  601.790825] entered dla_get_dma_address(index = 1):
[  601.791051] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.791299] entered dla_read_dma_address(index = 1):
[  601.791527] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[  601.791810] *phys_addr = 0xc4000000 + 0x0
[  601.792014] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[  601.792316] back to dla_get_dma_cube_address: dst_ptr += 0x0
[  601.792573] conv weight_addr = 0xc4000000
[  601.792573] 
[  601.792837] conv getting input_address:
[  601.793024] entered dla_read_input_address():
[  601.793236] passed to dla_get_dma_cube_address(data->address = 5, data->offset = 0)
[  601.793574] entered dla_get_dma_cube_address(index = 5, offset = 0x0):
[  601.793856] entered dla_get_dma_address(index = 5):
[  601.794079] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.794320] entered dla_read_dma_address(index = 5):
[  601.794548] pass to nvdla_gem_dma_addr(fd = handles[index=5] = 19):
[  601.794835] *phys_addr = 0xc0200000 + 0xdac00
[  601.795050] exiting dla_get_dma_address(), got dst_ptr = c02dac00 (index = 5)
[  601.795353] back to dla_get_dma_cube_address: dst_ptr += 0x0
[  601.795607] conv input_addr = 0xc02dac00
[  601.795607] 
[  601.798212] no desc get due to index==-1
[  601.798434] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.798857] no desc get due to index==-1
[  601.799054] no desc get due to index==-1
[  601.799246] no desc get due to index==-1
[  601.799441] no desc get due to index==-1
[  601.799637] Enter: dla_op_programmed
[  601.799827] Update dependency operation index 6 ROI 0 DEP_COUNT=2
[  601.800097] Update dependency operation index 5 ROI 0 DEP_COUNT=1
[  601.800367] enable SDP in dla_update_dependency as depdency are resolved
[  601.800652] Enter: dla_enable_operation
[  601.800849] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[  601.801225] Exit: dla_enable_operation status=0
[  601.801442] Exit: dla_op_programmed
[  601.801629] Exit: dla_program_operation status=0
[  601.801848] Exit: dla_submit_operation
[  601.802039] Exit: dla_dequeue_operation
[  601.802294] Exit:dla_op_completion processor Convolution group0 status=0
[  601.802654] Handle cdma weight done event, processor Convolution group 1
[  601.802950] Handle cdma data done event, processor Convolution group 1
[  601.803237] Handle op complete event, processor Convolution group 1
[  601.803515] Enter:dla_op_completion processor Convolution group1
[  601.803785] Completed Convolution operation index 2 ROI 0
[  601.804039] 2 HWLs done, totally 52 layers
[  601.804243] Enter: dla_dequeue_operation
[  601.804446] Dequeue op from Convolution processor, index=6 ROI=0
[  601.804712] Enter: dla_submit_operation
[  601.804912] Prepare Convolution operation index 6 ROI 0 dep_count 1
[  601.805190] Enter: dla_prepare_operation
[  601.805460] processor:Convolution group:1, rdma_group:0 available
[  601.805754] Enter: dla_read_config
[  601.805951] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.806406] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.806909] *********************************************************
[  601.807192] NVDLA FW ROI[0]: dla_conv_surface_desc
[  601.807416] ---------------------------------------------------------
[  601.807695] weight_data         = [ dla_data_cube =>
[  601.807926]     type          = 0
[  601.808104]     address       = 1
[  601.808279]     offset        = 0
[  601.808455]     width         = 7
[  601.808630]     height        = 7
[  601.808806]     channel       = 3
[  601.808982]     size          = 18816
[  601.809172]     line_stride   = 0
[  601.809348]     surf_stride   = 0
[  601.809527]     plane_stride  = 0
[  601.809703] ]
[  601.809722] wmb_data            = [ dla_data_cube =>
[  601.810043]     type          = 0
[  601.810220]     address       = 0
[  601.810395]     offset        = 0
[  601.810573]     width         = 0
[  601.810747]     height        = 0
[  601.810922]     channel       = 0
[  601.811099]     size          = 0
[  601.811276]     line_stride   = 0
[  601.811455]     surf_stride   = 0
[  601.811632]     plane_stride  = 0
[  601.811803] ]
[  601.811821] wgs_data            = [ dla_data_cube =>
[  601.812141]     type          = 0
[  601.812319]     address       = 0
[  601.812493]     offset        = 0
[  601.812667]     width         = 0
[  601.812843]     height        = 0
[  601.813020]     channel       = 0
[  601.813197]     size          = 0
[  601.813375]     line_stride   = 0
[  601.813556]     surf_stride   = 0
[  601.813733]     plane_stride  = 0
[  601.813906] ]
[  601.813923] src_data            = [ dla_data_cube =>
[  601.814248]     type          = 0
[  601.814424]     address       = 8
[  601.814599]     offset        = 0
[  601.814773]     width         = e0
[  601.814954]     height        = 25
[  601.815132]     channel       = 3
[  601.815309]     size          = 265216
[  601.815500]     line_stride   = 7168
[  601.815688]     surf_stride   = 1605632
[  601.815885]     plane_stride  = 0
[  601.816055] ]
[  601.816072] dst_data            = [ dla_data_cube =>
[  601.816387]     type          = 2
[  601.816565]     address       = -1
[  601.816744]     offset        = 0
[  601.816921]     width         = 70
[  601.817099]     height        = 11
[  601.817277]     channel       = 40
[  601.817457]     size          = 243712
[  601.817737]     line_stride   = 3584
[  601.817994]     surf_stride   = 60928
[  601.818251]     plane_stride  = 0
[  601.818481] ]
[  601.818507] offset_u            = 0
[  601.818864] in_line_uv_stride   = 0
[  601.818864] 
[  601.819200] *********************************************************
[  601.819575] NVDLA FW ROI[0]: dla_conv_op_desc
[  601.819920] ---------------------------------------------------------
[  601.820374] conv_mode          = 0
[  601.820674] data_reuse         = 0
[  601.820985] weight_reuse       = 1
[  601.821268] skip_data_rls      = 0
[  601.821558] skip_weight_rls    = 0
[  601.821841] entry_per_slice    = 56
[  601.822122] data_format        = 36
[  601.822404] pixel_mapping      = 0
[  601.822684] fetch_grain        = 1
[  601.822963] batch              = 1
[  601.823240] weight_format      = 0
[  601.823522] data_bank          = 15
[  601.823805] weight_bank        = 1
[  601.824082] batch_stride       = 0
[  601.824358] post_extension     = 0
[  601.824637] pixel_override     = 1
[  601.824860] release            = 37
[  601.825086] input_width_csc    = 224
[  601.825318] input_height_csc   = 37
[  601.825566] input_channel_csc  = 3
[  601.825847] kernel_width_csc   = 7
[  601.826124] kernel_height_csc  = 7
[  601.826404] kernel_channel_csc = 3
[  601.826668] input_width_cmac   = 112
[  601.826853] input_height_cmac  = 17
[  601.827035] bytes_per_kernel   = 294
[  601.827217] mean_ry            = 0
[  601.827395] mean_gu            = 0
[  601.827570] mean_bv            = 0
[  601.827747] mean_ax            = 0
[  601.827923] mean_format        = 0
[  601.828098] conv_stride_x      = 2
[  601.828270] conv_stride_y      = 2
[  601.828443] pad_x_left         = 3
[  601.828619] pad_x_right        = 3
[  601.828800] pad_y_top          = 0
[  601.828978] pad_y_bottom       = 3
[  601.829152] dilation_x         = 1
[  601.829328] dilation_y         = 1
[  601.829508] pra_truncate       = 0
[  601.829689] in_precision       = 2
[  601.829867] out_precision      = 2
[  601.830045] pad_val            = 0
[  601.830220] in_cvt             =
[  601.830448] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[  601.830711] out_cvt            =
[  601.830891] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[  601.831145] 
[  601.831261] Exit: dla_read_config
[  601.831438] Exit: dla_prepare_operation status=0
[  601.831656] Enter: dla_program_operation
[  601.831859] Program Convolution operation index 6 ROI 0 Group[1]
[  601.832338] 
[  601.832338] entered processor_conv_program():
[  601.832624] conv getting weight_address:
[  601.832823] entered dla_get_dma_cube_address(index = 1, offset = 0x0):
[  601.833105] entered dla_get_dma_address(index = 1):
[  601.833327] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.833586] entered dla_read_dma_address(index = 1):
[  601.833819] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[  601.834103] *phys_addr = 0xc4000000 + 0x0
[  601.834333] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[  601.834642] back to dla_get_dma_cube_address: dst_ptr += 0x0
[  601.834892] conv weight_addr = 0xc4000000
[  601.834892] 
[  601.835158] conv getting input_address:
[  601.835343] entered dla_read_input_address():
[  601.835555] passed to dla_get_dma_cube_address(data->address = 8, data->offset = 0)
[  601.835886] entered dla_get_dma_cube_address(index = 8, offset = 0x0):
[  601.836165] entered dla_get_dma_address(index = 8):
[  601.836386] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.836630] entered dla_read_dma_address(index = 8):
[  601.836861] pass to nvdla_gem_dma_addr(fd = handles[index=8] = 19):
[  601.837143] *phys_addr = 0xc0200000 + 0x147400
[  601.837360] exiting dla_get_dma_address(), got dst_ptr = c0347400 (index = 8)
[  601.837667] back to dla_get_dma_cube_address: dst_ptr += 0x0
[  601.837921] conv input_addr = 0xc0347400
[  601.837921] 
[  601.840528] no desc get due to index==-1
[  601.840807] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.841339] no desc get due to index==-1
[  601.841599] no desc get due to index==-1
[  601.841801] no desc get due to index==-1
[  601.841995] no desc get due to index==-1
[  601.842191] Enter: dla_op_programmed
[  601.842419] Update dependency operation index 9 ROI 0 DEP_COUNT=3
[  601.842691] Update dependency operation index 7 ROI 0 DEP_COUNT=2
[  601.842960] Exit: dla_op_programmed
[  601.843145] Exit: dla_program_operation status=0
[  601.843361] Exit: dla_submit_operation
[  601.843553] Exit: dla_dequeue_operation
[  601.843751] Exit:dla_op_completion processor Convolution group1 status=0
[  601.844042] Exit:dla_handle_events, ret:0
[  601.844240] Enter:dla_handle_events, processor:SDP
[  601.844468] Handle op complete event, processor SDP group 0
[  601.844721] Enter:dla_op_completion processor SDP group0
[  601.844967] Completed SDP operation index 1 ROI 0
[  601.845289] 3 HWLs done, totally 52 layers
[  601.845579] Enter: dla_free_op_desc op desc index 0 ROI 0
[  601.846157] Exit: dla_free_op_desc
[  601.846421] Enter: dla_dequeue_operation
[  601.846631] Dequeue op from SDP processor, index=5 ROI=0
[  601.846874] Enter: dla_submit_operation
[  601.847074] Prepare SDP operation index 5 ROI 0 dep_count 0
[  601.847323] Enter: dla_prepare_operation
[  601.847640] processor:SDP group:0, rdma_group:0 available
[  601.847889] Enter: dla_read_config
[  601.848084] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.848546] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.849059] *********************************************************
[  601.849338] NVDLA FW ROI[0]: dla_sdp_surface_desc
[  601.849570] ---------------------------------------------------------
[  601.849849] src_data            = [ dla_data_cube =>
[  601.850078]     type          = 2
[  601.850255]     address       = -1
[  601.850474]     offset        = 0
[  601.850652]     width         = 70
[  601.850831]     height        = 1f
[  601.851010]     channel       = 40
[  601.851191]     size          = 444416
[  601.851384]     line_stride   = 3584
[  601.851568]     surf_stride   = 111104
[  601.851761]     plane_stride  = 0
[  601.851931] ]
[  601.851950] x1_data             = [ dla_data_cube =>
[  601.852272]     type          = 0
[  601.852447]     address       = 1
[  601.852623]     offset        = 8000
[  601.852808]     width         = 1
[  601.852982]     height        = 1
[  601.853155]     channel       = 40
[  601.853336]     size          = 128
[  601.853526]     line_stride   = 32
[  601.853706]     surf_stride   = 32
[  601.853887]     plane_stride  = 0
[  601.854059] ]
[  601.854077] x2_data             = [ dla_data_cube =>
[  601.854428]     type          = 0
[  601.854609]     address       = 0
[  601.854783]     offset        = 0
[  601.854960]     width         = 0
[  601.855134]     height        = 0
[  601.855308]     channel       = 0
[  601.855487]     size          = 0
[  601.855664]     line_stride   = 0
[  601.855839]     surf_stride   = 0
[  601.856015]     plane_stride  = 0
[  601.856188] ]
[  601.856206] y_data              = [ dla_data_cube =>
[  601.856526]     type          = 0
[  601.856702]     address       = 0
[  601.856878]     offset        = 0
[  601.857053]     width         = 0
[  601.857227]     height        = 0
[  601.857402]     channel       = 0
[  601.857586]     size          = 0
[  601.857764]     line_stride   = 0
[  601.857940]     surf_stride   = 0
[  601.858115]     plane_stride  = 0
[  601.858301] ]
[  601.858334] dst_data            = [ dla_data_cube =>
[  601.858667]     type          = 0
[  601.858844]     address       = 2
[  601.859019]     offset        = 38000
[  601.859205]     width         = 70
[  601.859384]     height        = 1f
[  601.859560]     channel       = 40
[  601.859739]     size          = 444416
[  601.859929]     line_stride   = 3584
[  601.860116]     surf_stride   = 401408
[  601.860306]     plane_stride  = 0
[  601.860477] ]
[  601.860497] *********************************************************
[  601.860864] NVDLA FW ROI[0]: dla_sdp_op_desc
[  601.861091] ---------------------------------------------------------
[  601.861375] src_precision    = 2
[  601.861557] dst_precision    = 2
[  601.861733] lut_index        = -1
[  601.861909] out_cvt          =
[  601.862084] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[  601.862376] conv_mode        = 0
[  601.862553] batch_num        = 1
[  601.862727] batch_stride     = 0
[  601.862899] x1_op            = [ dla_sdp_op =>
[  601.863114]     enable         = 1
[  601.863297]     alu_type       = 2
[  601.863479]     type           = 2
[  601.863660]     mode           = 1
[  601.863840]     act            = 1
[  601.864018]     shift_value    = 0
[  601.864196]     truncate       = 0
[  601.864376]     precision      = 2
[  601.864554]     alu_operand    = 0
[  601.864735]     mul_operand    = 1
[  601.864912] cvt.alu_cvt          =
[  601.865100] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.865361] cvt.mul_cvt          =
[  601.865558] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.865818] ]
[  601.865940] x2_op            = [ dla_sdp_op =>
[  601.866155]     enable         = 0
[  601.866367]     alu_type       = 0
[  601.866552]     type           = 0
[  601.866734]     mode           = 0
[  601.866914]     act            = 0
[  601.867092]     shift_value    = 0
[  601.867270]     truncate       = 0
[  601.867450]     precision      = 0
[  601.867630]     alu_operand    = 0
[  601.867813]     mul_operand    = 0
[  601.867986] cvt.alu_cvt          =
[  601.868168] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.868426] cvt.mul_cvt          =
[  601.868606] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.868880] ]
[  601.868999] y_op             = [ dla_sdp_op =>
[  601.869214]     enable         = 0
[  601.869396]     alu_type       = 0
[  601.869584]     type           = 0
[  601.869767]     mode           = 0
[  601.869944]     act            = 0
[  601.870139]     shift_value    = 0
[  601.870346]     truncate       = 0
[  601.870531]     precision      = 0
[  601.870714]     alu_operand    = 0
[  601.870894]     mul_operand    = 0
[  601.871069] cvt.alu_cvt          =
[  601.871247] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.871504] cvt.mul_cvt          =
[  601.871685] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.871944] ]
[  601.872068] Exit: dla_read_config
[  601.872254] Exit: dla_prepare_operation status=0
[  601.872479] Enter: dla_program_operation
[  601.872682] Program SDP operation index 5 ROI 0 Group[0]
[  601.873103] 
[  601.873103] entered processor_sdp_program():
[  601.873394] sdp skip getting src_addr
[  601.873394] 
[  601.873667] sdp getting dst_addr:
[  601.873848] entered dla_get_dma_cube_address(index = 2, offset = 0x38000):
[  601.874142] entered dla_get_dma_address(index = 2):
[  601.874397] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.874650] entered dla_read_dma_address(index = 2):
[  601.874882] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.875164] *phys_addr = 0xc0800000 + 0x0
[  601.875386] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.875696] back to dla_get_dma_cube_address: dst_ptr += 0x38000
[  601.875964] sdp dst_addr = 0xc0838000
[  601.875964] 
[  601.876224] sdp getting x1_addr:
[  601.876402] entered dla_get_dma_cube_address(index = 1, offset = 0x8000):
[  601.876693] entered dla_get_dma_address(index = 1):
[  601.876918] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.877168] entered dla_read_dma_address(index = 1):
[  601.877400] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[  601.877686] *phys_addr = 0xc4000000 + 0x0
[  601.877892] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[  601.878193] back to dla_get_dma_cube_address: dst_ptr += 0x8000
[  601.878501] sdp x1_addr = 0xc4008000
[  601.878501] 
[  601.878758] sdp skip getting x2_addr
[  601.878758] 
[  601.879007] sdp skip getting y_addr
[  601.879007] 
[  601.880407] no desc get due to index==-1
[  601.880609] no desc get due to index==-1
[  601.880807] no desc get due to index==-1
[  601.881001] no desc get due to index==-1
[  601.881197] no desc get due to index==-1
[  601.881390] Enter: dla_op_programmed
[  601.881588] Update dependency operation index 7 ROI 0 DEP_COUNT=1
[  601.881856] enable SDP in dla_update_dependency as depdency are resolved
[  601.882139] Enter: dla_enable_operation
[  601.882368] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[  601.882752] Exit: dla_enable_operation status=0
[  601.882970] Exit: dla_op_programmed
[  601.883156] Exit: dla_program_operation status=0
[  601.883375] Enter: dla_enable_operation
[  601.883573] Enable SDP operation index 5 ROI 0
[  601.883961] Enter: dla_op_enabled
[  601.884152] Update dependency operation index 4 ROI 0 DEP_COUNT=1
[  601.884422] enable Convolution in dla_update_dependency as depdency are resolved
[  601.884745] Enter: dla_enable_operation
[  601.884943] Enable Convolution operation index 4 ROI 0
[  601.886287] Enter: dla_op_enabled
[  601.886492] Exit: dla_op_enabled
[  601.886708] Exit: dla_enable_operation status=0
[  601.886977] Exit: dla_op_enabled
[  601.887196] Exit: dla_enable_operation status=0
[  601.887464] Exit: dla_submit_operation
[  601.887727] Exit: dla_dequeue_operation
[  601.887927] Enter: dla_free_op_desc op desc index 1 ROI 0
[  601.888211] Exit: dla_free_op_desc
[  601.888401] Exit:dla_op_completion processor SDP group0 status=0
[  601.888667] Handle op complete event, processor SDP group 1
[  601.888937] Enter:dla_op_completion processor SDP group1
[  601.889182] Completed SDP operation index 3 ROI 0
[  601.889412] 4 HWLs done, totally 52 layers
[  601.889627] Enter: dla_free_op_desc op desc index 2 ROI 0
[  601.889904] Exit: dla_free_op_desc
[  601.890088] Enter: dla_dequeue_operation
[  601.890308] Dequeue op from SDP processor, index=7 ROI=0
[  601.890570] Enter: dla_submit_operation
[  601.890772] Prepare SDP operation index 7 ROI 0 dep_count 0
[  601.891025] Enter: dla_prepare_operation
[  601.899238] processor:SDP group:1, rdma_group:1 available
[  601.899545] Enter: dla_read_config
[  601.899787] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[  601.900338] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[  601.900950] *********************************************************
[  601.901471] NVDLA FW ROI[0]: dla_sdp_surface_desc
[  601.901945] ---------------------------------------------------------
[  601.902518] src_data            = [ dla_data_cube =>
[  601.902992]     type          = 2
[  601.903360]     address       = -1
[  601.903739]     offset        = 0
[  601.904085]     width         = 70
[  601.904448]     height        = 11
[  601.904835]     channel       = 40
[  601.905212]     size          = 243712
[  601.905611]     line_stride   = 3584
[  601.905937]     surf_stride   = 60928
[  601.906172]     plane_stride  = 0
[  601.906401] ]
[  601.906443] x1_data             = [ dla_data_cube =>
[  601.906853]     type          = 0
[  601.907072]     address       = 1
[  601.907290]     offset        = 8000
[  601.907517]     width         = 1
[  601.907734]     height        = 1
[  601.907951]     channel       = 40
[  601.908178]     size          = 128
[  601.908408]     line_stride   = 32
[  601.908632]     surf_stride   = 32
[  601.908868]     plane_stride  = 0
[  601.909084] ]
[  601.909106] x2_data             = [ dla_data_cube =>
[  601.909517]     type          = 0
[  601.909739]     address       = 0
[  601.909956]     offset        = 0
[  601.910174]     width         = 0
[  601.910428]     height        = 0
[  601.910641]     channel       = 0
[  601.910819]     size          = 0
[  601.910995]     line_stride   = 0
[  601.911176]     surf_stride   = 0
[  601.911352]     plane_stride  = 0
[  601.911525] ]
[  601.911543] y_data              = [ dla_data_cube =>
[  601.911869]     type          = 0
[  601.912046]     address       = 0
[  601.912220]     offset        = 0
[  601.912395]     width         = 0
[  601.912570]     height        = 0
[  601.912746]     channel       = 0
[  601.912923]     size          = 0
[  601.913101]     line_stride   = 0
[  601.913281]     surf_stride   = 0
[  601.913459]     plane_stride  = 0
[  601.913645] ]
[  601.913663] dst_data            = [ dla_data_cube =>
[  601.913986]     type          = 0
[  601.914164]     address       = 2
[  601.914368]     offset        = 53200
[  601.914562]     width         = 70
[  601.914746]     height        = 11
[  601.914927]     channel       = 40
[  601.915110]     size          = 243712
[  601.915305]     line_stride   = 3584
[  601.915493]     surf_stride   = 401408
[  601.915684]     plane_stride  = 0
[  601.915855] ]
[  601.915873] *********************************************************
[  601.916242] NVDLA FW ROI[0]: dla_sdp_op_desc
[  601.916449] ---------------------------------------------------------
[  601.916729] src_precision    = 2
[  601.916905] dst_precision    = 2
[  601.917084] lut_index        = -1
[  601.917258] out_cvt          =
[  601.917434] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[  601.917710] conv_mode        = 0
[  601.917886] batch_num        = 1
[  601.918061] batch_stride     = 0
[  601.918233] x1_op            = [ dla_sdp_op =>
[  601.918449]     enable         = 1
[  601.918632]     alu_type       = 2
[  601.918814]     type           = 2
[  601.918996]     mode           = 1
[  601.919178]     act            = 1
[  601.919358]     shift_value    = 0
[  601.919539]     truncate       = 0
[  601.919722]     precision      = 2
[  601.919905]     alu_operand    = 0
[  601.920100]     mul_operand    = 1
[  601.920277] cvt.alu_cvt          =
[  601.920466] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.920724] cvt.mul_cvt          =
[  601.920910] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.921170] ]
[  601.921289] x2_op            = [ dla_sdp_op =>
[  601.921515]     enable         = 0
[  601.921703]     alu_type       = 0
[  601.921885]     type           = 0
[  601.922067]     mode           = 0
[  601.922247]     act            = 0
[  601.922472]     shift_value    = 0
[  601.922656]     truncate       = 0
[  601.922836]     precision      = 0
[  601.923023]     alu_operand    = 0
[  601.923210]     mul_operand    = 0
[  601.923389] cvt.alu_cvt          =
[  601.923619] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.923882] cvt.mul_cvt          =
[  601.924069] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.924331] ]
[  601.924452] y_op             = [ dla_sdp_op =>
[  601.924671]     enable         = 0
[  601.924852]     alu_type       = 0
[  601.925033]     type           = 0
[  601.925214]     mode           = 0
[  601.925395]     act            = 0
[  601.925589]     shift_value    = 0
[  601.925771]     truncate       = 0
[  601.925950]     precision      = 0
[  601.926132]     alu_operand    = 0
[  601.926336]     mul_operand    = 0
[  601.926532] cvt.alu_cvt          =
[  601.926722] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.926979] cvt.mul_cvt          =
[  601.927161] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[  601.927419] ]
[  601.927541] Exit: dla_read_config
[  601.927722] Exit: dla_prepare_operation status=0
[  601.927946] Enter: dla_program_operation
[  601.928149] Program SDP operation index 7 ROI 0 Group[1]
[  601.929645] 
[  601.929645] entered processor_sdp_program():
[  601.930006] sdp skip getting src_addr
[  601.930006] 
[  601.930359] sdp getting dst_addr:
[  601.930587] entered dla_get_dma_cube_address(index = 2, offset = 0x53200):
[  601.930884] entered dla_get_dma_address(index = 2):
[  601.931111] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.931360] entered dla_read_dma_address(index = 2):
[  601.931591] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[  601.931879] *phys_addr = 0xc0800000 + 0x0
[  601.932082] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[  601.932387] back to dla_get_dma_cube_address: dst_ptr += 0x53200
[  601.932657] sdp dst_addr = 0xc0853200
[  601.932657] 
[  601.932914] sdp getting x1_addr:
[  601.933091] entered dla_get_dma_cube_address(index = 1, offset = 0x8000):
[  601.933382] entered dla_get_dma_address(index = 1):
[  601.933614] in branch dla_get_dma_address(DESTINATION_DMA):
[  601.933864] entered dla_read_dma_address(index = 1):
[  601.934095] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[  601.934412] *phys_addr = 0xc4000000 + 0x0
[  601.934619] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[  601.934921] back to dla_get_dma_cube_address: dst_ptr += 0x8000
[  601.935184] sdp x1_addr = 0xc4008000
[  601.935184] 
[  601.935436] sdp skip getting x2_addr
[  601.935436] 
[  601.935683] sdp skip getting y_addr
[  601.935683] 
[  601.944469] no desc get due to index==-1
[  601.944730] no desc get due to index==-1
[  601.944998] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[  601.945539] no desc get due to index==-1
[  601.945772] no desc get due to index==-1
[  601.945971] Enter: dla_op_programmed
[  601.946166] Update dependency operation index 10 ROI 0 DEP_COUNT=2
[  601.946439] Exit: dla_op_programmed
[  601.946638] Exit: dla_program_operation status=0
[  601.946908] Enter: dla_enable_operation
[  601.947155] Enable SDP operation index 7 ROI 0
[  601.948388] Enter: dla_op_enabled
[  601.948627] Update dependency operation index 6 ROI 0 DEP_COUNT=1
[  601.948969] enable Convolution in dla_update_dependency as depdency are resolved
[  601.949373] Enter: dla_enable_operation
[  601.949627] Enable Convolution operation index 6 ROI 0
[  601.952697] Enter: dla_op_enabled
[  601.952925] Exit: dla_op_enabled
[  601.953145] Exit: dla_enable_operation status=0
[  601.953415] Exit: dla_op_enabled
[  601.953639] Exit: dla_enable_operation status=0
[  601.953906] Exit: dla_submit_operation
[  601.954146] Exit: dla_dequeue_operation
[  601.954440] Enter: dla_free_op_desc op desc index 3 ROI 0
[  601.954780] Exit: dla_free_op_desc
[  601.955016] Exit:dla_op_completion processor SDP group1 status=0
[  601.955349] Exit:dla_handle_events, ret:0
[  601.955597] Enter:dla_handle_events, processor:PDP
[  601.955881] Exit:dla_handle_events, ret:0
[  601.956129] Enter:dla_handle_events, processor:CDP
[  601.956407] Exit:dla_handle_events, ret:0
[  601.956657] Enter:dla_handle_events, processor:RUBIK
[  601.956945] Exit:dla_handle_events, ret:0
[  601.959453] Enter:dla_handle_events, processor:BDMA
[  601.959761] Exit:dla_handle_events, ret:0
[  601.960010] Enter:dla_handle_events, processor:Convolution
[  601.960319] Handle cdma weight done event, processor Convolution group 0
[  601.960680] Exit:dla_handle_events, ret:0
[  601.960927] Enter:dla_handle_events, processor:SDP
[  601.961232] Exit:dla_handle_events, ret:0
[  601.961479] Enter:dla_handle_events, processor:PDP
[  601.961771] Exit:dla_handle_events, ret:0
[  601.962022] Enter:dla_handle_events, processor:CDP
[  601.962325] Exit:dla_handle_events, ret:0
[  601.962601] Enter:dla_handle_events, processor:RUBIK
[  601.962892] Exit:dla_handle_events, ret:0
[ 1016.906839] Enter:dla_handle_events, processor:BDMA
[ 1016.907532] Exit:dla_handle_events, ret:0
[ 1016.907943] Enter:dla_handle_events, processor:Convolution
[ 1016.908447] Handle cdma data done event, processor Convolution group 0
[ 1016.909047] Handle op complete event, processor Convolution group 0
[ 1016.909624] Enter:dla_op_completion processor Convolution group0
[ 1016.910169] Completed Convolution operation index 4 ROI 0
[ 1016.910681] 5 HWLs done, totally 52 layers
[ 1016.911100] Enter: dla_dequeue_operation
[ 1016.911535] Dequeue op from Convolution processor, index=9 ROI=0
[ 1016.912085] Enter: dla_submit_operation
[ 1016.912487] Prepare Convolution operation index 9 ROI 0 dep_count 2
[ 1016.913039] Enter: dla_prepare_operation
[ 1016.913542] processor:Convolution group:0, rdma_group:0 available
[ 1016.914021] Enter: dla_read_config
[ 1016.914250] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1016.914713] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1016.915214] *********************************************************
[ 1016.915497] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1016.915710] ---------------------------------------------------------
[ 1016.915984] weight_data         = [ dla_data_cube =>
[ 1016.916215]     type          = 0
[ 1016.916395]     address       = 1
[ 1016.916578]     offset        = a000
[ 1016.916765]     width         = 1
[ 1016.916941]     height        = 1
[ 1016.917129]     channel       = 40
[ 1016.917311]     size          = 8192
[ 1016.917503]     line_stride   = 0
[ 1016.917682]     surf_stride   = 0
[ 1016.917861]     plane_stride  = 0
[ 1016.918036] ]
[ 1016.918057] wmb_data            = [ dla_data_cube =>
[ 1016.918379]     type          = 0
[ 1016.918554]     address       = 0
[ 1016.918760]     offset        = 0
[ 1016.918952]     width         = 0
[ 1016.919135]     height        = 0
[ 1016.919309]     channel       = 0
[ 1016.919483]     size          = 0
[ 1016.919662]     line_stride   = 0
[ 1016.919836]     surf_stride   = 0
[ 1016.920017]     plane_stride  = 0
[ 1016.920190] ]
[ 1016.920208] wgs_data            = [ dla_data_cube =>
[ 1016.920536]     type          = 0
[ 1016.920713]     address       = 0
[ 1016.920890]     offset        = 0
[ 1016.921072]     width         = 0
[ 1016.921250]     height        = 0
[ 1016.921424]     channel       = 0
[ 1016.921609]     size          = 0
[ 1016.921791]     line_stride   = 0
[ 1016.921972]     surf_stride   = 0
[ 1016.922152]     plane_stride  = 0
[ 1016.922326] ]
[ 1016.922344] src_data            = [ dla_data_cube =>
[ 1016.922665]     type          = 0
[ 1016.922842]     address       = 2
[ 1016.923022]     offset        = 200000
[ 1016.923211]     width         = 38
[ 1016.923402]     height        = 38
[ 1016.923585]     channel       = 40
[ 1016.923769]     size          = 401408
[ 1016.923962]     line_stride   = 1792
[ 1016.924154]     surf_stride   = 100352
[ 1016.924348]     plane_stride  = 0
[ 1016.924516] ]
[ 1016.924533] dst_data            = [ dla_data_cube =>
[ 1016.924845]     type          = 2
[ 1016.925019]     address       = -1
[ 1016.925193]     offset        = 0
[ 1016.925367]     width         = 38
[ 1016.925551]     height        = 38
[ 1016.925732]     channel       = 40
[ 1016.925910]     size          = 401408
[ 1016.926106]     line_stride   = 1792
[ 1016.926291]     surf_stride   = 100352
[ 1016.926485]     plane_stride  = 0
[ 1016.926657] ]
[ 1016.926677] offset_u            = 0
[ 1016.926948] in_line_uv_stride   = 0
[ 1016.926948] 
[ 1016.927209] *********************************************************
[ 1016.927494] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1016.927706] ---------------------------------------------------------
[ 1016.927979] conv_mode          = 0
[ 1016.928161] data_reuse         = 0
[ 1016.928345] weight_reuse       = 0
[ 1016.928530] skip_data_rls      = 0
[ 1016.928710] skip_weight_rls    = 0
[ 1016.928892] entry_per_slice    = 56
[ 1016.929076] data_format        = 36
[ 1016.929267] pixel_mapping      = 0
[ 1016.929450] fetch_grain        = 1
[ 1016.929635] batch              = 1
[ 1016.929817] weight_format      = 0
[ 1016.929999] data_bank          = 13
[ 1016.930183] weight_bank        = 1
[ 1016.930363] batch_stride       = 0
[ 1016.930547] post_extension     = 0
[ 1016.930727] pixel_override     = 1
[ 1016.930907] release            = 56
[ 1016.931096] input_width_csc    = 56
[ 1016.931278] input_height_csc   = 56
[ 1016.931462] input_channel_csc  = 64
[ 1016.931644] kernel_width_csc   = 1
[ 1016.931821] kernel_height_csc  = 1
[ 1016.932000] kernel_channel_csc = 64
[ 1016.932183] input_width_cmac   = 56
[ 1016.932374] input_height_cmac  = 56
[ 1016.932560] bytes_per_kernel   = 128
[ 1016.932745] mean_ry            = 0
[ 1016.932926] mean_gu            = 0
[ 1016.933111] mean_bv            = 0
[ 1016.933302] mean_ax            = 0
[ 1016.933518] mean_format        = 0
[ 1016.933704] conv_stride_x      = 1
[ 1016.933883] conv_stride_y      = 1
[ 1016.934064] pad_x_left         = 0
[ 1016.934246] pad_x_right        = 0
[ 1016.934442] pad_y_top          = 0
[ 1016.934626] pad_y_bottom       = 0
[ 1016.934806] dilation_x         = 1
[ 1016.934985] dilation_y         = 1
[ 1016.935164] pra_truncate       = 0
[ 1016.935351] in_precision       = 2
[ 1016.935527] out_precision      = 2
[ 1016.935708] pad_val            = 0
[ 1016.935889] in_cvt             =
[ 1016.936068] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1016.936330] out_cvt            =
[ 1016.936510] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1016.936769] 
[ 1016.936890] Exit: dla_read_config
[ 1016.937071] Exit: dla_prepare_operation status=0
[ 1016.937301] Enter: dla_program_operation
[ 1016.937511] Program Convolution operation index 9 ROI 0 Group[0]
[ 1016.938118] 
[ 1016.938118] entered processor_conv_program():
[ 1016.938408] conv getting weight_address:
[ 1016.938613] entered dla_get_dma_cube_address(index = 1, offset = 0xa000):
[ 1016.938911] entered dla_get_dma_address(index = 1):
[ 1016.939140] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1016.939390] entered dla_read_dma_address(index = 1):
[ 1016.939624] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1016.939923] *phys_addr = 0xc4000000 + 0x0
[ 1016.940130] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1016.940434] back to dla_get_dma_cube_address: dst_ptr += 0xa000
[ 1016.940698] conv weight_addr = 0xc400a000
[ 1016.940698] 
[ 1016.940965] conv getting input_address:
[ 1016.941149] entered dla_read_input_address():
[ 1016.941369] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 2097152)
[ 1016.941734] entered dla_get_dma_cube_address(index = 2, offset = 0x200000):
[ 1016.942034] entered dla_get_dma_address(index = 2):
[ 1016.942257] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1016.942510] entered dla_read_dma_address(index = 2):
[ 1016.942747] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1016.943031] *phys_addr = 0xc0800000 + 0x0
[ 1016.943236] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1016.943544] back to dla_get_dma_cube_address: dst_ptr += 0x200000
[ 1016.943816] conv input_addr = 0xc0a00000
[ 1016.943816] 
[ 1016.947267] no desc get due to index==-1
[ 1016.947496] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1016.947920] no desc get due to index==-1
[ 1016.948118] no desc get due to index==-1
[ 1016.948313] no desc get due to index==-1
[ 1016.948507] no desc get due to index==-1
[ 1016.948705] Enter: dla_op_programmed
[ 1016.948897] Update dependency operation index 11 ROI 0 DEP_COUNT=3
[ 1016.949176] Update dependency operation index 10 ROI 0 DEP_COUNT=1
[ 1016.949456] enable SDP in dla_update_dependency as depdency are resolved
[ 1016.949758] Enter: dla_enable_operation
[ 1016.950032] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1016.950652] Exit: dla_enable_operation status=0
[ 1016.951011] Exit: dla_op_programmed
[ 1016.951311] Exit: dla_program_operation status=0
[ 1016.951668] Exit: dla_submit_operation
[ 1016.951984] Exit: dla_dequeue_operation
[ 1016.952317] Exit:dla_op_completion processor Convolution group0 status=0
[ 1016.952808] Handle cdma weight done event, processor Convolution group 1
[ 1016.953291] Handle cdma data done event, processor Convolution group 1
[ 1016.953773] Handle op complete event, processor Convolution group 1
[ 1016.954223] Enter:dla_op_completion processor Convolution group1
[ 1016.954665] Completed Convolution operation index 6 ROI 0
[ 1016.955078] 6 HWLs done, totally 52 layers
[ 1016.955412] Enter: dla_dequeue_operation
[ 1016.955743] Dequeue op from Convolution processor, index=11 ROI=0
[ 1016.956179] Enter: dla_submit_operation
[ 1016.956511] Prepare Convolution operation index 11 ROI 0 dep_count 2
[ 1016.956964] Enter: dla_prepare_operation
[ 1016.957386] processor:Convolution group:1, rdma_group:0 available
[ 1016.957850] Enter: dla_read_config
[ 1016.958099] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1016.958567] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1016.959062] *********************************************************
[ 1016.959346] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1016.959569] ---------------------------------------------------------
[ 1016.959853] weight_data         = [ dla_data_cube =>
[ 1016.960086]     type          = 0
[ 1016.960265]     address       = 1
[ 1016.960437]     offset        = 20000
[ 1016.960624]     width         = 3
[ 1016.960796]     height        = 3
[ 1016.960969]     channel       = 40
[ 1016.961150]     size          = 73728
[ 1016.961338]     line_stride   = 0
[ 1016.961520]     surf_stride   = 0
[ 1016.961699]     plane_stride  = 0
[ 1016.961874] ]
[ 1016.961892] wmb_data            = [ dla_data_cube =>
[ 1016.962218]     type          = 0
[ 1016.962395]     address       = 0
[ 1016.962576]     offset        = 0
[ 1016.962760]     width         = 0
[ 1016.962933]     height        = 0
[ 1016.963110]     channel       = 0
[ 1016.963286]     size          = 0
[ 1016.963465]     line_stride   = 0
[ 1016.963640]     surf_stride   = 0
[ 1016.963821]     plane_stride  = 0
[ 1016.964001] ]
[ 1016.964019] wgs_data            = [ dla_data_cube =>
[ 1016.964354]     type          = 0
[ 1016.964531]     address       = 0
[ 1016.964708]     offset        = 0
[ 1016.964885]     width         = 0
[ 1016.965060]     height        = 0
[ 1016.965240]     channel       = 0
[ 1016.965416]     size          = 0
[ 1016.965601]     line_stride   = 0
[ 1016.965778]     surf_stride   = 0
[ 1016.965952]     plane_stride  = 0
[ 1016.966122] ]
[ 1016.966140] src_data            = [ dla_data_cube =>
[ 1016.966460]     type          = 0
[ 1016.966637]     address       = 2
[ 1016.966813]     offset        = 200000
[ 1016.967015]     width         = 38
[ 1016.967197]     height        = 38
[ 1016.967383]     channel       = 40
[ 1016.967562]     size          = 401408
[ 1016.967761]     line_stride   = 1792
[ 1016.967950]     surf_stride   = 100352
[ 1016.968141]     plane_stride  = 0
[ 1016.968313] ]
[ 1016.968330] dst_data            = [ dla_data_cube =>
[ 1016.968653]     type          = 2
[ 1016.968829]     address       = -1
[ 1016.969008]     offset        = 0
[ 1016.969185]     width         = 38
[ 1016.969374]     height        = 38
[ 1016.969567]     channel       = 40
[ 1016.969751]     size          = 401408
[ 1016.969944]     line_stride   = 1792
[ 1016.970134]     surf_stride   = 100352
[ 1016.970333]     plane_stride  = 0
[ 1016.970507] ]
[ 1016.970528] offset_u            = 0
[ 1016.970794] in_line_uv_stride   = 0
[ 1016.970794] 
[ 1016.971049] *********************************************************
[ 1016.971326] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1016.971535] ---------------------------------------------------------
[ 1016.971812] conv_mode          = 0
[ 1016.971996] data_reuse         = 0
[ 1016.972176] weight_reuse       = 0
[ 1016.972363] skip_data_rls      = 0
[ 1016.972544] skip_weight_rls    = 0
[ 1016.972737] entry_per_slice    = 56
[ 1016.972924] data_format        = 36
[ 1016.973107] pixel_mapping      = 0
[ 1016.973294] fetch_grain        = 1
[ 1016.973473] batch              = 1
[ 1016.973644] weight_format      = 0
[ 1016.973828] data_bank          = 13
[ 1016.974017] weight_bank        = 3
[ 1016.974198] batch_stride       = 0
[ 1016.974379] post_extension     = 0
[ 1016.974561] pixel_override     = 1
[ 1016.974739] release            = 56
[ 1016.974923] input_width_csc    = 56
[ 1016.975106] input_height_csc   = 56
[ 1016.975289] input_channel_csc  = 64
[ 1016.975474] kernel_width_csc   = 3
[ 1016.975652] kernel_height_csc  = 3
[ 1016.975832] kernel_channel_csc = 64
[ 1016.976015] input_width_cmac   = 56
[ 1016.976202] input_height_cmac  = 56
[ 1016.976386] bytes_per_kernel   = 1152
[ 1016.976579] mean_ry            = 0
[ 1016.976760] mean_gu            = 0
[ 1016.976946] mean_bv            = 0
[ 1016.977130] mean_ax            = 0
[ 1016.977308] mean_format        = 0
[ 1016.977493] conv_stride_x      = 1
[ 1016.977690] conv_stride_y      = 1
[ 1016.977875] pad_x_left         = 1
[ 1016.978054] pad_x_right        = 1
[ 1016.978231] pad_y_top          = 1
[ 1016.978408] pad_y_bottom       = 1
[ 1016.978585] dilation_x         = 1
[ 1016.978765] dilation_y         = 1
[ 1016.979006] pra_truncate       = 0
[ 1016.979269] in_precision       = 2
[ 1016.979514] out_precision      = 2
[ 1016.979773] pad_val            = 0
[ 1016.980014] in_cvt             =
[ 1016.980266] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1016.980631] out_cvt            =
[ 1016.980874] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1016.981244] 
[ 1016.981404] Exit: dla_read_config
[ 1016.981662] Exit: dla_prepare_operation status=0
[ 1016.981983] Enter: dla_program_operation
[ 1016.982259] Program Convolution operation index 11 ROI 0 Group[1]
[ 1016.982974] 
[ 1016.982974] entered processor_conv_program():
[ 1016.983373] conv getting weight_address:
[ 1016.983643] entered dla_get_dma_cube_address(index = 1, offset = 0x20000):
[ 1016.984064] entered dla_get_dma_address(index = 1):
[ 1016.984384] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1016.984728] entered dla_read_dma_address(index = 1):
[ 1016.985043] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1016.985440] *phys_addr = 0xc4000000 + 0x0
[ 1016.985739] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1016.986178] back to dla_get_dma_cube_address: dst_ptr += 0x20000
[ 1016.986557] conv weight_addr = 0xc4020000
[ 1016.986557] 
[ 1016.986939] conv getting input_address:
[ 1016.987200] entered dla_read_input_address():
[ 1016.987516] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 2097152)
[ 1016.988015] entered dla_get_dma_cube_address(index = 2, offset = 0x200000):
[ 1016.988434] entered dla_get_dma_address(index = 2):
[ 1016.988747] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1016.989099] entered dla_read_dma_address(index = 2):
[ 1016.989431] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1016.989821] *phys_addr = 0xc0800000 + 0x0
[ 1016.990110] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1016.990552] back to dla_get_dma_cube_address: dst_ptr += 0x200000
[ 1016.990942] conv input_addr = 0xc0a00000
[ 1016.990942] 
[ 1016.994525] no desc get due to index==-1
[ 1016.994817] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1016.995435] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1016.996044] no desc get due to index==-1
[ 1016.996323] no desc get due to index==-1
[ 1016.996590] no desc get due to index==-1
[ 1016.996877] no desc get due to index==-1
[ 1016.997149] Enter: dla_op_programmed
[ 1016.997418] Update dependency operation index 13 ROI 0 DEP_COUNT=3
[ 1016.997813] Update dependency operation index 12 ROI 0 DEP_COUNT=2
[ 1016.998197] Exit: dla_op_programmed
[ 1016.998457] Exit: dla_program_operation status=0
[ 1016.998768] Exit: dla_submit_operation
[ 1016.999035] Exit: dla_dequeue_operation
[ 1016.999320] Exit:dla_op_completion processor Convolution group1 status=0
[ 1016.999735] Exit:dla_handle_events, ret:0
[ 1017.000013] Enter:dla_handle_events, processor:SDP
[ 1017.000336] Handle op complete event, processor SDP group 0
[ 1017.000705] Enter:dla_op_completion processor SDP group0
[ 1017.001052] Completed SDP operation index 5 ROI 0
[ 1017.001384] 7 HWLs done, totally 52 layers
[ 1017.001688] Enter: dla_free_op_desc op desc index 4 ROI 0
[ 1017.002062] Exit: dla_free_op_desc
[ 1017.002321] Enter: dla_dequeue_operation
[ 1017.002602] Dequeue op from SDP processor, index=10 ROI=0
[ 1017.002957] Enter: dla_submit_operation
[ 1017.003228] Prepare SDP operation index 10 ROI 0 dep_count 0
[ 1017.003583] Enter: dla_prepare_operation
[ 1017.004061] processor:SDP group:0, rdma_group:0 available
[ 1017.004407] Enter: dla_read_config
[ 1017.004672] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1017.005309] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1017.005997] *********************************************************
[ 1017.006422] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1017.006736] ---------------------------------------------------------
[ 1017.007136] src_data            = [ dla_data_cube =>
[ 1017.007466]     type          = 2
[ 1017.007710]     address       = -1
[ 1017.007959]     offset        = 0
[ 1017.008207]     width         = 38
[ 1017.008462]     height        = 38
[ 1017.008710]     channel       = 40
[ 1017.008964]     size          = 401408
[ 1017.009242]     line_stride   = 1792
[ 1017.009518]     surf_stride   = 100352
[ 1017.009798]     plane_stride  = 0
[ 1017.010042] ]
[ 1017.010061] x1_data             = [ dla_data_cube =>
[ 1017.010521]     type          = 0
[ 1017.010775]     address       = 1
[ 1017.011026]     offset        = 9000
[ 1017.011284]     width         = 1
[ 1017.011542]     height        = 1
[ 1017.011779]     channel       = 40
[ 1017.012022]     size          = 128
[ 1017.012281]     line_stride   = 32
[ 1017.012541]     surf_stride   = 32
[ 1017.012783]     plane_stride  = 0
[ 1017.013036] ]
[ 1017.013055] x2_data             = [ dla_data_cube =>
[ 1017.013518]     type          = 0
[ 1017.013777]     address       = 0
[ 1017.014030]     offset        = 0
[ 1017.014274]     width         = 0
[ 1017.014519]     height        = 0
[ 1017.014764]     channel       = 0
[ 1017.015022]     size          = 0
[ 1017.015268]     line_stride   = 0
[ 1017.015515]     surf_stride   = 0
[ 1017.015763]     plane_stride  = 0
[ 1017.016001] ]
[ 1017.016020] y_data              = [ dla_data_cube =>
[ 1017.016486]     type          = 0
[ 1017.016731]     address       = 0
[ 1017.016984]     offset        = 0
[ 1017.017233]     width         = 0
[ 1017.017477]     height        = 0
[ 1017.017733]     channel       = 0
[ 1017.017977]     size          = 0
[ 1017.018228]     line_stride   = 0
[ 1017.018483]     surf_stride   = 0
[ 1017.018725]     plane_stride  = 0
[ 1017.018971] ]
[ 1017.018989] dst_data            = [ dla_data_cube =>
[ 1017.019444]     type          = 0
[ 1017.019682]     address       = 2
[ 1017.019932]     offset        = 280000
[ 1017.020195]     width         = 38
[ 1017.020447]     height        = 38
[ 1017.020693]     channel       = 40
[ 1017.020952]     size          = 401408
[ 1017.021227]     line_stride   = 1792
[ 1017.021494]     surf_stride   = 100352
[ 1017.021772]     plane_stride  = 0
[ 1017.022024] ]
[ 1017.022044] *********************************************************
[ 1017.022574] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1017.022866] ---------------------------------------------------------
[ 1017.023270] src_precision    = 2
[ 1017.023516] dst_precision    = 2
[ 1017.023756] lut_index        = -1
[ 1017.024000] out_cvt          =
[ 1017.024249] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1017.024626] conv_mode        = 0
[ 1017.024872] batch_num        = 1
[ 1017.025116] batch_stride     = 0
[ 1017.025361] x1_op            = [ dla_sdp_op =>
[ 1017.025669]     enable         = 1
[ 1017.025925]     alu_type       = 2
[ 1017.026185]     type           = 2
[ 1017.026439]     mode           = 1
[ 1017.026696]     act            = 0
[ 1017.026951]     shift_value    = 0
[ 1017.027216]     truncate       = 0
[ 1017.027471]     precision      = 2
[ 1017.027727]     alu_operand    = 0
[ 1017.027996]     mul_operand    = 1
[ 1017.028255] cvt.alu_cvt          =
[ 1017.028519] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.028892] cvt.mul_cvt          =
[ 1017.029160] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.029540] ]
[ 1017.029700] x2_op            = [ dla_sdp_op =>
[ 1017.030012]     enable         = 0
[ 1017.030272]     alu_type       = 0
[ 1017.030521]     type           = 0
[ 1017.030770]     mode           = 0
[ 1017.031020]     act            = 0
[ 1017.031271]     shift_value    = 0
[ 1017.031523]     truncate       = 0
[ 1017.031772]     precision      = 0
[ 1017.032018]     alu_operand    = 0
[ 1017.032275]     mul_operand    = 0
[ 1017.032522] cvt.alu_cvt          =
[ 1017.032772] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.033137] cvt.mul_cvt          =
[ 1017.033392] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.033772] ]
[ 1017.033934] y_op             = [ dla_sdp_op =>
[ 1017.034237]     enable         = 0
[ 1017.034492]     alu_type       = 0
[ 1017.034745]     type           = 0
[ 1017.035001]     mode           = 0
[ 1017.035260]     act            = 0
[ 1017.035520]     shift_value    = 0
[ 1017.035772]     truncate       = 0
[ 1017.036029]     precision      = 0
[ 1017.036280]     alu_operand    = 0
[ 1017.036529]     mul_operand    = 0
[ 1017.036769] cvt.alu_cvt          =
[ 1017.037011] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.037384] cvt.mul_cvt          =
[ 1017.037600] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.037860] ]
[ 1017.037984] Exit: dla_read_config
[ 1017.038166] Exit: dla_prepare_operation status=0
[ 1017.038386] Enter: dla_program_operation
[ 1017.038591] Program SDP operation index 10 ROI 0 Group[0]
[ 1017.039147] 
[ 1017.039147] entered processor_sdp_program():
[ 1017.039442] sdp skip getting src_addr
[ 1017.039442] 
[ 1017.039709] sdp getting dst_addr:
[ 1017.039894] entered dla_get_dma_cube_address(index = 2, offset = 0x280000):
[ 1017.040199] entered dla_get_dma_address(index = 2):
[ 1017.040457] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1017.040718] entered dla_read_dma_address(index = 2):
[ 1017.040950] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1017.041241] *phys_addr = 0xc0800000 + 0x0
[ 1017.041448] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1017.041787] back to dla_get_dma_cube_address: dst_ptr += 0x280000
[ 1017.042060] sdp dst_addr = 0xc0a80000
[ 1017.042060] 
[ 1017.042323] sdp getting x1_addr:
[ 1017.042504] entered dla_get_dma_cube_address(index = 1, offset = 0x9000):
[ 1017.042795] entered dla_get_dma_address(index = 1):
[ 1017.043021] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1017.043268] entered dla_read_dma_address(index = 1):
[ 1017.043500] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1017.043781] *phys_addr = 0xc4000000 + 0x0
[ 1017.043991] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1017.044293] back to dla_get_dma_cube_address: dst_ptr += 0x9000
[ 1017.044557] sdp x1_addr = 0xc4009000
[ 1017.044557] 
[ 1017.044813] sdp skip getting x2_addr
[ 1017.044813] 
[ 1017.045068] sdp skip getting y_addr
[ 1017.045068] 
[ 1017.047329] no desc get due to index==-1
[ 1017.047589] no desc get due to index==-1
[ 1017.047840] no desc get due to index==-1
[ 1017.048059] no desc get due to index==-1
[ 1017.048254] Enter: dla_op_programmed
[ 1017.048445] Update dependency operation index 12 ROI 0 DEP_COUNT=1
[ 1017.048721] enable SDP in dla_update_dependency as depdency are resolved
[ 1017.049012] Enter: dla_enable_operation
[ 1017.049205] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1017.049596] Exit: dla_enable_operation status=0
[ 1017.049819] Exit: dla_op_programmed
[ 1017.050003] Exit: dla_program_operation status=0
[ 1017.050229] Enter: dla_enable_operation
[ 1017.050430] Enable SDP operation index 10 ROI 0
[ 1017.050914] Enter: dla_op_enabled
[ 1017.051111] Update dependency operation index 9 ROI 0 DEP_COUNT=2
[ 1017.051380] Exit: dla_op_enabled
[ 1017.051560] Exit: dla_enable_operation status=0
[ 1017.051778] Exit: dla_submit_operation
[ 1017.051970] Exit: dla_dequeue_operation
[ 1017.052169] Enter: dla_free_op_desc op desc index 5 ROI 0
[ 1017.052456] Exit: dla_free_op_desc
[ 1017.052654] Exit:dla_op_completion processor SDP group0 status=0
[ 1017.052921] Handle op complete event, processor SDP group 1
[ 1017.053182] Enter:dla_op_completion processor SDP group1
[ 1017.053436] Completed SDP operation index 7 ROI 0
[ 1017.053679] Update dependency operation index 8 ROI 0 DEP_COUNT=1
[ 1017.053954] enable PDP in dla_update_dependency as depdency are resolved
[ 1017.054250] Enter: dla_enable_operation
[ 1017.054451] Enable PDP operation index 8 ROI 0
[ 1017.054675] group id 0 rdma id 0
[ 1017.055625] rdma needed 1
[ 1017.056541] Enter: dla_op_enabled
[ 1017.056733] Exit: dla_op_enabled
[ 1017.056912] Exit: dla_enable_operation status=0
[ 1017.057134] 8 HWLs done, totally 52 layers
[ 1017.057343] Enter: dla_free_op_desc op desc index 6 ROI 0
[ 1017.057641] Exit: dla_free_op_desc
[ 1017.057827] Enter: dla_dequeue_operation
[ 1017.058032] Dequeue op from SDP processor, index=12 ROI=0
[ 1017.058283] Enter: dla_submit_operation
[ 1017.058487] Prepare SDP operation index 12 ROI 0 dep_count 0
[ 1017.058746] Enter: dla_prepare_operation
[ 1017.087796] processor:SDP group:1, rdma_group:1 available
[ 1017.088124] Enter: dla_read_config
[ 1017.088378] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1017.088952] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1017.089445] *********************************************************
[ 1017.089740] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1017.089957] ---------------------------------------------------------
[ 1017.090233] src_data            = [ dla_data_cube =>
[ 1017.090464]     type          = 2
[ 1017.090643]     address       = -1
[ 1017.090821]     offset        = 0
[ 1017.090995]     width         = 38
[ 1017.091175]     height        = 38
[ 1017.091353]     channel       = 40
[ 1017.091535]     size          = 401408
[ 1017.091729]     line_stride   = 1792
[ 1017.091912]     surf_stride   = 100352
[ 1017.092103]     plane_stride  = 0
[ 1017.092275] ]
[ 1017.092293] x1_data             = [ dla_data_cube =>
[ 1017.092613]     type          = 0
[ 1017.092785]     address       = 1
[ 1017.092959]     offset        = c000
[ 1017.093142]     width         = 1
[ 1017.093318]     height        = 1
[ 1017.093490]     channel       = 40
[ 1017.093682]     size          = 128
[ 1017.093867]     line_stride   = 32
[ 1017.094052]     surf_stride   = 32
[ 1017.094233]     plane_stride  = 0
[ 1017.094409] ]
[ 1017.094426] x2_data             = [ dla_data_cube =>
[ 1017.094749]     type          = 0
[ 1017.094922]     address       = 0
[ 1017.095095]     offset        = 0
[ 1017.095270]     width         = 0
[ 1017.095445]     height        = 0
[ 1017.095625]     channel       = 0
[ 1017.095803]     size          = 0
[ 1017.095979]     line_stride   = 0
[ 1017.096154]     surf_stride   = 0
[ 1017.096330]     plane_stride  = 0
[ 1017.096507] ]
[ 1017.096524] y_data              = [ dla_data_cube =>
[ 1017.096848]     type          = 0
[ 1017.097024]     address       = 0
[ 1017.097204]     offset        = 0
[ 1017.097377]     width         = 0
[ 1017.097555]     height        = 0
[ 1017.097730]     channel       = 0
[ 1017.097904]     size          = 0
[ 1017.098087]     line_stride   = 0
[ 1017.098263]     surf_stride   = 0
[ 1017.098445]     plane_stride  = 0
[ 1017.098620] ]
[ 1017.098637] dst_data            = [ dla_data_cube =>
[ 1017.098959]     type          = 0
[ 1017.099136]     address       = 2
[ 1017.099315]     offset        = 300000
[ 1017.099502]     width         = 38
[ 1017.099677]     height        = 38
[ 1017.099856]     channel       = 40
[ 1017.100035]     size          = 401408
[ 1017.100229]     line_stride   = 1792
[ 1017.100418]     surf_stride   = 100352
[ 1017.100616]     plane_stride  = 0
[ 1017.100796] ]
[ 1017.100814] *********************************************************
[ 1017.101181] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1017.101393] ---------------------------------------------------------
[ 1017.101680] src_precision    = 2
[ 1017.101858] dst_precision    = 2
[ 1017.102032] lut_index        = -1
[ 1017.102205] out_cvt          =
[ 1017.102379] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1017.102650] conv_mode        = 0
[ 1017.102827] batch_num        = 1
[ 1017.103002] batch_stride     = 0
[ 1017.103174] x1_op            = [ dla_sdp_op =>
[ 1017.103394]     enable         = 1
[ 1017.103577]     alu_type       = 2
[ 1017.103765]     type           = 2
[ 1017.103969]     mode           = 1
[ 1017.104154]     act            = 1
[ 1017.104337]     shift_value    = 0
[ 1017.104520]     truncate       = 0
[ 1017.104707]     precision      = 2
[ 1017.104891]     alu_operand    = 0
[ 1017.105078]     mul_operand    = 1
[ 1017.105257] cvt.alu_cvt          =
[ 1017.105440] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.105709] cvt.mul_cvt          =
[ 1017.105889] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.106153] ]
[ 1017.106272] x2_op            = [ dla_sdp_op =>
[ 1017.106492]     enable         = 0
[ 1017.106672]     alu_type       = 0
[ 1017.106854]     type           = 0
[ 1017.107032]     mode           = 0
[ 1017.107422]     act            = 0
[ 1017.107698]     shift_value    = 0
[ 1017.107882]     truncate       = 0
[ 1017.108065]     precision      = 0
[ 1017.108249]     alu_operand    = 0
[ 1017.108428]     mul_operand    = 0
[ 1017.108603] cvt.alu_cvt          =
[ 1017.108785] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.109046] cvt.mul_cvt          =
[ 1017.109224] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.109492] ]
[ 1017.109617] y_op             = [ dla_sdp_op =>
[ 1017.109841]     enable         = 0
[ 1017.110018]     alu_type       = 0
[ 1017.110199]     type           = 0
[ 1017.110380]     mode           = 0
[ 1017.110558]     act            = 0
[ 1017.110737]     shift_value    = 0
[ 1017.110914]     truncate       = 0
[ 1017.111096]     precision      = 0
[ 1017.111275]     alu_operand    = 0
[ 1017.111457]     mul_operand    = 0
[ 1017.111632] cvt.alu_cvt          =
[ 1017.111817] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.112078] cvt.mul_cvt          =
[ 1017.112259] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1017.112522] ]
[ 1017.112646] Exit: dla_read_config
[ 1017.112829] Exit: dla_prepare_operation status=0
[ 1017.113051] Enter: dla_program_operation
[ 1017.113256] Program SDP operation index 12 ROI 0 Group[1]
[ 1017.117008] 
[ 1017.117008] entered processor_sdp_program():
[ 1017.117375] sdp skip getting src_addr
[ 1017.117375] 
[ 1017.117703] sdp getting dst_addr:
[ 1017.117927] entered dla_get_dma_cube_address(index = 2, offset = 0x300000):
[ 1017.118227] entered dla_get_dma_address(index = 2):
[ 1017.118458] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1017.118712] entered dla_read_dma_address(index = 2):
[ 1017.118961] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1017.119251] *phys_addr = 0xc0800000 + 0x0
[ 1017.119462] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1017.119767] back to dla_get_dma_cube_address: dst_ptr += 0x300000
[ 1017.120036] sdp dst_addr = 0xc0b00000
[ 1017.120036] 
[ 1017.120297] sdp getting x1_addr:
[ 1017.120475] entered dla_get_dma_cube_address(index = 1, offset = 0xc000):
[ 1017.120759] entered dla_get_dma_address(index = 1):
[ 1017.120978] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1017.121230] entered dla_read_dma_address(index = 1):
[ 1017.121462] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1017.121746] *phys_addr = 0xc4000000 + 0x0
[ 1017.121952] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1017.122262] back to dla_get_dma_cube_address: dst_ptr += 0xc000
[ 1017.122530] sdp x1_addr = 0xc400c000
[ 1017.122530] 
[ 1017.122789] sdp skip getting x2_addr
[ 1017.122789] 
[ 1017.123037] sdp skip getting y_addr
[ 1017.123037] 
[ 1017.137752] no desc get due to index==-1
[ 1017.138201] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1017.139054] no desc get due to index==-1
[ 1017.139448] no desc get due to index==-1
[ 1017.139843] no desc get due to index==-1
[ 1017.140235] Enter: dla_op_programmed
[ 1017.140623] Update dependency operation index 14 ROI 0 DEP_COUNT=2
[ 1017.141170] Exit: dla_op_programmed
[ 1017.141552] Exit: dla_program_operation status=0
[ 1017.141969] Enter: dla_enable_operation
[ 1017.142297] Enable SDP operation index 12 ROI 0
[ 1017.144134] Enter: dla_op_enabled
[ 1017.144444] Update dependency operation index 11 ROI 0 DEP_COUNT=2
[ 1017.144892] Exit: dla_op_enabled
[ 1017.145179] Exit: dla_enable_operation status=0
[ 1017.145537] Exit: dla_submit_operation
[ 1017.145860] Exit: dla_dequeue_operation
[ 1017.146187] Enter: dla_free_op_desc op desc index 7 ROI 0
[ 1017.146622] Exit: dla_free_op_desc
[ 1017.146928] Exit:dla_op_completion processor SDP group1 status=0
[ 1017.147361] Exit:dla_handle_events, ret:0
[ 1017.147686] Enter:dla_handle_events, processor:PDP
[ 1017.148052] Exit:dla_handle_events, ret:0
[ 1017.148374] Enter:dla_handle_events, processor:CDP
[ 1017.148742] Exit:dla_handle_events, ret:0
[ 1017.149065] Enter:dla_handle_events, processor:RUBIK
[ 1017.149435] Exit:dla_handle_events, ret:0
[ 1029.394247] Enter:dla_handle_events, processor:BDMA
[ 1029.394888] Exit:dla_handle_events, ret:0
[ 1029.395296] Enter:dla_handle_events, processor:Convolution
[ 1029.395807] Exit:dla_handle_events, ret:0
[ 1029.396215] Enter:dla_handle_events, processor:SDP
[ 1029.396683] Exit:dla_handle_events, ret:0
[ 1029.397113] Enter:dla_handle_events, processor:PDP
[ 1029.397600] Handle op complete event, processor PDP group 0
[ 1029.398137] Enter:dla_op_completion processor PDP group0
[ 1029.398649] Completed PDP operation index 8 ROI 0
[ 1029.399125] Update dependency operation index 9 ROI 0 DEP_COUNT=1
[ 1029.399693] enable Convolution in dla_update_dependency as depdency are resolved
[ 1029.400360] Enter: dla_enable_operation
[ 1029.400776] Enable Convolution operation index 9 ROI 0
[ 1029.401815] Enter: dla_op_enabled
[ 1029.402028] Exit: dla_op_enabled
[ 1029.402209] Exit: dla_enable_operation status=0
[ 1029.402434] 9 HWLs done, totally 52 layers
[ 1029.402638] Enter: dla_dequeue_operation
[ 1029.402866] exit PDP as there's no further operation
[ 1029.403114] Exit: dla_dequeue_operation
[ 1029.403315] Enter: dla_free_op_desc op desc index 8 ROI 0
[ 1029.403614] Exit: dla_free_op_desc
[ 1029.403805] Exit:dla_op_completion processor PDP group0 status=0
[ 1029.404080] Exit:dla_handle_events, ret:0
[ 1029.404282] Enter:dla_handle_events, processor:CDP
[ 1029.404504] Exit:dla_handle_events, ret:0
[ 1029.404702] Enter:dla_handle_events, processor:RUBIK
[ 1029.404935] Exit:dla_handle_events, ret:0
[ 1029.565927] Enter:dla_handle_events, processor:BDMA
[ 1029.566247] Exit:dla_handle_events, ret:0
[ 1029.566460] Enter:dla_handle_events, processor:Convolution
[ 1029.566732] Handle cdma weight done event, processor Convolution group 0
[ 1029.567043] Exit:dla_handle_events, ret:0
[ 1029.567246] Enter:dla_handle_events, processor:SDP
[ 1029.567479] Exit:dla_handle_events, ret:0
[ 1029.567684] Enter:dla_handle_events, processor:PDP
[ 1029.567914] Exit:dla_handle_events, ret:0
[ 1029.568117] Enter:dla_handle_events, processor:CDP
[ 1029.568344] Exit:dla_handle_events, ret:0
[ 1029.568544] Enter:dla_handle_events, processor:RUBIK
[ 1029.568783] Exit:dla_handle_events, ret:0
[ 1044.112562] Enter:dla_handle_events, processor:BDMA
[ 1044.113269] Exit:dla_handle_events, ret:0
[ 1044.113841] Enter:dla_handle_events, processor:Convolution
[ 1044.114534] Handle cdma data done event, processor Convolution group 0
[ 1044.115364] Handle op complete event, processor Convolution group 0
[ 1044.116147] Enter:dla_op_completion processor Convolution group0
[ 1044.116912] Completed Convolution operation index 9 ROI 0
[ 1044.117510] 10 HWLs done, totally 52 layers
[ 1044.117986] Enter: dla_dequeue_operation
[ 1044.118444] Dequeue op from Convolution processor, index=13 ROI=0
[ 1044.119063] Enter: dla_submit_operation
[ 1044.119505] Prepare Convolution operation index 13 ROI 0 dep_count 2
[ 1044.120124] Enter: dla_prepare_operation
[ 1044.120650] processor:Convolution group:0, rdma_group:0 available
[ 1044.121210] Enter: dla_read_config
[ 1044.121507] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1044.122141] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1044.122801] *********************************************************
[ 1044.123187] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1044.123497] ---------------------------------------------------------
[ 1044.123872] weight_data         = [ dla_data_cube =>
[ 1044.124194]     type          = 0
[ 1044.124439]     address       = 1
[ 1044.124682]     offset        = 40000
[ 1044.124938]     width         = 3
[ 1044.125182]     height        = 3
[ 1044.125430]     channel       = 40
[ 1044.125690]     size          = 73728
[ 1044.125947]     line_stride   = 0
[ 1044.126195]     surf_stride   = 0
[ 1044.126445]     plane_stride  = 0
[ 1044.126686] ]
[ 1044.126707] wmb_data            = [ dla_data_cube =>
[ 1044.127149]     type          = 0
[ 1044.127397]     address       = 0
[ 1044.127636]     offset        = 0
[ 1044.127869]     width         = 0
[ 1044.128117]     height        = 0
[ 1044.128361]     channel       = 0
[ 1044.128608]     size          = 0
[ 1044.128841]     line_stride   = 0
[ 1044.129092]     surf_stride   = 0
[ 1044.129336]     plane_stride  = 0
[ 1044.129591] ]
[ 1044.129609] wgs_data            = [ dla_data_cube =>
[ 1044.130060]     type          = 0
[ 1044.130300]     address       = 0
[ 1044.130535]     offset        = 0
[ 1044.130778]     width         = 0
[ 1044.131017]     height        = 0
[ 1044.131254]     channel       = 0
[ 1044.131495]     size          = 0
[ 1044.131737]     line_stride   = 0
[ 1044.131980]     surf_stride   = 0
[ 1044.132222]     plane_stride  = 0
[ 1044.132460] ]
[ 1044.132480] src_data            = [ dla_data_cube =>
[ 1044.132926]     type          = 0
[ 1044.133170]     address       = 2
[ 1044.133413]     offset        = 300000
[ 1044.133692]     width         = 38
[ 1044.133940]     height        = 38
[ 1044.134194]     channel       = 40
[ 1044.134445]     size          = 401408
[ 1044.134709]     line_stride   = 1792
[ 1044.134961]     surf_stride   = 100352
[ 1044.135223]     plane_stride  = 0
[ 1044.135462] ]
[ 1044.135479] dst_data            = [ dla_data_cube =>
[ 1044.135927]     type          = 2
[ 1044.136170]     address       = -1
[ 1044.136423]     offset        = 0
[ 1044.136668]     width         = 38
[ 1044.136910]     height        = 38
[ 1044.137162]     channel       = 40
[ 1044.137416]     size          = 401408
[ 1044.137688]     line_stride   = 1792
[ 1044.137954]     surf_stride   = 100352
[ 1044.138224]     plane_stride  = 0
[ 1044.138458] ]
[ 1044.138479] offset_u            = 0
[ 1044.138860] in_line_uv_stride   = 0
[ 1044.138860] 
[ 1044.139221] *********************************************************
[ 1044.139609] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1044.139898] ---------------------------------------------------------
[ 1044.140297] conv_mode          = 0
[ 1044.140554] data_reuse         = 0
[ 1044.140800] weight_reuse       = 0
[ 1044.141048] skip_data_rls      = 0
[ 1044.141299] skip_weight_rls    = 0
[ 1044.141568] entry_per_slice    = 56
[ 1044.141843] data_format        = 36
[ 1044.142096] pixel_mapping      = 0
[ 1044.142343] fetch_grain        = 1
[ 1044.142591] batch              = 1
[ 1044.142841] weight_format      = 0
[ 1044.143091] data_bank          = 13
[ 1044.143337] weight_bank        = 3
[ 1044.143583] batch_stride       = 0
[ 1044.143840] post_extension     = 0
[ 1044.144094] pixel_override     = 1
[ 1044.144301] release            = 56
[ 1044.144491] input_width_csc    = 56
[ 1044.144675] input_height_csc   = 56
[ 1044.144856] input_channel_csc  = 64
[ 1044.145041] kernel_width_csc   = 3
[ 1044.145218] kernel_height_csc  = 3
[ 1044.145403] kernel_channel_csc = 64
[ 1044.145594] input_width_cmac   = 56
[ 1044.145780] input_height_cmac  = 56
[ 1044.145967] bytes_per_kernel   = 1152
[ 1044.146158] mean_ry            = 0
[ 1044.146341] mean_gu            = 0
[ 1044.146522] mean_bv            = 0
[ 1044.146698] mean_ax            = 0
[ 1044.146877] mean_format        = 0
[ 1044.147056] conv_stride_x      = 1
[ 1044.147236] conv_stride_y      = 1
[ 1044.147414] pad_x_left         = 1
[ 1044.147592] pad_x_right        = 1
[ 1044.147774] pad_y_top          = 1
[ 1044.147951] pad_y_bottom       = 1
[ 1044.148133] dilation_x         = 1
[ 1044.148311] dilation_y         = 1
[ 1044.148494] pra_truncate       = 0
[ 1044.148675] in_precision       = 2
[ 1044.148856] out_precision      = 2
[ 1044.149036] pad_val            = 0
[ 1044.149210] in_cvt             =
[ 1044.149396] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1044.149667] out_cvt            =
[ 1044.149847] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1044.150109] 
[ 1044.150228] Exit: dla_read_config
[ 1044.150416] Exit: dla_prepare_operation status=0
[ 1044.150641] Enter: dla_program_operation
[ 1044.150843] Program Convolution operation index 13 ROI 0 Group[0]
[ 1044.151476] 
[ 1044.151476] entered processor_conv_program():
[ 1044.151775] conv getting weight_address:
[ 1044.151982] entered dla_get_dma_cube_address(index = 1, offset = 0x40000):
[ 1044.152283] entered dla_get_dma_address(index = 1):
[ 1044.152514] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1044.152770] entered dla_read_dma_address(index = 1):
[ 1044.153007] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1044.153302] *phys_addr = 0xc4000000 + 0x0
[ 1044.153512] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1044.153834] back to dla_get_dma_cube_address: dst_ptr += 0x40000
[ 1044.154113] conv weight_addr = 0xc4040000
[ 1044.154113] 
[ 1044.154387] conv getting input_address:
[ 1044.154580] entered dla_read_input_address():
[ 1044.154792] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 3145728)
[ 1044.155161] entered dla_get_dma_cube_address(index = 2, offset = 0x300000):
[ 1044.155472] entered dla_get_dma_address(index = 2):
[ 1044.155703] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1044.155960] entered dla_read_dma_address(index = 2):
[ 1044.156199] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1044.156484] *phys_addr = 0xc0800000 + 0x0
[ 1044.156686] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1044.157016] back to dla_get_dma_cube_address: dst_ptr += 0x300000
[ 1044.157321] conv input_addr = 0xc0b00000
[ 1044.157321] 
[ 1044.161460] no desc get due to index==-1
[ 1044.161762] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1044.162286] no desc get due to index==-1
[ 1044.162479] no desc get due to index==-1
[ 1044.162673] no desc get due to index==-1
[ 1044.162867] no desc get due to index==-1
[ 1044.163068] Enter: dla_op_programmed
[ 1044.163261] Update dependency operation index 15 ROI 0 DEP_COUNT=3
[ 1044.163541] Update dependency operation index 14 ROI 0 DEP_COUNT=1
[ 1044.163813] enable SDP in dla_update_dependency as depdency are resolved
[ 1044.164105] Enter: dla_enable_operation
[ 1044.164302] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1044.164686] Exit: dla_enable_operation status=0
[ 1044.164907] Exit: dla_op_programmed
[ 1044.165093] Exit: dla_program_operation status=0
[ 1044.165319] Exit: dla_submit_operation
[ 1044.165518] Exit: dla_dequeue_operation
[ 1044.165728] Exit:dla_op_completion processor Convolution group0 status=0
[ 1044.166026] Exit:dla_handle_events, ret:0
[ 1044.166228] Enter:dla_handle_events, processor:SDP
[ 1044.166457] Handle op complete event, processor SDP group 0
[ 1044.166717] Enter:dla_op_completion processor SDP group0
[ 1044.166965] Completed SDP operation index 10 ROI 0
[ 1044.167202] Update dependency operation index 11 ROI 0 DEP_COUNT=1
[ 1044.167482] enable Convolution in dla_update_dependency as depdency are resolved
[ 1044.167813] Enter: dla_enable_operation
[ 1044.168011] Enable Convolution operation index 11 ROI 0
[ 1044.168800] Enter: dla_op_enabled
[ 1044.168983] Exit: dla_op_enabled
[ 1044.169273] Exit: dla_enable_operation status=0
[ 1044.169650] 11 HWLs done, totally 52 layers
[ 1044.169998] Enter: dla_free_op_desc op desc index 9 ROI 0
[ 1044.170436] Exit: dla_free_op_desc
[ 1044.170733] Enter: dla_dequeue_operation
[ 1044.171063] Dequeue op from SDP processor, index=14 ROI=0
[ 1044.171467] Enter: dla_submit_operation
[ 1044.171795] Prepare SDP operation index 14 ROI 0 dep_count 0
[ 1044.172212] Enter: dla_prepare_operation
[ 1044.200579] processor:SDP group:0, rdma_group:0 available
[ 1044.201110] Enter: dla_read_config
[ 1044.201532] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1044.202477] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1044.203515] *********************************************************
[ 1044.204102] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1044.204585] ---------------------------------------------------------
[ 1044.205152] src_data            = [ dla_data_cube =>
[ 1044.205644]     type          = 2
[ 1044.206016]     address       = -1
[ 1044.206394]     offset        = 0
[ 1044.206753]     width         = 38
[ 1044.207155]     height        = 38
[ 1044.207518]     channel       = 40
[ 1044.207888]     size          = 401408
[ 1044.208274]     line_stride   = 1792
[ 1044.208650]     surf_stride   = 100352
[ 1044.209035]     plane_stride  = 0
[ 1044.209379] ]
[ 1044.209417] x1_data             = [ dla_data_cube =>
[ 1044.210098]     type          = 0
[ 1044.210289]     address       = 1
[ 1044.210466]     offset        = d000
[ 1044.210648]     width         = 1
[ 1044.210814]     height        = 1
[ 1044.211070]     channel       = 40
[ 1044.211249]     size          = 128
[ 1044.211420]     line_stride   = 32
[ 1044.211597]     surf_stride   = 32
[ 1044.211773]     plane_stride  = 0
[ 1044.211939] ]
[ 1044.211957] x2_data             = [ dla_data_cube =>
[ 1044.212275]     type          = 0
[ 1044.212455]     address       = 2
[ 1044.212635]     offset        = 280000
[ 1044.212825]     width         = 38
[ 1044.213002]     height        = 38
[ 1044.213179]     channel       = 40
[ 1044.213356]     size          = 401408
[ 1044.213551]     line_stride   = 1792
[ 1044.213747]     surf_stride   = 100352
[ 1044.213949]     plane_stride  = 0
[ 1044.214123] ]
[ 1044.214140] y_data              = [ dla_data_cube =>
[ 1044.214467]     type          = 0
[ 1044.214643]     address       = 0
[ 1044.214820]     offset        = 0
[ 1044.214994]     width         = 0
[ 1044.215170]     height        = 0
[ 1044.215345]     channel       = 0
[ 1044.215522]     size          = 0
[ 1044.215695]     line_stride   = 0
[ 1044.215868]     surf_stride   = 0
[ 1044.216044]     plane_stride  = 0
[ 1044.216217] ]
[ 1044.216235] dst_data            = [ dla_data_cube =>
[ 1044.216562]     type          = 0
[ 1044.216746]     address       = 2
[ 1044.216922]     offset        = 380000
[ 1044.217116]     width         = 38
[ 1044.217300]     height        = 38
[ 1044.217478]     channel       = 40
[ 1044.217667]     size          = 401408
[ 1044.217859]     line_stride   = 1792
[ 1044.218047]     surf_stride   = 100352
[ 1044.218247]     plane_stride  = 0
[ 1044.218421] ]
[ 1044.218441] *********************************************************
[ 1044.218808] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1044.219017] ---------------------------------------------------------
[ 1044.219301] src_precision    = 2
[ 1044.219475] dst_precision    = 2
[ 1044.219652] lut_index        = -1
[ 1044.219823] out_cvt          =
[ 1044.219995] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1044.220258] conv_mode        = 0
[ 1044.220432] batch_num        = 1
[ 1044.220602] batch_stride     = 0
[ 1044.220781] x1_op            = [ dla_sdp_op =>
[ 1044.221126]     enable         = 1
[ 1044.221419]     alu_type       = 2
[ 1044.221748]     type           = 2
[ 1044.222053]     mode           = 1
[ 1044.222347]     act            = 0
[ 1044.222671]     shift_value    = 0
[ 1044.222998]     truncate       = 0
[ 1044.223310]     precision      = 2
[ 1044.223609]     alu_operand    = 0
[ 1044.223913]     mul_operand    = 1
[ 1044.224200] cvt.alu_cvt          =
[ 1044.224501] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.224906] cvt.mul_cvt          =
[ 1044.225170] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.225434] ]
[ 1044.225567] x2_op            = [ dla_sdp_op =>
[ 1044.225794]     enable         = 1
[ 1044.225981]     alu_type       = 2
[ 1044.226160]     type           = 2
[ 1044.226339]     mode           = 2
[ 1044.226544]     act            = 1
[ 1044.226734]     shift_value    = 0
[ 1044.226913]     truncate       = 0
[ 1044.227099]     precision      = 2
[ 1044.227279]     alu_operand    = 0
[ 1044.227461]     mul_operand    = 1
[ 1044.227634] cvt.alu_cvt          =
[ 1044.227815] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.228070] cvt.mul_cvt          =
[ 1044.228250] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.228510] ]
[ 1044.228628] y_op             = [ dla_sdp_op =>
[ 1044.228841]     enable         = 0
[ 1044.229023]     alu_type       = 0
[ 1044.229212]     type           = 0
[ 1044.229434]     mode           = 0
[ 1044.229619]     act            = 0
[ 1044.229802]     shift_value    = 0
[ 1044.229983]     truncate       = 0
[ 1044.230160]     precision      = 0
[ 1044.230345]     alu_operand    = 0
[ 1044.230530]     mul_operand    = 0
[ 1044.230705] cvt.alu_cvt          =
[ 1044.230888] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.231148] cvt.mul_cvt          =
[ 1044.231337] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1044.231594] ]
[ 1044.231717] Exit: dla_read_config
[ 1044.231900] Exit: dla_prepare_operation status=0
[ 1044.232119] Enter: dla_program_operation
[ 1044.232325] Program SDP operation index 14 ROI 0 Group[0]
[ 1044.233648] 
[ 1044.233648] entered processor_sdp_program():
[ 1044.234011] sdp skip getting src_addr
[ 1044.234011] 
[ 1044.234277] sdp getting dst_addr:
[ 1044.234463] entered dla_get_dma_cube_address(index = 2, offset = 0x380000):
[ 1044.234765] entered dla_get_dma_address(index = 2):
[ 1044.234992] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1044.235242] entered dla_read_dma_address(index = 2):
[ 1044.235480] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1044.235772] *phys_addr = 0xc0800000 + 0x0
[ 1044.235982] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1044.236331] back to dla_get_dma_cube_address: dst_ptr += 0x380000
[ 1044.236813] sdp dst_addr = 0xc0b80000
[ 1044.236813] 
[ 1044.237185] sdp getting x1_addr:
[ 1044.237366] entered dla_get_dma_cube_address(index = 1, offset = 0xd000):
[ 1044.237675] entered dla_get_dma_address(index = 1):
[ 1044.237905] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1044.238154] entered dla_read_dma_address(index = 1):
[ 1044.238386] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1044.238671] *phys_addr = 0xc4000000 + 0x0
[ 1044.238877] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1044.239188] back to dla_get_dma_cube_address: dst_ptr += 0xd000
[ 1044.239451] sdp x1_addr = 0xc400d000
[ 1044.239451] 
[ 1044.239732] sdp getting x2_addr:
[ 1044.239949] entered dla_get_dma_cube_address(index = 2, offset = 0x280000):
[ 1044.240260] entered dla_get_dma_address(index = 2):
[ 1044.240520] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1044.240773] entered dla_read_dma_address(index = 2):
[ 1044.241009] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1044.241295] *phys_addr = 0xc0800000 + 0x0
[ 1044.241511] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1044.241818] back to dla_get_dma_cube_address: dst_ptr += 0x280000
[ 1044.242125] sdp x1_addr = 0xc0a80000
[ 1044.242125] 
[ 1044.242449] sdp skip getting y_addr
[ 1044.242449] 
[ 1044.252495] no desc get due to index==-1
[ 1044.253111] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1044.254164] no desc get due to index==-1
[ 1044.254489] no desc get due to index==-1
[ 1044.254834] no desc get due to index==-1
[ 1044.255191] Enter: dla_op_programmed
[ 1044.255532] Update dependency operation index 16 ROI 0 DEP_COUNT=2
[ 1044.256002] Exit: dla_op_programmed
[ 1044.256306] Exit: dla_program_operation status=0
[ 1044.256668] Enter: dla_enable_operation
[ 1044.257005] Enable SDP operation index 14 ROI 0
[ 1044.264319] Enter: dla_op_enabled
[ 1044.264673] Update dependency operation index 13 ROI 0 DEP_COUNT=2
[ 1044.265169] Exit: dla_op_enabled
[ 1044.265495] Exit: dla_enable_operation status=0
[ 1044.265884] Exit: dla_submit_operation
[ 1044.266243] Exit: dla_dequeue_operation
[ 1044.266617] Enter: dla_free_op_desc op desc index 10 ROI 0
[ 1044.267111] Exit: dla_free_op_desc
[ 1044.267468] Exit:dla_op_completion processor SDP group0 status=0
[ 1044.267951] Exit:dla_handle_events, ret:0
[ 1044.268286] Enter:dla_handle_events, processor:PDP
[ 1044.268667] Exit:dla_handle_events, ret:0
[ 1044.269035] Enter:dla_handle_events, processor:CDP
[ 1044.269421] Exit:dla_handle_events, ret:0
[ 1044.269775] Enter:dla_handle_events, processor:RUBIK
[ 1044.270176] Exit:dla_handle_events, ret:0
[ 1143.056849] Enter:dla_handle_events, processor:BDMA
[ 1143.057624] Exit:dla_handle_events, ret:0
[ 1143.058044] Enter:dla_handle_events, processor:Convolution
[ 1143.058570] Handle cdma weight done event, processor Convolution group 1
[ 1143.059203] Handle cdma data done event, processor Convolution group 1
[ 1143.059789] Handle op complete event, processor Convolution group 1
[ 1143.060361] Enter:dla_op_completion processor Convolution group1
[ 1143.060912] Completed Convolution operation index 11 ROI 0
[ 1143.061449] 12 HWLs done, totally 52 layers
[ 1143.061905] Enter: dla_dequeue_operation
[ 1143.062334] Dequeue op from Convolution processor, index=15 ROI=0
[ 1143.062887] Enter: dla_submit_operation
[ 1143.063298] Prepare Convolution operation index 15 ROI 0 dep_count 2
[ 1143.063873] Enter: dla_prepare_operation
[ 1143.064436] processor:Convolution group:1, rdma_group:0 available
[ 1143.065008] Enter: dla_read_config
[ 1143.065476] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1143.066456] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1143.067094] *********************************************************
[ 1143.067390] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1143.067612] ---------------------------------------------------------
[ 1143.067898] weight_data         = [ dla_data_cube =>
[ 1143.068134]     type          = 0
[ 1143.068313]     address       = 1
[ 1143.068493]     offset        = 60000
[ 1143.068688]     width         = 3
[ 1143.068871]     height        = 3
[ 1143.069053]     channel       = 40
[ 1143.069239]     size          = 73728
[ 1143.069433]     line_stride   = 0
[ 1143.069619]     surf_stride   = 0
[ 1143.069800]     plane_stride  = 0
[ 1143.069976] ]
[ 1143.069998] wmb_data            = [ dla_data_cube =>
[ 1143.070335]     type          = 0
[ 1143.070515]     address       = 0
[ 1143.070696]     offset        = 0
[ 1143.070877]     width         = 0
[ 1143.071057]     height        = 0
[ 1143.071237]     channel       = 0
[ 1143.071417]     size          = 0
[ 1143.071601]     line_stride   = 0
[ 1143.071791]     surf_stride   = 0
[ 1143.071971]     plane_stride  = 0
[ 1143.072148] ]
[ 1143.072166] wgs_data            = [ dla_data_cube =>
[ 1143.072505]     type          = 0
[ 1143.072692]     address       = 0
[ 1143.072873]     offset        = 0
[ 1143.073051]     width         = 0
[ 1143.073232]     height        = 0
[ 1143.073412]     channel       = 0
[ 1143.073609]     size          = 0
[ 1143.073803]     line_stride   = 0
[ 1143.074035]     surf_stride   = 0
[ 1143.074217]     plane_stride  = 0
[ 1143.074402] ]
[ 1143.074420] src_data            = [ dla_data_cube =>
[ 1143.074745]     type          = 0
[ 1143.074923]     address       = 2
[ 1143.075100]     offset        = 380000
[ 1143.075292]     width         = 38
[ 1143.075473]     height        = 38
[ 1143.075655]     channel       = 40
[ 1143.075838]     size          = 401408
[ 1143.076030]     line_stride   = 1792
[ 1143.076217]     surf_stride   = 100352
[ 1143.076410]     plane_stride  = 0
[ 1143.076584] ]
[ 1143.076602] dst_data            = [ dla_data_cube =>
[ 1143.076929]     type          = 2
[ 1143.077111]     address       = -1
[ 1143.077294]     offset        = 0
[ 1143.077475]     width         = 38
[ 1143.077682]     height        = 38
[ 1143.077860]     channel       = 40
[ 1143.078041]     size          = 401408
[ 1143.078234]     line_stride   = 1792
[ 1143.078422]     surf_stride   = 100352
[ 1143.078618]     plane_stride  = 0
[ 1143.078787] ]
[ 1143.078808] offset_u            = 0
[ 1143.079086] in_line_uv_stride   = 0
[ 1143.079086] 
[ 1143.079348] *********************************************************
[ 1143.079636] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1143.079850] ---------------------------------------------------------
[ 1143.080135] conv_mode          = 0
[ 1143.080318] data_reuse         = 0
[ 1143.080504] weight_reuse       = 0
[ 1143.080694] skip_data_rls      = 0
[ 1143.080876] skip_weight_rls    = 0
[ 1143.081057] entry_per_slice    = 56
[ 1143.081244] data_format        = 36
[ 1143.081427] pixel_mapping      = 0
[ 1143.081613] fetch_grain        = 1
[ 1143.081799] batch              = 1
[ 1143.081979] weight_format      = 0
[ 1143.082159] data_bank          = 13
[ 1143.082341] weight_bank        = 3
[ 1143.082520] batch_stride       = 0
[ 1143.082697] post_extension     = 0
[ 1143.082879] pixel_override     = 1
[ 1143.083063] release            = 56
[ 1143.083249] input_width_csc    = 56
[ 1143.083433] input_height_csc   = 56
[ 1143.083618] input_channel_csc  = 64
[ 1143.083805] kernel_width_csc   = 3
[ 1143.083989] kernel_height_csc  = 3
[ 1143.084176] kernel_channel_csc = 64
[ 1143.084367] input_width_cmac   = 56
[ 1143.084556] input_height_cmac  = 56
[ 1143.084745] bytes_per_kernel   = 1152
[ 1143.084932] mean_ry            = 0
[ 1143.085111] mean_gu            = 0
[ 1143.085295] mean_bv            = 0
[ 1143.085477] mean_ax            = 0
[ 1143.085676] mean_format        = 0
[ 1143.085864] conv_stride_x      = 1
[ 1143.086044] conv_stride_y      = 1
[ 1143.086227] pad_x_left         = 1
[ 1143.086411] pad_x_right        = 1
[ 1143.086593] pad_y_top          = 1
[ 1143.086774] pad_y_bottom       = 1
[ 1143.086952] dilation_x         = 1
[ 1143.087134] dilation_y         = 1
[ 1143.087312] pra_truncate       = 0
[ 1143.087496] in_precision       = 2
[ 1143.087679] out_precision      = 2
[ 1143.087866] pad_val            = 0
[ 1143.088041] in_cvt             =
[ 1143.088217] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1143.088483] out_cvt            =
[ 1143.088661] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1143.088922] 
[ 1143.089034] Exit: dla_read_config
[ 1143.089215] Exit: dla_prepare_operation status=0
[ 1143.089438] Enter: dla_program_operation
[ 1143.089647] Program Convolution operation index 15 ROI 0 Group[1]
[ 1143.090277] 
[ 1143.090277] entered processor_conv_program():
[ 1143.090621] conv getting weight_address:
[ 1143.090829] entered dla_get_dma_cube_address(index = 1, offset = 0x60000):
[ 1143.091132] entered dla_get_dma_address(index = 1):
[ 1143.091364] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1143.091624] entered dla_read_dma_address(index = 1):
[ 1143.091856] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1143.092161] *phys_addr = 0xc4000000 + 0x0
[ 1143.092364] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1143.092662] back to dla_get_dma_cube_address: dst_ptr += 0x60000
[ 1143.092925] conv weight_addr = 0xc4060000
[ 1143.092925] 
[ 1143.093202] conv getting input_address:
[ 1143.093390] entered dla_read_input_address():
[ 1143.093615] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 3670016)
[ 1143.093983] entered dla_get_dma_cube_address(index = 2, offset = 0x380000):
[ 1143.094288] entered dla_get_dma_address(index = 2):
[ 1143.094506] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1143.094755] entered dla_read_dma_address(index = 2):
[ 1143.094991] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1143.095279] *phys_addr = 0xc0800000 + 0x0
[ 1143.095477] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1143.095786] back to dla_get_dma_cube_address: dst_ptr += 0x380000
[ 1143.096059] conv input_addr = 0xc0b80000
[ 1143.096059] 
[ 1143.099659] no desc get due to index==-1
[ 1143.099940] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1143.100488] no desc get due to index==-1
[ 1143.100724] no desc get due to index==-1
[ 1143.100925] no desc get due to index==-1
[ 1143.101118] no desc get due to index==-1
[ 1143.101317] Enter: dla_op_programmed
[ 1143.101515] Update dependency operation index 17 ROI 0 DEP_COUNT=3
[ 1143.101793] Update dependency operation index 16 ROI 0 DEP_COUNT=1
[ 1143.102064] enable SDP in dla_update_dependency as depdency are resolved
[ 1143.102352] Enter: dla_enable_operation
[ 1143.102546] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1143.102922] Exit: dla_enable_operation status=0
[ 1143.103139] Exit: dla_op_programmed
[ 1143.103321] Exit: dla_program_operation status=0
[ 1143.103538] Exit: dla_submit_operation
[ 1143.103729] Exit: dla_dequeue_operation
[ 1143.103933] Exit:dla_op_completion processor Convolution group1 status=0
[ 1143.104231] Exit:dla_handle_events, ret:0
[ 1143.104435] Enter:dla_handle_events, processor:SDP
[ 1143.104662] Handle op complete event, processor SDP group 1
[ 1143.104918] Enter:dla_op_completion processor SDP group1
[ 1143.105162] Completed SDP operation index 12 ROI 0
[ 1143.105398] Update dependency operation index 13 ROI 0 DEP_COUNT=1
[ 1143.105688] enable Convolution in dla_update_dependency as depdency are resolved
[ 1143.106023] Enter: dla_enable_operation
[ 1143.106222] Enable Convolution operation index 13 ROI 0
[ 1143.107091] Enter: dla_op_enabled
[ 1143.107470] Exit: dla_op_enabled
[ 1143.107765] Exit: dla_enable_operation status=0
[ 1143.108130] 13 HWLs done, totally 52 layers
[ 1143.108478] Enter: dla_free_op_desc op desc index 11 ROI 0
[ 1143.108947] Exit: dla_free_op_desc
[ 1143.109250] Enter: dla_dequeue_operation
[ 1143.109589] Dequeue op from SDP processor, index=16 ROI=0
[ 1143.109996] Enter: dla_submit_operation
[ 1143.110326] Prepare SDP operation index 16 ROI 0 dep_count 0
[ 1143.110761] Enter: dla_prepare_operation
[ 1143.140597] processor:SDP group:1, rdma_group:1 available
[ 1143.141022] Enter: dla_read_config
[ 1143.141341] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1143.142106] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1143.142937] *********************************************************
[ 1143.143402] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1143.143771] ---------------------------------------------------------
[ 1143.144222] src_data            = [ dla_data_cube =>
[ 1143.144610]     type          = 2
[ 1143.144901]     address       = -1
[ 1143.145193]     offset        = 0
[ 1143.145478]     width         = 38
[ 1143.145774]     height        = 38
[ 1143.146065]     channel       = 40
[ 1143.146359]     size          = 401408
[ 1143.146672]     line_stride   = 1792
[ 1143.146973]     surf_stride   = 100352
[ 1143.147283]     plane_stride  = 0
[ 1143.147559] ]
[ 1143.147589] x1_data             = [ dla_data_cube =>
[ 1143.148118]     type          = 0
[ 1143.148406]     address       = 1
[ 1143.148692]     offset        = e000
[ 1143.148989]     width         = 1
[ 1143.149274]     height        = 1
[ 1143.149571]     channel       = 40
[ 1143.149869]     size          = 128
[ 1143.150165]     line_stride   = 32
[ 1143.150460]     surf_stride   = 32
[ 1143.150710]     plane_stride  = 0
[ 1143.150880] ]
[ 1143.150897] x2_data             = [ dla_data_cube =>
[ 1143.151212]     type          = 0
[ 1143.151391]     address       = 0
[ 1143.151565]     offset        = 0
[ 1143.151740]     width         = 0
[ 1143.151914]     height        = 0
[ 1143.152090]     channel       = 0
[ 1143.152272]     size          = 0
[ 1143.152450]     line_stride   = 0
[ 1143.152628]     surf_stride   = 0
[ 1143.152804]     plane_stride  = 0
[ 1143.152975] ]
[ 1143.152992] y_data              = [ dla_data_cube =>
[ 1143.153312]     type          = 0
[ 1143.153494]     address       = 0
[ 1143.153674]     offset        = 0
[ 1143.153852]     width         = 0
[ 1143.154029]     height        = 0
[ 1143.154202]     channel       = 0
[ 1143.154375]     size          = 0
[ 1143.154582]     line_stride   = 0
[ 1143.154761]     surf_stride   = 0
[ 1143.154936]     plane_stride  = 0
[ 1143.155105] ]
[ 1143.155123] dst_data            = [ dla_data_cube =>
[ 1143.155442]     type          = 0
[ 1143.155616]     address       = 2
[ 1143.155789]     offset        = 400000
[ 1143.155976]     width         = 38
[ 1143.156156]     height        = 38
[ 1143.156334]     channel       = 40
[ 1143.156511]     size          = 401408
[ 1143.156702]     line_stride   = 1792
[ 1143.156892]     surf_stride   = 100352
[ 1143.157085]     plane_stride  = 0
[ 1143.157325] ]
[ 1143.157345] *********************************************************
[ 1143.157717] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1143.157932] ---------------------------------------------------------
[ 1143.158224] src_precision    = 2
[ 1143.158401] dst_precision    = 2
[ 1143.158582] lut_index        = -1
[ 1143.158757] out_cvt          =
[ 1143.158936] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1143.159204] conv_mode        = 0
[ 1143.159379] batch_num        = 1
[ 1143.159553] batch_stride     = 0
[ 1143.159731] x1_op            = [ dla_sdp_op =>
[ 1143.159957]     enable         = 1
[ 1143.160140]     alu_type       = 2
[ 1143.160348]     type           = 2
[ 1143.160531]     mode           = 1
[ 1143.160710]     act            = 1
[ 1143.160890]     shift_value    = 0
[ 1143.161074]     truncate       = 0
[ 1143.161256]     precision      = 2
[ 1143.161440]     alu_operand    = 0
[ 1143.161646]     mul_operand    = 1
[ 1143.161827] cvt.alu_cvt          =
[ 1143.162027] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.162286] cvt.mul_cvt          =
[ 1143.162473] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.162742] ]
[ 1143.162858] x2_op            = [ dla_sdp_op =>
[ 1143.163080]     enable         = 0
[ 1143.163263]     alu_type       = 0
[ 1143.163442]     type           = 0
[ 1143.163619]     mode           = 0
[ 1143.163803]     act            = 0
[ 1143.163984]     shift_value    = 0
[ 1143.164168]     truncate       = 0
[ 1143.164384]     precision      = 0
[ 1143.164568]     alu_operand    = 0
[ 1143.164755]     mul_operand    = 0
[ 1143.164936] cvt.alu_cvt          =
[ 1143.165121] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.165391] cvt.mul_cvt          =
[ 1143.165574] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.165836] ]
[ 1143.165958] y_op             = [ dla_sdp_op =>
[ 1143.166179]     enable         = 0
[ 1143.166360]     alu_type       = 0
[ 1143.166538]     type           = 0
[ 1143.166726]     mode           = 0
[ 1143.166917]     act            = 0
[ 1143.167102]     shift_value    = 0
[ 1143.167291]     truncate       = 0
[ 1143.167470]     precision      = 0
[ 1143.167654]     alu_operand    = 0
[ 1143.167837]     mul_operand    = 0
[ 1143.168013] cvt.alu_cvt          =
[ 1143.168195] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.168455] cvt.mul_cvt          =
[ 1143.168632] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1143.168898] ]
[ 1143.169026] Exit: dla_read_config
[ 1143.169209] Exit: dla_prepare_operation status=0
[ 1143.169442] Enter: dla_program_operation
[ 1143.169661] Program SDP operation index 16 ROI 0 Group[1]
[ 1143.171267] 
[ 1143.171267] entered processor_sdp_program():
[ 1143.171568] sdp skip getting src_addr
[ 1143.171568] 
[ 1143.171896] sdp getting dst_addr:
[ 1143.172126] entered dla_get_dma_cube_address(index = 2, offset = 0x400000):
[ 1143.172507] entered dla_get_dma_address(index = 2):
[ 1143.172762] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1143.173010] entered dla_read_dma_address(index = 2):
[ 1143.173241] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1143.173536] *phys_addr = 0xc0800000 + 0x0
[ 1143.173744] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1143.174110] back to dla_get_dma_cube_address: dst_ptr += 0x400000
[ 1143.174384] sdp dst_addr = 0xc0c00000
[ 1143.174384] 
[ 1143.174642] sdp getting x1_addr:
[ 1143.174822] entered dla_get_dma_cube_address(index = 1, offset = 0xe000):
[ 1143.175113] entered dla_get_dma_address(index = 1):
[ 1143.175340] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1143.175589] entered dla_read_dma_address(index = 1):
[ 1143.175825] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1143.176122] *phys_addr = 0xc4000000 + 0x0
[ 1143.176337] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1143.176645] back to dla_get_dma_cube_address: dst_ptr += 0xe000
[ 1143.176913] sdp x1_addr = 0xc400e000
[ 1143.176913] 
[ 1143.177168] sdp skip getting x2_addr
[ 1143.177168] 
[ 1143.177415] sdp skip getting y_addr
[ 1143.177415] 
[ 1143.185991] no desc get due to index==-1
[ 1143.186285] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1143.186784] no desc get due to index==-1
[ 1143.186977] no desc get due to index==-1
[ 1143.187172] no desc get due to index==-1
[ 1143.187368] Enter: dla_op_programmed
[ 1143.187560] Update dependency operation index 18 ROI 0 DEP_COUNT=2
[ 1143.187831] Exit: dla_op_programmed
[ 1143.188016] Exit: dla_program_operation status=0
[ 1143.188235] Enter: dla_enable_operation
[ 1143.188433] Enable SDP operation index 16 ROI 0
[ 1143.189594] Enter: dla_op_enabled
[ 1143.189898] Update dependency operation index 15 ROI 0 DEP_COUNT=2
[ 1143.190339] Exit: dla_op_enabled
[ 1143.190678] Exit: dla_enable_operation status=0
[ 1143.190950] Exit: dla_submit_operation
[ 1143.191307] Exit: dla_dequeue_operation
[ 1143.191677] Enter: dla_free_op_desc op desc index 12 ROI 0
[ 1143.192052] Exit: dla_free_op_desc
[ 1143.192289] Exit:dla_op_completion processor SDP group1 status=0
[ 1143.192626] Exit:dla_handle_events, ret:0
[ 1143.192876] Enter:dla_handle_events, processor:PDP
[ 1143.193154] Exit:dla_handle_events, ret:0
[ 1143.193401] Enter:dla_handle_events, processor:CDP
[ 1143.193684] Exit:dla_handle_events, ret:0
[ 1143.193943] Enter:dla_handle_events, processor:RUBIK
[ 1143.194234] Exit:dla_handle_events, ret:0
[ 1243.804446] Enter:dla_handle_events, processor:BDMA
[ 1243.804945] Exit:dla_handle_events, ret:0
[ 1243.805315] Enter:dla_handle_events, processor:Convolution
[ 1243.805735] Handle cdma weight done event, processor Convolution group 0
[ 1243.806214] Handle cdma data done event, processor Convolution group 0
[ 1243.806591] Handle op complete event, processor Convolution group 0
[ 1243.806946] Enter:dla_op_completion processor Convolution group0
[ 1243.807290] Completed Convolution operation index 13 ROI 0
[ 1243.807655] 14 HWLs done, totally 52 layers
[ 1243.807928] Enter: dla_dequeue_operation
[ 1243.808182] Dequeue op from Convolution processor, index=17 ROI=0
[ 1243.808538] Enter: dla_submit_operation
[ 1243.808800] Prepare Convolution operation index 17 ROI 0 dep_count 2
[ 1243.809150] Enter: dla_prepare_operation
[ 1243.809478] processor:Convolution group:0, rdma_group:0 available
[ 1243.809825] Enter: dla_read_config
[ 1243.810120] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1243.811066] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1243.812118] *********************************************************
[ 1243.812727] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1243.813191] ---------------------------------------------------------
[ 1243.813769] weight_data         = [ dla_data_cube =>
[ 1243.814250]     type          = 0
[ 1243.814446]     address       = 1
[ 1243.814624]     offset        = 80000
[ 1243.814810]     width         = 3
[ 1243.814986]     height        = 3
[ 1243.815160]     channel       = 40
[ 1243.815336]     size          = 73728
[ 1243.815526]     line_stride   = 0
[ 1243.815712]     surf_stride   = 0
[ 1243.815894]     plane_stride  = 0
[ 1243.816122] ]
[ 1243.816144] wmb_data            = [ dla_data_cube =>
[ 1243.816577]     type          = 0
[ 1243.816828]     address       = 0
[ 1243.817085]     offset        = 0
[ 1243.817342]     width         = 0
[ 1243.817586]     height        = 0
[ 1243.817827]     channel       = 0
[ 1243.818066]     size          = 0
[ 1243.818321]     line_stride   = 0
[ 1243.818568]     surf_stride   = 0
[ 1243.818812]     plane_stride  = 0
[ 1243.819051] ]
[ 1243.819071] wgs_data            = [ dla_data_cube =>
[ 1243.819523]     type          = 0
[ 1243.819779]     address       = 0
[ 1243.820027]     offset        = 0
[ 1243.820267]     width         = 0
[ 1243.820508]     height        = 0
[ 1243.820751]     channel       = 0
[ 1243.820993]     size          = 0
[ 1243.821238]     line_stride   = 0
[ 1243.821483]     surf_stride   = 0
[ 1243.821721]     plane_stride  = 0
[ 1243.821968] ]
[ 1243.821986] src_data            = [ dla_data_cube =>
[ 1243.822445]     type          = 0
[ 1243.822696]     address       = 2
[ 1243.822942]     offset        = 400000
[ 1243.823201]     width         = 38
[ 1243.823455]     height        = 38
[ 1243.823711]     channel       = 40
[ 1243.823974]     size          = 401408
[ 1243.824268]     line_stride   = 1792
[ 1243.824530]     surf_stride   = 100352
[ 1243.824797]     plane_stride  = 0
[ 1243.825031] ]
[ 1243.825048] dst_data            = [ dla_data_cube =>
[ 1243.825491]     type          = 2
[ 1243.825746]     address       = -1
[ 1243.825989]     offset        = 0
[ 1243.826229]     width         = 38
[ 1243.826484]     height        = 38
[ 1243.826724]     channel       = 40
[ 1243.826971]     size          = 401408
[ 1243.827226]     line_stride   = 1792
[ 1243.827479]     surf_stride   = 100352
[ 1243.827739]     plane_stride  = 0
[ 1243.827975] ]
[ 1243.827995] offset_u            = 0
[ 1243.828369] in_line_uv_stride   = 0
[ 1243.828369] 
[ 1243.828716] *********************************************************
[ 1243.829108] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1243.829401] ---------------------------------------------------------
[ 1243.829780] conv_mode          = 0
[ 1243.830028] data_reuse         = 0
[ 1243.830275] weight_reuse       = 0
[ 1243.830521] skip_data_rls      = 0
[ 1243.830775] skip_weight_rls    = 0
[ 1243.831025] entry_per_slice    = 56
[ 1243.831275] data_format        = 36
[ 1243.831529] pixel_mapping      = 0
[ 1243.831778] fetch_grain        = 1
[ 1243.832029] batch              = 1
[ 1243.832269] weight_format      = 0
[ 1243.832509] data_bank          = 13
[ 1243.832752] weight_bank        = 3
[ 1243.832993] batch_stride       = 0
[ 1243.833236] post_extension     = 0
[ 1243.833480] pixel_override     = 1
[ 1243.833737] release            = 56
[ 1243.833996] input_width_csc    = 56
[ 1243.834247] input_height_csc   = 56
[ 1243.834492] input_channel_csc  = 64
[ 1243.834743] kernel_width_csc   = 3
[ 1243.834990] kernel_height_csc  = 3
[ 1243.835241] kernel_channel_csc = 64
[ 1243.835493] input_width_cmac   = 56
[ 1243.835747] input_height_cmac  = 56
[ 1243.836001] bytes_per_kernel   = 1152
[ 1243.836261] mean_ry            = 0
[ 1243.836517] mean_gu            = 0
[ 1243.836769] mean_bv            = 0
[ 1243.837020] mean_ax            = 0
[ 1243.837273] mean_format        = 0
[ 1243.837528] conv_stride_x      = 1
[ 1243.837780] conv_stride_y      = 1
[ 1243.838035] pad_x_left         = 1
[ 1243.838288] pad_x_right        = 1
[ 1243.838539] pad_y_top          = 1
[ 1243.838788] pad_y_bottom       = 1
[ 1243.839045] dilation_x         = 1
[ 1243.839289] dilation_y         = 1
[ 1243.839543] pra_truncate       = 0
[ 1243.839802] in_precision       = 2
[ 1243.840059] out_precision      = 2
[ 1243.840299] pad_val            = 0
[ 1243.840536] in_cvt             =
[ 1243.840778] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1243.841146] out_cvt            =
[ 1243.841390] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1243.841772] 
[ 1243.841930] Exit: dla_read_config
[ 1243.842178] Exit: dla_prepare_operation status=0
[ 1243.842501] Enter: dla_program_operation
[ 1243.842793] Program Convolution operation index 17 ROI 0 Group[0]
[ 1243.843414] 
[ 1243.843414] entered processor_conv_program():
[ 1243.843807] conv getting weight_address:
[ 1243.844092] entered dla_get_dma_cube_address(index = 1, offset = 0x80000):
[ 1243.844527] entered dla_get_dma_address(index = 1):
[ 1243.844853] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1243.845212] entered dla_read_dma_address(index = 1):
[ 1243.845542] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1243.845951] *phys_addr = 0xc4000000 + 0x0
[ 1243.846247] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1243.846667] back to dla_get_dma_cube_address: dst_ptr += 0x80000
[ 1243.847028] conv weight_addr = 0xc4080000
[ 1243.847028] 
[ 1243.847394] conv getting input_address:
[ 1243.847650] entered dla_read_input_address():
[ 1243.847941] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 4194304)
[ 1243.848430] entered dla_get_dma_cube_address(index = 2, offset = 0x400000):
[ 1243.848857] entered dla_get_dma_address(index = 2):
[ 1243.849192] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1243.849540] entered dla_read_dma_address(index = 2):
[ 1243.849862] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1243.850262] *phys_addr = 0xc0800000 + 0x0
[ 1243.850544] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1243.850976] back to dla_get_dma_cube_address: dst_ptr += 0x400000
[ 1243.851341] conv input_addr = 0xc0c00000
[ 1243.851341] 
[ 1243.854368] no desc get due to index==-1
[ 1243.854727] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1243.855428] no desc get due to index==-1
[ 1243.855711] no desc get due to index==-1
[ 1243.855985] no desc get due to index==-1
[ 1243.856262] no desc get due to index==-1
[ 1243.856543] Enter: dla_op_programmed
[ 1243.856809] Update dependency operation index 19 ROI 0 DEP_COUNT=3
[ 1243.857191] Update dependency operation index 18 ROI 0 DEP_COUNT=1
[ 1243.857584] enable SDP in dla_update_dependency as depdency are resolved
[ 1243.858014] Enter: dla_enable_operation
[ 1243.858285] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1243.858831] Exit: dla_enable_operation status=0
[ 1243.859130] Exit: dla_op_programmed
[ 1243.859382] Exit: dla_program_operation status=0
[ 1243.859682] Exit: dla_submit_operation
[ 1243.859947] Exit: dla_dequeue_operation
[ 1243.860227] Exit:dla_op_completion processor Convolution group0 status=0
[ 1243.860646] Exit:dla_handle_events, ret:0
[ 1243.860924] Enter:dla_handle_events, processor:SDP
[ 1243.861245] Handle op complete event, processor SDP group 0
[ 1243.861610] Enter:dla_op_completion processor SDP group0
[ 1243.861945] Completed SDP operation index 14 ROI 0
[ 1243.862275] Update dependency operation index 15 ROI 0 DEP_COUNT=1
[ 1243.862653] enable Convolution in dla_update_dependency as depdency are resolved
[ 1243.863117] Enter: dla_enable_operation
[ 1243.863384] Enable Convolution operation index 15 ROI 0
[ 1243.864151] Enter: dla_op_enabled
[ 1243.864408] Exit: dla_op_enabled
[ 1243.864659] Exit: dla_enable_operation status=0
[ 1243.864980] 15 HWLs done, totally 52 layers
[ 1243.865268] Enter: dla_free_op_desc op desc index 13 ROI 0
[ 1243.865653] Exit: dla_free_op_desc
[ 1243.865919] Enter: dla_dequeue_operation
[ 1243.866214] Dequeue op from SDP processor, index=18 ROI=0
[ 1243.866570] Enter: dla_submit_operation
[ 1243.866851] Prepare SDP operation index 18 ROI 0 dep_count 0
[ 1243.867208] Enter: dla_prepare_operation
[ 1243.899340] processor:SDP group:0, rdma_group:0 available
[ 1243.899774] Enter: dla_read_config
[ 1243.900096] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1243.900727] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1243.901398] *********************************************************
[ 1243.901811] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1243.902112] ---------------------------------------------------------
[ 1243.902587] src_data            = [ dla_data_cube =>
[ 1243.902990]     type          = 2
[ 1243.903300]     address       = -1
[ 1243.903608]     offset        = 0
[ 1243.903919]     width         = 38
[ 1243.904226]     height        = 38
[ 1243.904536]     channel       = 40
[ 1243.904849]     size          = 401408
[ 1243.905180]     line_stride   = 1792
[ 1243.905503]     surf_stride   = 100352
[ 1243.905833]     plane_stride  = 0
[ 1243.906140] ]
[ 1243.906164] x1_data             = [ dla_data_cube =>
[ 1243.906733]     type          = 0
[ 1243.907041]     address       = 1
[ 1243.907370]     offset        = f000
[ 1243.907693]     width         = 1
[ 1243.907980]     height        = 1
[ 1243.908283]     channel       = 40
[ 1243.908599]     size          = 128
[ 1243.908918]     line_stride   = 32
[ 1243.909233]     surf_stride   = 32
[ 1243.909557]     plane_stride  = 0
[ 1243.909855] ]
[ 1243.909878] x2_data             = [ dla_data_cube =>
[ 1243.910398]     type          = 0
[ 1243.910643]     address       = 2
[ 1243.910902]     offset        = 380000
[ 1243.911167]     width         = 38
[ 1243.911418]     height        = 38
[ 1243.911666]     channel       = 40
[ 1243.911919]     size          = 401408
[ 1243.912179]     line_stride   = 1792
[ 1243.912438]     surf_stride   = 100352
[ 1243.912714]     plane_stride  = 0
[ 1243.912958] ]
[ 1243.912976] y_data              = [ dla_data_cube =>
[ 1243.913432]     type          = 0
[ 1243.913685]     address       = 0
[ 1243.913932]     offset        = 0
[ 1243.914174]     width         = 0
[ 1243.914424]     height        = 0
[ 1243.914678]     channel       = 0
[ 1243.914926]     size          = 0
[ 1243.915177]     line_stride   = 0
[ 1243.915426]     surf_stride   = 0
[ 1243.915679]     plane_stride  = 0
[ 1243.915926] ]
[ 1243.915945] dst_data            = [ dla_data_cube =>
[ 1243.916396]     type          = 0
[ 1243.916648]     address       = 2
[ 1243.916902]     offset        = 480000
[ 1243.917168]     width         = 38
[ 1243.917422]     height        = 38
[ 1243.917678]     channel       = 40
[ 1243.917937]     size          = 401408
[ 1243.918207]     line_stride   = 1792
[ 1243.918465]     surf_stride   = 100352
[ 1243.918738]     plane_stride  = 0
[ 1243.918979] ]
[ 1243.919000] *********************************************************
[ 1243.919549] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1243.919835] ---------------------------------------------------------
[ 1243.920233] src_precision    = 2
[ 1243.920483] dst_precision    = 2
[ 1243.920732] lut_index        = -1
[ 1243.920976] out_cvt          =
[ 1243.921221] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1243.921604] conv_mode        = 0
[ 1243.921845] batch_num        = 1
[ 1243.922097] batch_stride     = 0
[ 1243.922345] x1_op            = [ dla_sdp_op =>
[ 1243.922647]     enable         = 1
[ 1243.922899]     alu_type       = 2
[ 1243.923152]     type           = 2
[ 1243.923407]     mode           = 1
[ 1243.923662]     act            = 0
[ 1243.923923]     shift_value    = 0
[ 1243.924188]     truncate       = 0
[ 1243.924443]     precision      = 2
[ 1243.924701]     alu_operand    = 0
[ 1243.924959]     mul_operand    = 1
[ 1243.925216] cvt.alu_cvt          =
[ 1243.925482] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.925867] cvt.mul_cvt          =
[ 1243.926135] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.926514] ]
[ 1243.926675] x2_op            = [ dla_sdp_op =>
[ 1243.926988]     enable         = 1
[ 1243.927236]     alu_type       = 2
[ 1243.927484]     type           = 2
[ 1243.927737]     mode           = 2
[ 1243.927990]     act            = 1
[ 1243.928238]     shift_value    = 0
[ 1243.928491]     truncate       = 0
[ 1243.928746]     precision      = 2
[ 1243.928997]     alu_operand    = 0
[ 1243.929248]     mul_operand    = 1
[ 1243.929502] cvt.alu_cvt          =
[ 1243.929755] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.930130] cvt.mul_cvt          =
[ 1243.930380] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.930760] ]
[ 1243.930925] y_op             = [ dla_sdp_op =>
[ 1243.931230]     enable         = 0
[ 1243.931487]     alu_type       = 0
[ 1243.931732]     type           = 0
[ 1243.931988]     mode           = 0
[ 1243.932237]     act            = 0
[ 1243.932496]     shift_value    = 0
[ 1243.932748]     truncate       = 0
[ 1243.933007]     precision      = 0
[ 1243.933266]     alu_operand    = 0
[ 1243.933523]     mul_operand    = 0
[ 1243.933782] cvt.alu_cvt          =
[ 1243.934034] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.934397] cvt.mul_cvt          =
[ 1243.934640] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1243.934937] ]
[ 1243.935066] Exit: dla_read_config
[ 1243.935253] Exit: dla_prepare_operation status=0
[ 1243.935485] Enter: dla_program_operation
[ 1243.935698] Program SDP operation index 18 ROI 0 Group[0]
[ 1243.937126] 
[ 1243.937126] entered processor_sdp_program():
[ 1243.937485] sdp skip getting src_addr
[ 1243.937485] 
[ 1243.937813] sdp getting dst_addr:
[ 1243.938038] entered dla_get_dma_cube_address(index = 2, offset = 0x480000):
[ 1243.938369] entered dla_get_dma_address(index = 2):
[ 1243.938599] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1243.938855] entered dla_read_dma_address(index = 2):
[ 1243.939094] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1243.939382] *phys_addr = 0xc0800000 + 0x0
[ 1243.939585] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1243.939887] back to dla_get_dma_cube_address: dst_ptr += 0x480000
[ 1243.940161] sdp dst_addr = 0xc0c80000
[ 1243.940161] 
[ 1243.940421] sdp getting x1_addr:
[ 1243.940597] entered dla_get_dma_cube_address(index = 1, offset = 0xf000):
[ 1243.940947] entered dla_get_dma_address(index = 1):
[ 1243.941181] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1243.941440] entered dla_read_dma_address(index = 1):
[ 1243.941690] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1243.941982] *phys_addr = 0xc4000000 + 0x0
[ 1243.942192] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1243.942502] back to dla_get_dma_cube_address: dst_ptr += 0xf000
[ 1243.942767] sdp x1_addr = 0xc400f000
[ 1243.942767] 
[ 1243.943032] sdp getting x2_addr:
[ 1243.943213] entered dla_get_dma_cube_address(index = 2, offset = 0x380000):
[ 1243.943519] entered dla_get_dma_address(index = 2):
[ 1243.943741] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1243.944000] entered dla_read_dma_address(index = 2):
[ 1243.944238] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1243.944583] *phys_addr = 0xc0800000 + 0x0
[ 1243.944829] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1243.945193] back to dla_get_dma_cube_address: dst_ptr += 0x380000
[ 1243.945525] sdp x1_addr = 0xc0b80000
[ 1243.945525] 
[ 1243.945825] sdp skip getting y_addr
[ 1243.945825] 
[ 1243.956385] no desc get due to index==-1
[ 1243.956698] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1243.957387] no desc get due to index==-1
[ 1243.957716] no desc get due to index==-1
[ 1243.958005] no desc get due to index==-1
[ 1243.958299] Enter: dla_op_programmed
[ 1243.958589] Update dependency operation index 20 ROI 0 DEP_COUNT=2
[ 1243.958991] Exit: dla_op_programmed
[ 1243.959277] Exit: dla_program_operation status=0
[ 1243.959616] Enter: dla_enable_operation
[ 1243.959920] Enable SDP operation index 18 ROI 0
[ 1243.967625] Enter: dla_op_enabled
[ 1243.967911] Update dependency operation index 17 ROI 0 DEP_COUNT=2
[ 1243.968333] Exit: dla_op_enabled
[ 1243.968598] Exit: dla_enable_operation status=0
[ 1243.968926] Exit: dla_submit_operation
[ 1243.969220] Exit: dla_dequeue_operation
[ 1243.969529] Enter: dla_free_op_desc op desc index 14 ROI 0
[ 1243.969911] Exit: dla_free_op_desc
[ 1243.970180] Exit:dla_op_completion processor SDP group0 status=0
[ 1243.970567] Exit:dla_handle_events, ret:0
[ 1243.970873] Enter:dla_handle_events, processor:PDP
[ 1243.971202] Exit:dla_handle_events, ret:0
[ 1243.971496] Enter:dla_handle_events, processor:CDP
[ 1243.971835] Exit:dla_handle_events, ret:0
[ 1243.972142] Enter:dla_handle_events, processor:RUBIK
[ 1243.972479] Exit:dla_handle_events, ret:0
[ 1344.378592] Enter:dla_handle_events, processor:BDMA
[ 1344.379240] Exit:dla_handle_events, ret:0
[ 1344.379650] Enter:dla_handle_events, processor:Convolution
[ 1344.380187] Handle cdma weight done event, processor Convolution group 1
[ 1344.380804] Handle cdma data done event, processor Convolution group 1
[ 1344.381427] Handle op complete event, processor Convolution group 1
[ 1344.381967] Enter:dla_op_completion processor Convolution group1
[ 1344.382269] Completed Convolution operation index 15 ROI 0
[ 1344.382559] 16 HWLs done, totally 52 layers
[ 1344.382795] Enter: dla_dequeue_operation
[ 1344.383024] Dequeue op from Convolution processor, index=19 ROI=0
[ 1344.383329] Enter: dla_submit_operation
[ 1344.383548] Prepare Convolution operation index 19 ROI 0 dep_count 2
[ 1344.383856] Enter: dla_prepare_operation
[ 1344.384175] processor:Convolution group:1, rdma_group:0 available
[ 1344.384476] Enter: dla_read_config
[ 1344.384721] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1344.385241] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1344.385804] *********************************************************
[ 1344.386142] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1344.386395] ---------------------------------------------------------
[ 1344.386715] weight_data         = [ dla_data_cube =>
[ 1344.386999]     type          = 0
[ 1344.387201]     address       = 1
[ 1344.387400]     offset        = 10000
[ 1344.387617]     width         = 1
[ 1344.387821]     height        = 1
[ 1344.388020]     channel       = 40
[ 1344.388226]     size          = 16384
[ 1344.388442]     line_stride   = 0
[ 1344.388643]     surf_stride   = 0
[ 1344.388847]     plane_stride  = 0
[ 1344.389048] ]
[ 1344.389068] wmb_data            = [ dla_data_cube =>
[ 1344.389533]     type          = 0
[ 1344.389822]     address       = 0
[ 1344.390130]     offset        = 0
[ 1344.390370]     width         = 0
[ 1344.390579]     height        = 0
[ 1344.390784]     channel       = 0
[ 1344.390991]     size          = 0
[ 1344.391169]     line_stride   = 0
[ 1344.391346]     surf_stride   = 0
[ 1344.391527]     plane_stride  = 0
[ 1344.391700] ]
[ 1344.391718] wgs_data            = [ dla_data_cube =>
[ 1344.392042]     type          = 0
[ 1344.392216]     address       = 0
[ 1344.392394]     offset        = 0
[ 1344.392572]     width         = 0
[ 1344.392744]     height        = 0
[ 1344.392921]     channel       = 0
[ 1344.393092]     size          = 0
[ 1344.393265]     line_stride   = 0
[ 1344.393440]     surf_stride   = 0
[ 1344.393627]     plane_stride  = 0
[ 1344.393801] ]
[ 1344.393819] src_data            = [ dla_data_cube =>
[ 1344.394148]     type          = 0
[ 1344.394329]     address       = 2
[ 1344.394508]     offset        = 480000
[ 1344.394698]     width         = 38
[ 1344.394874]     height        = 38
[ 1344.395057]     channel       = 40
[ 1344.395241]     size          = 401408
[ 1344.395437]     line_stride   = 1792
[ 1344.395624]     surf_stride   = 100352
[ 1344.395813]     plane_stride  = 0
[ 1344.395983] ]
[ 1344.395999] dst_data            = [ dla_data_cube =>
[ 1344.396313]     type          = 2
[ 1344.396487]     address       = -1
[ 1344.396666]     offset        = 0
[ 1344.396845]     width         = 1c
[ 1344.397027]     height        = 1c
[ 1344.397208]     channel       = 80
[ 1344.397389]     size          = 200704
[ 1344.397589]     line_stride   = 896
[ 1344.397778]     surf_stride   = 25088
[ 1344.397970]     plane_stride  = 0
[ 1344.398139] ]
[ 1344.398159] offset_u            = 0
[ 1344.398424] in_line_uv_stride   = 0
[ 1344.398424] 
[ 1344.398682] *********************************************************
[ 1344.398973] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1344.399188] ---------------------------------------------------------
[ 1344.399468] conv_mode          = 0
[ 1344.399648] data_reuse         = 0
[ 1344.399836] weight_reuse       = 0
[ 1344.400020] skip_data_rls      = 0
[ 1344.400210] skip_weight_rls    = 0
[ 1344.400395] entry_per_slice    = 56
[ 1344.400581] data_format        = 36
[ 1344.400764] pixel_mapping      = 0
[ 1344.400941] fetch_grain        = 1
[ 1344.401126] batch              = 1
[ 1344.401306] weight_format      = 0
[ 1344.401490] data_bank          = 13
[ 1344.401685] weight_bank        = 1
[ 1344.401866] batch_stride       = 0
[ 1344.402051] post_extension     = 0
[ 1344.402235] pixel_override     = 1
[ 1344.402416] release            = 56
[ 1344.402598] input_width_csc    = 56
[ 1344.402785] input_height_csc   = 56
[ 1344.402971] input_channel_csc  = 64
[ 1344.403155] kernel_width_csc   = 1
[ 1344.403337] kernel_height_csc  = 1
[ 1344.403516] kernel_channel_csc = 64
[ 1344.403698] input_width_cmac   = 28
[ 1344.403887] input_height_cmac  = 28
[ 1344.404071] bytes_per_kernel   = 128
[ 1344.404255] mean_ry            = 0
[ 1344.404436] mean_gu            = 0
[ 1344.404615] mean_bv            = 0
[ 1344.404793] mean_ax            = 0
[ 1344.404971] mean_format        = 0
[ 1344.405152] conv_stride_x      = 2
[ 1344.405338] conv_stride_y      = 2
[ 1344.405524] pad_x_left         = 0
[ 1344.405702] pad_x_right        = 0
[ 1344.405881] pad_y_top          = 0
[ 1344.406065] pad_y_bottom       = 0
[ 1344.406248] dilation_x         = 1
[ 1344.406431] dilation_y         = 1
[ 1344.406610] pra_truncate       = 0
[ 1344.406796] in_precision       = 2
[ 1344.406977] out_precision      = 2
[ 1344.407156] pad_val            = 0
[ 1344.407329] in_cvt             =
[ 1344.407518] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1344.407791] out_cvt            =
[ 1344.407967] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1344.408226] 
[ 1344.408337] Exit: dla_read_config
[ 1344.408517] Exit: dla_prepare_operation status=0
[ 1344.408736] Enter: dla_program_operation
[ 1344.408940] Program Convolution operation index 19 ROI 0 Group[1]
[ 1344.409529] 
[ 1344.409529] entered processor_conv_program():
[ 1344.409816] conv getting weight_address:
[ 1344.410015] entered dla_get_dma_cube_address(index = 1, offset = 0x10000):
[ 1344.410311] entered dla_get_dma_address(index = 1):
[ 1344.410543] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1344.410797] entered dla_read_dma_address(index = 1):
[ 1344.411027] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1344.411335] *phys_addr = 0xc4000000 + 0x0
[ 1344.411540] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1344.411840] back to dla_get_dma_cube_address: dst_ptr += 0x10000
[ 1344.412113] conv weight_addr = 0xc4010000
[ 1344.412113] 
[ 1344.412385] conv getting input_address:
[ 1344.412570] entered dla_read_input_address():
[ 1344.412787] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 4718592)
[ 1344.413140] entered dla_get_dma_cube_address(index = 2, offset = 0x480000):
[ 1344.413439] entered dla_get_dma_address(index = 2):
[ 1344.413673] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1344.413921] entered dla_read_dma_address(index = 2):
[ 1344.414158] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1344.414454] *phys_addr = 0xc0800000 + 0x0
[ 1344.414660] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1344.414964] back to dla_get_dma_cube_address: dst_ptr += 0x480000
[ 1344.415229] conv input_addr = 0xc0c80000
[ 1344.415229] 
[ 1344.418731] no desc get due to index==-1
[ 1344.418952] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1344.419390] no desc get due to index==-1
[ 1344.419588] no desc get due to index==-1
[ 1344.419785] no desc get due to index==-1
[ 1344.419981] no desc get due to index==-1
[ 1344.420180] Enter: dla_op_programmed
[ 1344.420369] Update dependency operation index 21 ROI 0 DEP_COUNT=3
[ 1344.420661] Update dependency operation index 20 ROI 0 DEP_COUNT=1
[ 1344.420946] enable SDP in dla_update_dependency as depdency are resolved
[ 1344.421237] Enter: dla_enable_operation
[ 1344.421433] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1344.421909] Exit: dla_enable_operation status=0
[ 1344.422267] Exit: dla_op_programmed
[ 1344.422571] Exit: dla_program_operation status=0
[ 1344.422941] Exit: dla_submit_operation
[ 1344.423253] Exit: dla_dequeue_operation
[ 1344.423585] Exit:dla_op_completion processor Convolution group1 status=0
[ 1344.424074] Exit:dla_handle_events, ret:0
[ 1344.424481] Enter:dla_handle_events, processor:SDP
[ 1344.424867] Handle op complete event, processor SDP group 1
[ 1344.425294] Enter:dla_op_completion processor SDP group1
[ 1344.425714] Completed SDP operation index 16 ROI 0
[ 1344.426096] Update dependency operation index 17 ROI 0 DEP_COUNT=1
[ 1344.426543] enable Convolution in dla_update_dependency as depdency are resolved
[ 1344.427076] Enter: dla_enable_operation
[ 1344.427402] Enable Convolution operation index 17 ROI 0
[ 1344.428391] Enter: dla_op_enabled
[ 1344.428703] Exit: dla_op_enabled
[ 1344.428997] Exit: dla_enable_operation status=0
[ 1344.429366] 17 HWLs done, totally 52 layers
[ 1344.429738] Enter: dla_free_op_desc op desc index 15 ROI 0
[ 1344.430070] Exit: dla_free_op_desc
[ 1344.430264] Enter: dla_dequeue_operation
[ 1344.430464] Dequeue op from SDP processor, index=20 ROI=0
[ 1344.430719] Enter: dla_submit_operation
[ 1344.430928] Prepare SDP operation index 20 ROI 0 dep_count 0
[ 1344.431185] Enter: dla_prepare_operation
[ 1344.458776] processor:SDP group:1, rdma_group:1 available
[ 1344.459295] Enter: dla_read_config
[ 1344.459692] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1344.460607] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1344.461643] *********************************************************
[ 1344.462218] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1344.462658] ---------------------------------------------------------
[ 1344.463210] src_data            = [ dla_data_cube =>
[ 1344.463681]     type          = 2
[ 1344.464040]     address       = -1
[ 1344.464408]     offset        = 0
[ 1344.464767]     width         = 1c
[ 1344.465129]     height        = 1c
[ 1344.465491]     channel       = 80
[ 1344.465873]     size          = 200704
[ 1344.466271]     line_stride   = 896
[ 1344.466638]     surf_stride   = 25088
[ 1344.467013]     plane_stride  = 0
[ 1344.467362] ]
[ 1344.467400] x1_data             = [ dla_data_cube =>
[ 1344.468048]     type          = 0
[ 1344.468403]     address       = 1
[ 1344.468761]     offset        = 14000
[ 1344.469133]     width         = 1
[ 1344.469492]     height        = 1
[ 1344.469862]     channel       = 80
[ 1344.470035]     size          = 256
[ 1344.470214]     line_stride   = 32
[ 1344.470392]     surf_stride   = 32
[ 1344.470567]     plane_stride  = 0
[ 1344.470751] ]
[ 1344.470769] x2_data             = [ dla_data_cube =>
[ 1344.471096]     type          = 0
[ 1344.471274]     address       = 0
[ 1344.471447]     offset        = 0
[ 1344.471619]     width         = 0
[ 1344.471798]     height        = 0
[ 1344.471978]     channel       = 0
[ 1344.472156]     size          = 0
[ 1344.472337]     line_stride   = 0
[ 1344.472516]     surf_stride   = 0
[ 1344.472695]     plane_stride  = 0
[ 1344.472869] ]
[ 1344.472886] y_data              = [ dla_data_cube =>
[ 1344.473212]     type          = 0
[ 1344.473385]     address       = 0
[ 1344.473578]     offset        = 0
[ 1344.473757]     width         = 0
[ 1344.473939]     height        = 0
[ 1344.474120]     channel       = 0
[ 1344.474357]     size          = 0
[ 1344.474535]     line_stride   = 0
[ 1344.474716]     surf_stride   = 0
[ 1344.474891]     plane_stride  = 0
[ 1344.475062] ]
[ 1344.475079] dst_data            = [ dla_data_cube =>
[ 1344.475444]     type          = 0
[ 1344.475634]     address       = 2
[ 1344.475820]     offset        = 500000
[ 1344.476027]     width         = 1c
[ 1344.476218]     height        = 1c
[ 1344.476406]     channel       = 80
[ 1344.476597]     size          = 200704
[ 1344.476803]     line_stride   = 896
[ 1344.476997]     surf_stride   = 25088
[ 1344.477193]     plane_stride  = 0
[ 1344.477377] ]
[ 1344.477396] *********************************************************
[ 1344.477799] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1344.478027] ---------------------------------------------------------
[ 1344.478322] src_precision    = 2
[ 1344.478507] dst_precision    = 2
[ 1344.478690] lut_index        = -1
[ 1344.478869] out_cvt          =
[ 1344.479050] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1344.479324] conv_mode        = 0
[ 1344.479508] batch_num        = 1
[ 1344.479692] batch_stride     = 0
[ 1344.479875] x1_op            = [ dla_sdp_op =>
[ 1344.480101]     enable         = 1
[ 1344.480291]     alu_type       = 2
[ 1344.480478]     type           = 2
[ 1344.480666]     mode           = 1
[ 1344.480852]     act            = 0
[ 1344.481040]     shift_value    = 0
[ 1344.481240]     truncate       = 0
[ 1344.481429]     precision      = 2
[ 1344.481635]     alu_operand    = 0
[ 1344.481828]     mul_operand    = 1
[ 1344.482020] cvt.alu_cvt          =
[ 1344.482216] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.482489] cvt.mul_cvt          =
[ 1344.482695] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.482972] ]
[ 1344.483096] x2_op            = [ dla_sdp_op =>
[ 1344.483326]     enable         = 0
[ 1344.483521]     alu_type       = 0
[ 1344.483711]     type           = 0
[ 1344.483899]     mode           = 0
[ 1344.484084]     act            = 0
[ 1344.484269]     shift_value    = 0
[ 1344.484456]     truncate       = 0
[ 1344.484646]     precision      = 0
[ 1344.484835]     alu_operand    = 0
[ 1344.485025]     mul_operand    = 0
[ 1344.485207] cvt.alu_cvt          =
[ 1344.485395] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.485674] cvt.mul_cvt          =
[ 1344.485862] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.486139] ]
[ 1344.486267] y_op             = [ dla_sdp_op =>
[ 1344.486499]     enable         = 0
[ 1344.486697]     alu_type       = 0
[ 1344.486889]     type           = 0
[ 1344.487080]     mode           = 0
[ 1344.487272]     act            = 0
[ 1344.487463]     shift_value    = 0
[ 1344.487652]     truncate       = 0
[ 1344.487843]     precision      = 0
[ 1344.488034]     alu_operand    = 0
[ 1344.488226]     mul_operand    = 0
[ 1344.488412] cvt.alu_cvt          =
[ 1344.488599] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.488869] cvt.mul_cvt          =
[ 1344.489058] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1344.489339] ]
[ 1344.489470] Exit: dla_read_config
[ 1344.489670] Exit: dla_prepare_operation status=0
[ 1344.489908] Enter: dla_program_operation
[ 1344.490125] Program SDP operation index 20 ROI 0 Group[1]
[ 1344.491521] 
[ 1344.491521] entered processor_sdp_program():
[ 1344.491890] sdp skip getting src_addr
[ 1344.491890] 
[ 1344.492267] sdp getting dst_addr:
[ 1344.492530] entered dla_get_dma_cube_address(index = 2, offset = 0x500000):
[ 1344.492935] entered dla_get_dma_address(index = 2):
[ 1344.493201] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1344.493487] entered dla_read_dma_address(index = 2):
[ 1344.493763] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1344.494098] *phys_addr = 0xc0800000 + 0x0
[ 1344.494348] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1344.494722] back to dla_get_dma_cube_address: dst_ptr += 0x500000
[ 1344.495037] sdp dst_addr = 0xc0d00000
[ 1344.495037] 
[ 1344.495336] sdp getting x1_addr:
[ 1344.495541] entered dla_get_dma_cube_address(index = 1, offset = 0x14000):
[ 1344.495888] entered dla_get_dma_address(index = 1):
[ 1344.496143] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1344.496438] entered dla_read_dma_address(index = 1):
[ 1344.496716] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1344.497038] *phys_addr = 0xc4000000 + 0x0
[ 1344.497275] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1344.497650] back to dla_get_dma_cube_address: dst_ptr += 0x14000
[ 1344.497957] sdp x1_addr = 0xc4014000
[ 1344.497957] 
[ 1344.498241] sdp skip getting x2_addr
[ 1344.498241] 
[ 1344.498535] sdp skip getting y_addr
[ 1344.498535] 
[ 1344.507185] no desc get due to index==-1
[ 1344.507540] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1344.508122] no desc get due to index==-1
[ 1344.508349] no desc get due to index==-1
[ 1344.508585] no desc get due to index==-1
[ 1344.508810] Enter: dla_op_programmed
[ 1344.509038] Update dependency operation index 22 ROI 0 DEP_COUNT=2
[ 1344.509359] Exit: dla_op_programmed
[ 1344.509587] Exit: dla_program_operation status=0
[ 1344.509902] Enter: dla_enable_operation
[ 1344.510276] Enable SDP operation index 20 ROI 0
[ 1344.511720] Enter: dla_op_enabled
[ 1344.512079] Update dependency operation index 19 ROI 0 DEP_COUNT=2
[ 1344.512585] Exit: dla_op_enabled
[ 1344.512915] Exit: dla_enable_operation status=0
[ 1344.513326] Exit: dla_submit_operation
[ 1344.513687] Exit: dla_dequeue_operation
[ 1344.514070] Enter: dla_free_op_desc op desc index 16 ROI 0
[ 1344.514606] Exit: dla_free_op_desc
[ 1344.514964] Exit:dla_op_completion processor SDP group1 status=0
[ 1344.515464] Exit:dla_handle_events, ret:0
[ 1344.515843] Enter:dla_handle_events, processor:PDP
[ 1344.516262] Exit:dla_handle_events, ret:0
[ 1344.516635] Enter:dla_handle_events, processor:CDP
[ 1344.517062] Exit:dla_handle_events, ret:0
[ 1344.517431] Enter:dla_handle_events, processor:RUBIK
[ 1344.517850] Exit:dla_handle_events, ret:0
[ 1431.948139] Enter:dla_handle_events, processor:BDMA
[ 1431.948714] Exit:dla_handle_events, ret:0
[ 1431.949160] Enter:dla_handle_events, processor:Convolution
[ 1431.949669] Handle cdma weight done event, processor Convolution group 0
[ 1431.950284] Handle cdma data done event, processor Convolution group 0
[ 1431.950873] Handle op complete event, processor Convolution group 0
[ 1431.951440] Enter:dla_op_completion processor Convolution group0
[ 1431.951991] Completed Convolution operation index 17 ROI 0
[ 1431.952515] 18 HWLs done, totally 52 layers
[ 1431.952944] Enter: dla_dequeue_operation
[ 1431.953358] Dequeue op from Convolution processor, index=21 ROI=0
[ 1431.953934] Enter: dla_submit_operation
[ 1431.954348] Prepare Convolution operation index 21 ROI 0 dep_count 2
[ 1431.954621] Enter: dla_prepare_operation
[ 1431.954935] processor:Convolution group:0, rdma_group:0 available
[ 1431.955195] Enter: dla_read_config
[ 1431.955415] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1431.955866] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1431.956352] *********************************************************
[ 1431.956627] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1431.956840] ---------------------------------------------------------
[ 1431.957100] weight_data         = [ dla_data_cube =>
[ 1431.957324]     type          = 0
[ 1431.957501]     address       = 1
[ 1431.957691]     offset        = c0000
[ 1431.957894]     width         = 3
[ 1431.958068]     height        = 3
[ 1431.958238]     channel       = 40
[ 1431.958415]     size          = 147456
[ 1431.958600]     line_stride   = 0
[ 1431.958774]     surf_stride   = 0
[ 1431.958947]     plane_stride  = 0
[ 1431.959117] ]
[ 1431.959139] wmb_data            = [ dla_data_cube =>
[ 1431.959458]     type          = 0
[ 1431.959632]     address       = 0
[ 1431.959805]     offset        = 0
[ 1431.959976]     width         = 0
[ 1431.960146]     height        = 0
[ 1431.960317]     channel       = 0
[ 1431.960489]     size          = 0
[ 1431.960662]     line_stride   = 0
[ 1431.960835]     surf_stride   = 0
[ 1431.961010]     plane_stride  = 0
[ 1431.961179] ]
[ 1431.961197] wgs_data            = [ dla_data_cube =>
[ 1431.961520]     type          = 0
[ 1431.961697]     address       = 0
[ 1431.961878]     offset        = 0
[ 1431.962053]     width         = 0
[ 1431.962224]     height        = 0
[ 1431.962397]     channel       = 0
[ 1431.962570]     size          = 0
[ 1431.962742]     line_stride   = 0
[ 1431.962913]     surf_stride   = 0
[ 1431.963086]     plane_stride  = 0
[ 1431.963255] ]
[ 1431.963272] src_data            = [ dla_data_cube =>
[ 1431.963591]     type          = 0
[ 1431.963765]     address       = 2
[ 1431.963939]     offset        = 480000
[ 1431.964126]     width         = 38
[ 1431.964300]     height        = 38
[ 1431.964475]     channel       = 40
[ 1431.964652]     size          = 401408
[ 1431.964841]     line_stride   = 1792
[ 1431.965026]     surf_stride   = 100352
[ 1431.965215]     plane_stride  = 0
[ 1431.965383] ]
[ 1431.965400] dst_data            = [ dla_data_cube =>
[ 1431.965723]     type          = 2
[ 1431.965901]     address       = -1
[ 1431.966078]     offset        = 0
[ 1431.966251]     width         = 1c
[ 1431.966427]     height        = 1c
[ 1431.966604]     channel       = 80
[ 1431.966783]     size          = 200704
[ 1431.966973]     line_stride   = 896
[ 1431.967155]     surf_stride   = 25088
[ 1431.967341]     plane_stride  = 0
[ 1431.967510] ]
[ 1431.967530] offset_u            = 0
[ 1431.967792] in_line_uv_stride   = 0
[ 1431.967792] 
[ 1431.968044] *********************************************************
[ 1431.968312] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1431.968516] ---------------------------------------------------------
[ 1431.968787] conv_mode          = 0
[ 1431.968963] data_reuse         = 0
[ 1431.969143] weight_reuse       = 0
[ 1431.969320] skip_data_rls      = 0
[ 1431.969501] skip_weight_rls    = 0
[ 1431.969680] entry_per_slice    = 56
[ 1431.969862] data_format        = 36
[ 1431.970044] pixel_mapping      = 0
[ 1431.970224] fetch_grain        = 1
[ 1431.970402] batch              = 1
[ 1431.970580] weight_format      = 0
[ 1431.970757] data_bank          = 13
[ 1431.970935] weight_bank        = 2
[ 1431.971113] batch_stride       = 0
[ 1431.971290] post_extension     = 0
[ 1431.971469] pixel_override     = 1
[ 1431.971646] release            = 56
[ 1431.971826] input_width_csc    = 56
[ 1431.972008] input_height_csc   = 56
[ 1431.972188] input_channel_csc  = 64
[ 1431.972368] kernel_width_csc   = 3
[ 1431.972546] kernel_height_csc  = 3
[ 1431.972725] kernel_channel_csc = 64
[ 1431.972905] input_width_cmac   = 28
[ 1431.973088] input_height_cmac  = 28
[ 1431.973268] bytes_per_kernel   = 1152
[ 1431.973455] mean_ry            = 0
[ 1431.973640] mean_gu            = 0
[ 1431.973822] mean_bv            = 0
[ 1431.974002] mean_ax            = 0
[ 1431.974184] mean_format        = 0
[ 1431.974384] conv_stride_x      = 2
[ 1431.974565] conv_stride_y      = 2
[ 1431.974744] pad_x_left         = 1
[ 1431.974921] pad_x_right        = 1
[ 1431.975097] pad_y_top          = 1
[ 1431.975273] pad_y_bottom       = 1
[ 1431.975451] dilation_x         = 1
[ 1431.975628] dilation_y         = 1
[ 1431.975803] pra_truncate       = 0
[ 1431.975979] in_precision       = 2
[ 1431.976157] out_precision      = 2
[ 1431.976333] pad_val            = 0
[ 1431.976507] in_cvt             =
[ 1431.976688] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1431.976943] out_cvt            =
[ 1431.977122] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1431.977376] 
[ 1431.977493] Exit: dla_read_config
[ 1431.977683] Exit: dla_prepare_operation status=0
[ 1431.977902] Enter: dla_program_operation
[ 1431.978105] Program Convolution operation index 21 ROI 0 Group[0]
[ 1431.978663] 
[ 1431.978663] entered processor_conv_program():
[ 1431.978953] conv getting weight_address:
[ 1431.979157] entered dla_get_dma_cube_address(index = 1, offset = 0xc0000):
[ 1431.979449] entered dla_get_dma_address(index = 1):
[ 1431.979670] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1431.979920] entered dla_read_dma_address(index = 1):
[ 1431.980148] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1431.980438] *phys_addr = 0xc4000000 + 0x0
[ 1431.980641] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1431.980943] back to dla_get_dma_cube_address: dst_ptr += 0xc0000
[ 1431.981206] conv weight_addr = 0xc40c0000
[ 1431.981206] 
[ 1431.981472] conv getting input_address:
[ 1431.981666] entered dla_read_input_address():
[ 1431.981877] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 4718592)
[ 1431.982220] entered dla_get_dma_cube_address(index = 2, offset = 0x480000):
[ 1431.982513] entered dla_get_dma_address(index = 2):
[ 1431.982735] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1431.982976] entered dla_read_dma_address(index = 2):
[ 1431.983205] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1431.983488] *phys_addr = 0xc0800000 + 0x0
[ 1431.983693] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1431.983992] back to dla_get_dma_cube_address: dst_ptr += 0x480000
[ 1431.984259] conv input_addr = 0xc0c80000
[ 1431.984259] 
[ 1431.987771] no desc get due to index==-1
[ 1431.987991] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1431.988418] no desc get due to index==-1
[ 1431.988616] no desc get due to index==-1
[ 1431.988811] no desc get due to index==-1
[ 1431.989002] no desc get due to index==-1
[ 1431.989198] Enter: dla_op_programmed
[ 1431.989389] Update dependency operation index 23 ROI 0 DEP_COUNT=3
[ 1431.989668] Update dependency operation index 22 ROI 0 DEP_COUNT=1
[ 1431.989943] enable SDP in dla_update_dependency as depdency are resolved
[ 1431.990229] Enter: dla_enable_operation
[ 1431.990420] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1431.990792] Exit: dla_enable_operation status=0
[ 1431.991019] Exit: dla_op_programmed
[ 1431.991217] Exit: dla_program_operation status=0
[ 1431.991434] Exit: dla_submit_operation
[ 1431.991624] Exit: dla_dequeue_operation
[ 1431.991825] Exit:dla_op_completion processor Convolution group0 status=0
[ 1431.992116] Exit:dla_handle_events, ret:0
[ 1431.992315] Enter:dla_handle_events, processor:SDP
[ 1431.992542] Handle op complete event, processor SDP group 0
[ 1431.992791] Enter:dla_op_completion processor SDP group0
[ 1431.993034] Completed SDP operation index 18 ROI 0
[ 1431.993267] Update dependency operation index 19 ROI 0 DEP_COUNT=1
[ 1431.993541] enable Convolution in dla_update_dependency as depdency are resolved
[ 1431.993863] Enter: dla_enable_operation
[ 1431.994062] Enable Convolution operation index 19 ROI 0
[ 1431.994868] Enter: dla_op_enabled
[ 1431.995052] Exit: dla_op_enabled
[ 1431.995227] Exit: dla_enable_operation status=0
[ 1431.995448] 19 HWLs done, totally 52 layers
[ 1431.995660] Enter: dla_free_op_desc op desc index 17 ROI 0
[ 1431.995931] Exit: dla_free_op_desc
[ 1431.996115] Enter: dla_dequeue_operation
[ 1431.996316] Dequeue op from SDP processor, index=22 ROI=0
[ 1431.996559] Enter: dla_submit_operation
[ 1431.996759] Prepare SDP operation index 22 ROI 0 dep_count 0
[ 1431.997013] Enter: dla_prepare_operation
[ 1432.012661] processor:SDP group:0, rdma_group:0 available
[ 1432.013196] Enter: dla_read_config
[ 1432.013606] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1432.014519] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1432.015523] *********************************************************
[ 1432.016084] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1432.016523] ---------------------------------------------------------
[ 1432.017073] src_data            = [ dla_data_cube =>
[ 1432.017537]     type          = 2
[ 1432.017893]     address       = -1
[ 1432.018251]     offset        = 0
[ 1432.018601]     width         = 1c
[ 1432.018958]     height        = 1c
[ 1432.019316]     channel       = 80
[ 1432.019680]     size          = 200704
[ 1432.020066]     line_stride   = 896
[ 1432.020438]     surf_stride   = 25088
[ 1432.020811]     plane_stride  = 0
[ 1432.021151] ]
[ 1432.021189] x1_data             = [ dla_data_cube =>
[ 1432.021838]     type          = 0
[ 1432.022193]     address       = 1
[ 1432.022546]     offset        = 15000
[ 1432.022922]     width         = 1
[ 1432.023273]     height        = 1
[ 1432.023625]     channel       = 80
[ 1432.023985]     size          = 256
[ 1432.024380]     line_stride   = 32
[ 1432.024760]     surf_stride   = 32
[ 1432.025119]     plane_stride  = 0
[ 1432.025462] ]
[ 1432.025511] x2_data             = [ dla_data_cube =>
[ 1432.026160]     type          = 0
[ 1432.026431]     address       = 0
[ 1432.026605]     offset        = 0
[ 1432.026776]     width         = 0
[ 1432.026946]     height        = 0
[ 1432.027118]     channel       = 0
[ 1432.027291]     size          = 0
[ 1432.027463]     line_stride   = 0
[ 1432.027634]     surf_stride   = 0
[ 1432.027806]     plane_stride  = 0
[ 1432.027970] ]
[ 1432.027987] y_data              = [ dla_data_cube =>
[ 1432.028300]     type          = 0
[ 1432.028474]     address       = 0
[ 1432.028648]     offset        = 0
[ 1432.028820]     width         = 0
[ 1432.028992]     height        = 0
[ 1432.029165]     channel       = 0
[ 1432.029336]     size          = 0
[ 1432.029514]     line_stride   = 0
[ 1432.029692]     surf_stride   = 0
[ 1432.029866]     plane_stride  = 0
[ 1432.030036] ]
[ 1432.030054] dst_data            = [ dla_data_cube =>
[ 1432.030369]     type          = 0
[ 1432.030546]     address       = 2
[ 1432.030719]     offset        = 540000
[ 1432.030907]     width         = 1c
[ 1432.031085]     height        = 1c
[ 1432.031262]     channel       = 80
[ 1432.031439]     size          = 200704
[ 1432.031630]     line_stride   = 896
[ 1432.031812]     surf_stride   = 25088
[ 1432.031997]     plane_stride  = 0
[ 1432.032168] ]
[ 1432.032187] *********************************************************
[ 1432.032554] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1432.032757] ---------------------------------------------------------
[ 1432.033034] src_precision    = 2
[ 1432.033208] dst_precision    = 2
[ 1432.033382] lut_index        = -1
[ 1432.033557] out_cvt          =
[ 1432.033732] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1432.033993] conv_mode        = 0
[ 1432.034167] batch_num        = 1
[ 1432.034339] batch_stride     = 0
[ 1432.034508] x1_op            = [ dla_sdp_op =>
[ 1432.034724]     enable         = 1
[ 1432.034904]     alu_type       = 2
[ 1432.035085]     type           = 2
[ 1432.035265]     mode           = 1
[ 1432.035445]     act            = 1
[ 1432.035625]     shift_value    = 0
[ 1432.035801]     truncate       = 0
[ 1432.035981]     precision      = 2
[ 1432.036158]     alu_operand    = 0
[ 1432.036339]     mul_operand    = 1
[ 1432.036513] cvt.alu_cvt          =
[ 1432.036700] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.036959] cvt.mul_cvt          =
[ 1432.037146] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.037403] ]
[ 1432.037529] x2_op            = [ dla_sdp_op =>
[ 1432.037749]     enable         = 0
[ 1432.037929]     alu_type       = 0
[ 1432.038105]     type           = 0
[ 1432.038284]     mode           = 0
[ 1432.038459]     act            = 0
[ 1432.038637]     shift_value    = 0
[ 1432.038814]     truncate       = 0
[ 1432.038990]     precision      = 0
[ 1432.039169]     alu_operand    = 0
[ 1432.039346]     mul_operand    = 0
[ 1432.039519] cvt.alu_cvt          =
[ 1432.039696] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.039950] cvt.mul_cvt          =
[ 1432.040127] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.040382] ]
[ 1432.040499] y_op             = [ dla_sdp_op =>
[ 1432.040712]     enable         = 0
[ 1432.040891]     alu_type       = 0
[ 1432.041097]     type           = 0
[ 1432.041275]     mode           = 0
[ 1432.041454]     act            = 0
[ 1432.041637]     shift_value    = 0
[ 1432.041815]     truncate       = 0
[ 1432.041992]     precision      = 0
[ 1432.042170]     alu_operand    = 0
[ 1432.042347]     mul_operand    = 0
[ 1432.042519] cvt.alu_cvt          =
[ 1432.042697] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.042965] cvt.mul_cvt          =
[ 1432.043142] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1432.043397] ]
[ 1432.043518] Exit: dla_read_config
[ 1432.043698] Exit: dla_prepare_operation status=0
[ 1432.043918] Enter: dla_program_operation
[ 1432.044120] Program SDP operation index 22 ROI 0 Group[0]
[ 1432.046342] 
[ 1432.046342] entered processor_sdp_program():
[ 1432.046705] sdp skip getting src_addr
[ 1432.046705] 
[ 1432.047034] sdp getting dst_addr:
[ 1432.047257] entered dla_get_dma_cube_address(index = 2, offset = 0x540000):
[ 1432.047574] entered dla_get_dma_address(index = 2):
[ 1432.047799] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1432.048049] entered dla_read_dma_address(index = 2):
[ 1432.048279] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1432.048559] *phys_addr = 0xc0800000 + 0x0
[ 1432.048759] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1432.049056] back to dla_get_dma_cube_address: dst_ptr += 0x540000
[ 1432.049323] sdp dst_addr = 0xc0d40000
[ 1432.049323] 
[ 1432.049584] sdp getting x1_addr:
[ 1432.049759] entered dla_get_dma_cube_address(index = 1, offset = 0x15000):
[ 1432.050050] entered dla_get_dma_address(index = 1):
[ 1432.050273] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1432.050520] entered dla_read_dma_address(index = 1):
[ 1432.050750] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1432.051031] *phys_addr = 0xc4000000 + 0x0
[ 1432.051233] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1432.051531] back to dla_get_dma_cube_address: dst_ptr += 0x15000
[ 1432.051795] sdp x1_addr = 0xc4015000
[ 1432.051795] 
[ 1432.052045] sdp skip getting x2_addr
[ 1432.052045] 
[ 1432.052292] sdp skip getting y_addr
[ 1432.052292] 
[ 1432.062890] no desc get due to index==-1
[ 1432.063339] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1432.064187] no desc get due to index==-1
[ 1432.064580] no desc get due to index==-1
[ 1432.064968] no desc get due to index==-1
[ 1432.065362] Enter: dla_op_programmed
[ 1432.065769] Update dependency operation index 24 ROI 0 DEP_COUNT=2
[ 1432.066312] Exit: dla_op_programmed
[ 1432.066679] Exit: dla_program_operation status=0
[ 1432.067113] Enter: dla_enable_operation
[ 1432.067514] Enable SDP operation index 22 ROI 0
[ 1432.068974] Enter: dla_op_enabled
[ 1432.069354] Update dependency operation index 21 ROI 0 DEP_COUNT=2
[ 1432.069906] Exit: dla_op_enabled
[ 1432.070257] Exit: dla_enable_operation status=0
[ 1432.070481] Exit: dla_submit_operation
[ 1432.070670] Exit: dla_dequeue_operation
[ 1432.070867] Enter: dla_free_op_desc op desc index 18 ROI 0
[ 1432.071131] Exit: dla_free_op_desc
[ 1432.071318] Exit:dla_op_completion processor SDP group0 status=0
[ 1432.071579] Exit:dla_handle_events, ret:0
[ 1432.071773] Enter:dla_handle_events, processor:PDP
[ 1432.071995] Exit:dla_handle_events, ret:0
[ 1432.072191] Enter:dla_handle_events, processor:CDP
[ 1432.072412] Exit:dla_handle_events, ret:0
[ 1432.072611] Enter:dla_handle_events, processor:RUBIK
[ 1432.072839] Exit:dla_handle_events, ret:0
[ 1439.838262] Enter:dla_handle_events, processor:BDMA
[ 1439.838760] Exit:dla_handle_events, ret:0
[ 1439.839070] Enter:dla_handle_events, processor:Convolution
[ 1439.839432] Handle cdma weight done event, processor Convolution group 1
[ 1439.839788] Handle cdma data done event, processor Convolution group 1
[ 1439.840132] Handle op complete event, processor Convolution group 1
[ 1439.840466] Enter:dla_op_completion processor Convolution group1
[ 1439.840791] Completed Convolution operation index 19 ROI 0
[ 1439.841144] 20 HWLs done, totally 52 layers
[ 1439.841402] Enter: dla_dequeue_operation
[ 1439.841659] Dequeue op from Convolution processor, index=23 ROI=0
[ 1439.842014] Enter: dla_submit_operation
[ 1439.842259] Prepare Convolution operation index 23 ROI 0 dep_count 2
[ 1439.842593] Enter: dla_prepare_operation
[ 1439.842911] processor:Convolution group:1, rdma_group:0 available
[ 1439.843234] Enter: dla_read_config
[ 1439.843572] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1439.844318] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1439.845139] *********************************************************
[ 1439.845604] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1439.845965] ---------------------------------------------------------
[ 1439.846398] weight_data         = [ dla_data_cube =>
[ 1439.846770]     type          = 0
[ 1439.847053]     address       = 1
[ 1439.847340]     offset        = 100000
[ 1439.847651]     width         = 3
[ 1439.847939]     height        = 3
[ 1439.848224]     channel       = 80
[ 1439.848516]     size          = 294912
[ 1439.848823]     line_stride   = 0
[ 1439.849109]     surf_stride   = 0
[ 1439.849391]     plane_stride  = 0
[ 1439.849684] ]
[ 1439.849717] wmb_data            = [ dla_data_cube =>
[ 1439.850247]     type          = 0
[ 1439.850487]     address       = 0
[ 1439.850659]     offset        = 0
[ 1439.850829]     width         = 0
[ 1439.851001]     height        = 0
[ 1439.851171]     channel       = 0
[ 1439.851341]     size          = 0
[ 1439.851514]     line_stride   = 0
[ 1439.851687]     surf_stride   = 0
[ 1439.851861]     plane_stride  = 0
[ 1439.852032] ]
[ 1439.852049] wgs_data            = [ dla_data_cube =>
[ 1439.852363]     type          = 0
[ 1439.852537]     address       = 0
[ 1439.852710]     offset        = 0
[ 1439.852880]     width         = 0
[ 1439.853053]     height        = 0
[ 1439.853227]     channel       = 0
[ 1439.853400]     size          = 0
[ 1439.853578]     line_stride   = 0
[ 1439.853754]     surf_stride   = 0
[ 1439.853931]     plane_stride  = 0
[ 1439.854102] ]
[ 1439.854120] src_data            = [ dla_data_cube =>
[ 1439.854439]     type          = 0
[ 1439.854615]     address       = 2
[ 1439.854796]     offset        = 540000
[ 1439.854984]     width         = 1c
[ 1439.855159]     height        = 1c
[ 1439.855333]     channel       = 80
[ 1439.855511]     size          = 200704
[ 1439.855727]     line_stride   = 896
[ 1439.855910]     surf_stride   = 25088
[ 1439.856096]     plane_stride  = 0
[ 1439.856265] ]
[ 1439.856282] dst_data            = [ dla_data_cube =>
[ 1439.856592]     type          = 2
[ 1439.856767]     address       = -1
[ 1439.856945]     offset        = 0
[ 1439.857121]     width         = 1c
[ 1439.857299]     height        = 1c
[ 1439.857480]     channel       = 80
[ 1439.857681]     size          = 200704
[ 1439.857890]     line_stride   = 896
[ 1439.858072]     surf_stride   = 25088
[ 1439.858259]     plane_stride  = 0
[ 1439.858428] ]
[ 1439.858448] offset_u            = 0
[ 1439.858711] in_line_uv_stride   = 0
[ 1439.858711] 
[ 1439.858960] *********************************************************
[ 1439.859230] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1439.859434] ---------------------------------------------------------
[ 1439.859706] conv_mode          = 0
[ 1439.859882] data_reuse         = 0
[ 1439.860058] weight_reuse       = 0
[ 1439.860236] skip_data_rls      = 0
[ 1439.860414] skip_weight_rls    = 0
[ 1439.860596] entry_per_slice    = 56
[ 1439.860777] data_format        = 36
[ 1439.860956] pixel_mapping      = 0
[ 1439.861136] fetch_grain        = 1
[ 1439.861315] batch              = 1
[ 1439.861494] weight_format      = 0
[ 1439.861677] data_bank          = 7
[ 1439.861854] weight_bank        = 9
[ 1439.862032] batch_stride       = 0
[ 1439.862211] post_extension     = 0
[ 1439.862386] pixel_override     = 1
[ 1439.862567] release            = 28
[ 1439.862749] input_width_csc    = 28
[ 1439.862928] input_height_csc   = 28
[ 1439.863109] input_channel_csc  = 128
[ 1439.863291] kernel_width_csc   = 3
[ 1439.863469] kernel_height_csc  = 3
[ 1439.863646] kernel_channel_csc = 128
[ 1439.863830] input_width_cmac   = 28
[ 1439.864011] input_height_cmac  = 28
[ 1439.864191] bytes_per_kernel   = 2304
[ 1439.864380] mean_ry            = 0
[ 1439.864557] mean_gu            = 0
[ 1439.864732] mean_bv            = 0
[ 1439.864910] mean_ax            = 0
[ 1439.865086] mean_format        = 0
[ 1439.865265] conv_stride_x      = 1
[ 1439.865443] conv_stride_y      = 1
[ 1439.865643] pad_x_left         = 1
[ 1439.865823] pad_x_right        = 1
[ 1439.865998] pad_y_top          = 1
[ 1439.866175] pad_y_bottom       = 1
[ 1439.866352] dilation_x         = 1
[ 1439.866527] dilation_y         = 1
[ 1439.866704] pra_truncate       = 0
[ 1439.866881] in_precision       = 2
[ 1439.867057] out_precision      = 2
[ 1439.867233] pad_val            = 0
[ 1439.867410] in_cvt             =
[ 1439.867589] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1439.867847] out_cvt            =
[ 1439.868025] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1439.868286] 
[ 1439.868404] Exit: dla_read_config
[ 1439.868581] Exit: dla_prepare_operation status=0
[ 1439.868808] Enter: dla_program_operation
[ 1439.869012] Program Convolution operation index 23 ROI 0 Group[1]
[ 1439.869657] 
[ 1439.869657] entered processor_conv_program():
[ 1439.869945] conv getting weight_address:
[ 1439.870145] entered dla_get_dma_cube_address(index = 1, offset = 0x100000):
[ 1439.870439] entered dla_get_dma_address(index = 1):
[ 1439.870663] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1439.870913] entered dla_read_dma_address(index = 1):
[ 1439.871151] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1439.871444] *phys_addr = 0xc4000000 + 0x0
[ 1439.871645] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1439.871950] back to dla_get_dma_cube_address: dst_ptr += 0x100000
[ 1439.872216] conv weight_addr = 0xc4100000
[ 1439.872216] 
[ 1439.872615] conv getting input_address:
[ 1439.872888] entered dla_read_input_address():
[ 1439.873108] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 5505024)
[ 1439.873459] entered dla_get_dma_cube_address(index = 2, offset = 0x540000):
[ 1439.873757] entered dla_get_dma_address(index = 2):
[ 1439.873975] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1439.874216] entered dla_read_dma_address(index = 2):
[ 1439.874477] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1439.874760] *phys_addr = 0xc0800000 + 0x0
[ 1439.874960] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1439.875257] back to dla_get_dma_cube_address: dst_ptr += 0x540000
[ 1439.875523] conv input_addr = 0xc0d40000
[ 1439.875523] 
[ 1439.879703] no desc get due to index==-1
[ 1439.879981] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1439.880489] no desc get due to index==-1
[ 1439.880684] no desc get due to index==-1
[ 1439.880877] no desc get due to index==-1
[ 1439.881070] no desc get due to index==-1
[ 1439.881263] Enter: dla_op_programmed
[ 1439.881454] Update dependency operation index 25 ROI 0 DEP_COUNT=3
[ 1439.881732] Update dependency operation index 24 ROI 0 DEP_COUNT=1
[ 1439.882002] enable SDP in dla_update_dependency as depdency are resolved
[ 1439.882287] Enter: dla_enable_operation
[ 1439.882478] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1439.882865] Exit: dla_enable_operation status=0
[ 1439.883083] Exit: dla_op_programmed
[ 1439.883264] Exit: dla_program_operation status=0
[ 1439.883482] Exit: dla_submit_operation
[ 1439.883674] Exit: dla_dequeue_operation
[ 1439.883875] Exit:dla_op_completion processor Convolution group1 status=0
[ 1439.884163] Exit:dla_handle_events, ret:0
[ 1439.884361] Enter:dla_handle_events, processor:SDP
[ 1439.884584] Handle op complete event, processor SDP group 1
[ 1439.884836] Enter:dla_op_completion processor SDP group1
[ 1439.885079] Completed SDP operation index 20 ROI 0
[ 1439.885312] Update dependency operation index 21 ROI 0 DEP_COUNT=1
[ 1439.885597] enable Convolution in dla_update_dependency as depdency are resolved
[ 1439.885916] Enter: dla_enable_operation
[ 1439.886112] Enable Convolution operation index 21 ROI 0
[ 1439.886989] Enter: dla_op_enabled
[ 1439.887290] Exit: dla_op_enabled
[ 1439.887579] Exit: dla_enable_operation status=0
[ 1439.887936] 21 HWLs done, totally 52 layers
[ 1439.888282] Enter: dla_free_op_desc op desc index 19 ROI 0
[ 1439.888740] Exit: dla_free_op_desc
[ 1439.889036] Enter: dla_dequeue_operation
[ 1439.889360] Dequeue op from SDP processor, index=24 ROI=0
[ 1439.889773] Enter: dla_submit_operation
[ 1439.890096] Prepare SDP operation index 24 ROI 0 dep_count 0
[ 1439.890503] Enter: dla_prepare_operation
[ 1439.918478] processor:SDP group:1, rdma_group:1 available
[ 1439.919034] Enter: dla_read_config
[ 1439.919441] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1439.920380] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1439.921397] *********************************************************
[ 1439.921992] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1439.922445] ---------------------------------------------------------
[ 1439.923084] src_data            = [ dla_data_cube =>
[ 1439.923653]     type          = 2
[ 1439.924086]     address       = -1
[ 1439.924540]     offset        = 0
[ 1439.925016]     width         = 1c
[ 1439.925544]     height        = 1c
[ 1439.925979]     channel       = 80
[ 1439.926415]     size          = 200704
[ 1439.926874]     line_stride   = 896
[ 1439.927323]     surf_stride   = 25088
[ 1439.927791]     plane_stride  = 0
[ 1439.928217] ]
[ 1439.928257] x1_data             = [ dla_data_cube =>
[ 1439.929040]     type          = 0
[ 1439.929463]     address       = 1
[ 1439.929920]     offset        = 16000
[ 1439.930355]     width         = 1
[ 1439.930565]     height        = 1
[ 1439.930760]     channel       = 80
[ 1439.930955]     size          = 256
[ 1439.931157]     line_stride   = 32
[ 1439.931352]     surf_stride   = 32
[ 1439.931549]     plane_stride  = 0
[ 1439.931738] ]
[ 1439.931756] x2_data             = [ dla_data_cube =>
[ 1439.932111]     type          = 0
[ 1439.932305]     address       = 2
[ 1439.932503]     offset        = 500000
[ 1439.932714]     width         = 1c
[ 1439.932910]     height        = 1c
[ 1439.933108]     channel       = 80
[ 1439.933306]     size          = 200704
[ 1439.933525]     line_stride   = 896
[ 1439.933729]     surf_stride   = 25088
[ 1439.933936]     plane_stride  = 0
[ 1439.934127] ]
[ 1439.934145] y_data              = [ dla_data_cube =>
[ 1439.934497]     type          = 0
[ 1439.934695]     address       = 0
[ 1439.934894]     offset        = 0
[ 1439.935090]     width         = 0
[ 1439.935286]     height        = 0
[ 1439.935479]     channel       = 0
[ 1439.935676]     size          = 0
[ 1439.935892]     line_stride   = 0
[ 1439.936076]     surf_stride   = 0
[ 1439.936253]     plane_stride  = 0
[ 1439.936424] ]
[ 1439.936442] dst_data            = [ dla_data_cube =>
[ 1439.936770]     type          = 0
[ 1439.936947]     address       = 2
[ 1439.937122]     offset        = 580000
[ 1439.937309]     width         = 1c
[ 1439.937486]     height        = 1c
[ 1439.937673]     channel       = 80
[ 1439.937848]     size          = 200704
[ 1439.938039]     line_stride   = 896
[ 1439.938219]     surf_stride   = 25088
[ 1439.938404]     plane_stride  = 0
[ 1439.938573] ]
[ 1439.938593] *********************************************************
[ 1439.938956] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1439.939157] ---------------------------------------------------------
[ 1439.939430] src_precision    = 2
[ 1439.939603] dst_precision    = 2
[ 1439.939775] lut_index        = -1
[ 1439.939945] out_cvt          =
[ 1439.940118] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1439.940376] conv_mode        = 0
[ 1439.940548] batch_num        = 1
[ 1439.940719] batch_stride     = 0
[ 1439.940888] x1_op            = [ dla_sdp_op =>
[ 1439.941131]     enable         = 1
[ 1439.941311]     alu_type       = 2
[ 1439.941489]     type           = 2
[ 1439.941678]     mode           = 1
[ 1439.941856]     act            = 0
[ 1439.942034]     shift_value    = 0
[ 1439.942211]     truncate       = 0
[ 1439.942387]     precision      = 2
[ 1439.942564]     alu_operand    = 0
[ 1439.942745]     mul_operand    = 1
[ 1439.942920] cvt.alu_cvt          =
[ 1439.943106] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.943363] cvt.mul_cvt          =
[ 1439.943550] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.943804] ]
[ 1439.943921] x2_op            = [ dla_sdp_op =>
[ 1439.944132]     enable         = 1
[ 1439.944311]     alu_type       = 2
[ 1439.944487]     type           = 2
[ 1439.944664]     mode           = 2
[ 1439.944841]     act            = 1
[ 1439.945017]     shift_value    = 0
[ 1439.945194]     truncate       = 0
[ 1439.945371]     precision      = 2
[ 1439.945554]     alu_operand    = 0
[ 1439.945733]     mul_operand    = 1
[ 1439.945906] cvt.alu_cvt          =
[ 1439.946084] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.946340] cvt.mul_cvt          =
[ 1439.946518] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.946780] ]
[ 1439.946897] y_op             = [ dla_sdp_op =>
[ 1439.947113]     enable         = 0
[ 1439.947291]     alu_type       = 0
[ 1439.947470]     type           = 0
[ 1439.947649]     mode           = 0
[ 1439.947827]     act            = 0
[ 1439.948005]     shift_value    = 0
[ 1439.948183]     truncate       = 0
[ 1439.948360]     precision      = 0
[ 1439.948540]     alu_operand    = 0
[ 1439.948718]     mul_operand    = 0
[ 1439.948889] cvt.alu_cvt          =
[ 1439.949068] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.949323] cvt.mul_cvt          =
[ 1439.949518] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1439.949776] ]
[ 1439.949899] Exit: dla_read_config
[ 1439.950079] Exit: dla_prepare_operation status=0
[ 1439.950300] Enter: dla_program_operation
[ 1439.950503] Program SDP operation index 24 ROI 0 Group[1]
[ 1439.951942] 
[ 1439.951942] entered processor_sdp_program():
[ 1439.952226] sdp skip getting src_addr
[ 1439.952226] 
[ 1439.952485] sdp getting dst_addr:
[ 1439.952668] entered dla_get_dma_cube_address(index = 2, offset = 0x580000):
[ 1439.952958] entered dla_get_dma_address(index = 2):
[ 1439.953182] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1439.953428] entered dla_read_dma_address(index = 2):
[ 1439.953665] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1439.953944] *phys_addr = 0xc0800000 + 0x0
[ 1439.954143] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1439.954443] back to dla_get_dma_cube_address: dst_ptr += 0x580000
[ 1439.954709] sdp dst_addr = 0xc0d80000
[ 1439.954709] 
[ 1439.954967] sdp getting x1_addr:
[ 1439.955141] entered dla_get_dma_cube_address(index = 1, offset = 0x16000):
[ 1439.955426] entered dla_get_dma_address(index = 1):
[ 1439.955648] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1439.955907] entered dla_read_dma_address(index = 1):
[ 1439.956150] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1439.956432] *phys_addr = 0xc4000000 + 0x0
[ 1439.956632] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1439.956929] back to dla_get_dma_cube_address: dst_ptr += 0x16000
[ 1439.957190] sdp x1_addr = 0xc4016000
[ 1439.957190] 
[ 1439.957446] sdp getting x2_addr:
[ 1439.957628] entered dla_get_dma_cube_address(index = 2, offset = 0x500000):
[ 1439.957951] entered dla_get_dma_address(index = 2):
[ 1439.958175] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1439.958420] entered dla_read_dma_address(index = 2):
[ 1439.958653] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1439.958938] *phys_addr = 0xc0800000 + 0x0
[ 1439.959137] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1439.959437] back to dla_get_dma_cube_address: dst_ptr += 0x500000
[ 1439.959704] sdp x1_addr = 0xc0d00000
[ 1439.959704] 
[ 1439.959960] sdp skip getting y_addr
[ 1439.959960] 
[ 1439.969664] no desc get due to index==-1
[ 1439.970109] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1439.970945] no desc get due to index==-1
[ 1439.971341] no desc get due to index==-1
[ 1439.971737] no desc get due to index==-1
[ 1439.972140] Enter: dla_op_programmed
[ 1439.972533] Update dependency operation index 26 ROI 0 DEP_COUNT=2
[ 1439.973115] Exit: dla_op_programmed
[ 1439.973516] Exit: dla_program_operation status=0
[ 1439.973971] Enter: dla_enable_operation
[ 1439.974409] Enable SDP operation index 24 ROI 0
[ 1439.978700] Enter: dla_op_enabled
[ 1439.979013] Update dependency operation index 23 ROI 0 DEP_COUNT=2
[ 1439.979450] Exit: dla_op_enabled
[ 1439.979732] Exit: dla_enable_operation status=0
[ 1439.980078] Exit: dla_submit_operation
[ 1439.980390] Exit: dla_dequeue_operation
[ 1439.980709] Enter: dla_free_op_desc op desc index 20 ROI 0
[ 1439.981167] Exit: dla_free_op_desc
[ 1439.981475] Exit:dla_op_completion processor SDP group1 status=0
[ 1439.981914] Exit:dla_handle_events, ret:0
[ 1439.982234] Enter:dla_handle_events, processor:PDP
[ 1439.982597] Exit:dla_handle_events, ret:0
[ 1439.982992] Enter:dla_handle_events, processor:CDP
[ 1439.983425] Exit:dla_handle_events, ret:0
[ 1439.983817] Enter:dla_handle_events, processor:RUBIK
[ 1439.984267] Exit:dla_handle_events, ret:0
[ 1491.066631] Enter:dla_handle_events, processor:BDMA
[ 1491.067303] Exit:dla_handle_events, ret:0
[ 1491.067793] Enter:dla_handle_events, processor:Convolution
[ 1491.068398] Handle cdma weight done event, processor Convolution group 0
[ 1491.069134] Handle cdma data done event, processor Convolution group 0
[ 1491.069807] Handle op complete event, processor Convolution group 0
[ 1491.070321] Enter:dla_op_completion processor Convolution group0
[ 1491.070810] Completed Convolution operation index 21 ROI 0
[ 1491.071274] 22 HWLs done, totally 52 layers
[ 1491.071654] Enter: dla_dequeue_operation
[ 1491.072024] Dequeue op from Convolution processor, index=25 ROI=0
[ 1491.072499] Enter: dla_submit_operation
[ 1491.072828] Prepare Convolution operation index 25 ROI 0 dep_count 2
[ 1491.073274] Enter: dla_prepare_operation
[ 1491.073718] processor:Convolution group:0, rdma_group:0 available
[ 1491.074155] Enter: dla_read_config
[ 1491.074586] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1491.075376] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1491.076198] *********************************************************
[ 1491.076661] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1491.077043] ---------------------------------------------------------
[ 1491.077487] weight_data         = [ dla_data_cube =>
[ 1491.077916]     type          = 0
[ 1491.078311]     address       = 1
[ 1491.078700]     offset        = 180000
[ 1491.078946]     width         = 3
[ 1491.079177]     height        = 3
[ 1491.079409]     channel       = 80
[ 1491.079646]     size          = 294912
[ 1491.079894]     line_stride   = 0
[ 1491.080130]     surf_stride   = 0
[ 1491.080364]     plane_stride  = 0
[ 1491.080598] ]
[ 1491.080619] wmb_data            = [ dla_data_cube =>
[ 1491.081051]     type          = 0
[ 1491.081284]     address       = 0
[ 1491.081519]     offset        = 0
[ 1491.081759]     width         = 0
[ 1491.081989]     height        = 0
[ 1491.082229]     channel       = 0
[ 1491.082459]     size          = 0
[ 1491.082690]     line_stride   = 0
[ 1491.082922]     surf_stride   = 0
[ 1491.083154]     plane_stride  = 0
[ 1491.083381] ]
[ 1491.083399] wgs_data            = [ dla_data_cube =>
[ 1491.083832]     type          = 0
[ 1491.084066]     address       = 0
[ 1491.084298]     offset        = 0
[ 1491.084534]     width         = 0
[ 1491.084774]     height        = 0
[ 1491.085015]     channel       = 0
[ 1491.085249]     size          = 0
[ 1491.085486]     line_stride   = 0
[ 1491.085734]     surf_stride   = 0
[ 1491.085976]     plane_stride  = 0
[ 1491.086211] ]
[ 1491.086230] src_data            = [ dla_data_cube =>
[ 1491.086679]     type          = 0
[ 1491.086922]     address       = 2
[ 1491.087158]     offset        = 580000
[ 1491.087412]     width         = 1c
[ 1491.087654]     height        = 1c
[ 1491.087902]     channel       = 80
[ 1491.088156]     size          = 200704
[ 1491.088412]     line_stride   = 896
[ 1491.088659]     surf_stride   = 25088
[ 1491.088920]     plane_stride  = 0
[ 1491.089153] ]
[ 1491.089171] dst_data            = [ dla_data_cube =>
[ 1491.089620]     type          = 2
[ 1491.089870]     address       = -1
[ 1491.090116]     offset        = 0
[ 1491.090365]     width         = 1c
[ 1491.090616]     height        = 1c
[ 1491.090867]     channel       = 80
[ 1491.091132]     size          = 200704
[ 1491.091421]     line_stride   = 896
[ 1491.091682]     surf_stride   = 25088
[ 1491.091955]     plane_stride  = 0
[ 1491.092196] ]
[ 1491.092217] offset_u            = 0
[ 1491.092577] in_line_uv_stride   = 0
[ 1491.092577] 
[ 1491.092910] *********************************************************
[ 1491.093303] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1491.093586] ---------------------------------------------------------
[ 1491.093982] conv_mode          = 0
[ 1491.094241] data_reuse         = 0
[ 1491.094497] weight_reuse       = 0
[ 1491.094699] skip_data_rls      = 0
[ 1491.094901] skip_weight_rls    = 0
[ 1491.095096] entry_per_slice    = 56
[ 1491.095299] data_format        = 36
[ 1491.095496] pixel_mapping      = 0
[ 1491.095692] fetch_grain        = 1
[ 1491.095891] batch              = 1
[ 1491.096092] weight_format      = 0
[ 1491.096293] data_bank          = 7
[ 1491.096490] weight_bank        = 9
[ 1491.096688] batch_stride       = 0
[ 1491.096881] post_extension     = 0
[ 1491.097076] pixel_override     = 1
[ 1491.097269] release            = 28
[ 1491.097470] input_width_csc    = 28
[ 1491.097677] input_height_csc   = 28
[ 1491.097875] input_channel_csc  = 128
[ 1491.098077] kernel_width_csc   = 3
[ 1491.098270] kernel_height_csc  = 3
[ 1491.098469] kernel_channel_csc = 128
[ 1491.098675] input_width_cmac   = 28
[ 1491.098885] input_height_cmac  = 28
[ 1491.099097] bytes_per_kernel   = 2304
[ 1491.099316] mean_ry            = 0
[ 1491.099515] mean_gu            = 0
[ 1491.099711] mean_bv            = 0
[ 1491.099906] mean_ax            = 0
[ 1491.100101] mean_format        = 0
[ 1491.100309] conv_stride_x      = 1
[ 1491.100509] conv_stride_y      = 1
[ 1491.100714] pad_x_left         = 1
[ 1491.100915] pad_x_right        = 1
[ 1491.101117] pad_y_top          = 1
[ 1491.101312] pad_y_bottom       = 1
[ 1491.101517] dilation_x         = 1
[ 1491.101724] dilation_y         = 1
[ 1491.101922] pra_truncate       = 0
[ 1491.102126] in_precision       = 2
[ 1491.102322] out_precision      = 2
[ 1491.102517] pad_val            = 0
[ 1491.102715] in_cvt             =
[ 1491.102913] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1491.103200] out_cvt            =
[ 1491.103396] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1491.103684] 
[ 1491.103812] Exit: dla_read_config
[ 1491.104013] Exit: dla_prepare_operation status=0
[ 1491.104258] Enter: dla_program_operation
[ 1491.104481] Program Convolution operation index 25 ROI 0 Group[0]
[ 1491.105075] 
[ 1491.105075] entered processor_conv_program():
[ 1491.105399] conv getting weight_address:
[ 1491.105637] entered dla_get_dma_cube_address(index = 1, offset = 0x180000):
[ 1491.105969] entered dla_get_dma_address(index = 1):
[ 1491.106219] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1491.106497] entered dla_read_dma_address(index = 1):
[ 1491.106763] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1491.107096] *phys_addr = 0xc4000000 + 0x0
[ 1491.107317] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1491.107662] back to dla_get_dma_cube_address: dst_ptr += 0x180000
[ 1491.107984] conv weight_addr = 0xc4180000
[ 1491.107984] 
[ 1491.108289] conv getting input_address:
[ 1491.108509] entered dla_read_input_address():
[ 1491.108754] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 5767168)
[ 1491.109137] entered dla_get_dma_cube_address(index = 2, offset = 0x580000):
[ 1491.109464] entered dla_get_dma_address(index = 2):
[ 1491.109714] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1491.109982] entered dla_read_dma_address(index = 2):
[ 1491.110235] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1491.110547] *phys_addr = 0xc0800000 + 0x0
[ 1491.110771] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1491.111100] back to dla_get_dma_cube_address: dst_ptr += 0x580000
[ 1491.111393] conv input_addr = 0xc0d80000
[ 1491.111393] 
[ 1491.115496] no desc get due to index==-1
[ 1491.115800] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1491.116382] no desc get due to index==-1
[ 1491.116662] no desc get due to index==-1
[ 1491.116887] no desc get due to index==-1
[ 1491.117099] no desc get due to index==-1
[ 1491.117318] Enter: dla_op_programmed
[ 1491.117538] Update dependency operation index 27 ROI 0 DEP_COUNT=3
[ 1491.117850] Update dependency operation index 26 ROI 0 DEP_COUNT=1
[ 1491.118153] enable SDP in dla_update_dependency as depdency are resolved
[ 1491.118475] Enter: dla_enable_operation
[ 1491.118774] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1491.119461] Exit: dla_enable_operation status=0
[ 1491.119860] Exit: dla_op_programmed
[ 1491.120190] Exit: dla_program_operation status=0
[ 1491.120621] Exit: dla_submit_operation
[ 1491.120979] Exit: dla_dequeue_operation
[ 1491.121340] Exit:dla_op_completion processor Convolution group0 status=0
[ 1491.121870] Exit:dla_handle_events, ret:0
[ 1491.122242] Enter:dla_handle_events, processor:SDP
[ 1491.122652] Handle op complete event, processor SDP group 0
[ 1491.123115] Enter:dla_op_completion processor SDP group0
[ 1491.123564] Completed SDP operation index 22 ROI 0
[ 1491.123991] Update dependency operation index 23 ROI 0 DEP_COUNT=1
[ 1491.124507] enable Convolution in dla_update_dependency as depdency are resolved
[ 1491.125120] Enter: dla_enable_operation
[ 1491.125491] Enable Convolution operation index 23 ROI 0
[ 1491.126679] Enter: dla_op_enabled
[ 1491.126896] Exit: dla_op_enabled
[ 1491.127098] Exit: dla_enable_operation status=0
[ 1491.127353] 23 HWLs done, totally 52 layers
[ 1491.127598] Enter: dla_free_op_desc op desc index 21 ROI 0
[ 1491.127922] Exit: dla_free_op_desc
[ 1491.128145] Enter: dla_dequeue_operation
[ 1491.128381] Dequeue op from SDP processor, index=26 ROI=0
[ 1491.128674] Enter: dla_submit_operation
[ 1491.128905] Prepare SDP operation index 26 ROI 0 dep_count 0
[ 1491.129206] Enter: dla_prepare_operation
[ 1491.199338] processor:SDP group:0, rdma_group:0 available
[ 1491.199857] Enter: dla_read_config
[ 1491.200303] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1491.201319] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1491.202470] *********************************************************
[ 1491.203097] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1491.203601] ---------------------------------------------------------
[ 1491.204232] src_data            = [ dla_data_cube =>
[ 1491.204758]     type          = 2
[ 1491.205159]     address       = -1
[ 1491.205571]     offset        = 0
[ 1491.205992]     width         = 1c
[ 1491.206405]     height        = 1c
[ 1491.206813]     channel       = 80
[ 1491.207231]     size          = 200704
[ 1491.207672]     line_stride   = 896
[ 1491.208132]     surf_stride   = 25088
[ 1491.208580]     plane_stride  = 0
[ 1491.208987] ]
[ 1491.209027] x1_data             = [ dla_data_cube =>
[ 1491.209788]     type          = 0
[ 1491.210211]     address       = 1
[ 1491.210614]     offset        = 17000
[ 1491.210837]     width         = 1
[ 1491.211038]     height        = 1
[ 1491.211233]     channel       = 80
[ 1491.211437]     size          = 256
[ 1491.211641]     line_stride   = 32
[ 1491.211843]     surf_stride   = 32
[ 1491.212043]     plane_stride  = 0
[ 1491.212237] ]
[ 1491.212255] x2_data             = [ dla_data_cube =>
[ 1491.212619]     type          = 0
[ 1491.212816]     address       = 0
[ 1491.213008]     offset        = 0
[ 1491.213202]     width         = 0
[ 1491.213401]     height        = 0
[ 1491.213602]     channel       = 0
[ 1491.213805]     size          = 0
[ 1491.214011]     line_stride   = 0
[ 1491.214214]     surf_stride   = 0
[ 1491.214417]     plane_stride  = 0
[ 1491.214615] ]
[ 1491.214633] y_data              = [ dla_data_cube =>
[ 1491.215005]     type          = 0
[ 1491.215216]     address       = 0
[ 1491.215415]     offset        = 0
[ 1491.215616]     width         = 0
[ 1491.215820]     height        = 0
[ 1491.216019]     channel       = 0
[ 1491.216220]     size          = 0
[ 1491.216427]     line_stride   = 0
[ 1491.216629]     surf_stride   = 0
[ 1491.216831]     plane_stride  = 0
[ 1491.217026] ]
[ 1491.217044] dst_data            = [ dla_data_cube =>
[ 1491.217420]     type          = 0
[ 1491.217632]     address       = 2
[ 1491.217831]     offset        = 5c0000
[ 1491.218049]     width         = 1c
[ 1491.218253]     height        = 1c
[ 1491.218450]     channel       = 80
[ 1491.218703]     size          = 200704
[ 1491.218927]     line_stride   = 896
[ 1491.219142]     surf_stride   = 25088
[ 1491.219359]     plane_stride  = 0
[ 1491.219556] ]
[ 1491.219576] *********************************************************
[ 1491.220004] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1491.220237] ---------------------------------------------------------
[ 1491.220564] src_precision    = 2
[ 1491.220765] dst_precision    = 2
[ 1491.220966] lut_index        = -1
[ 1491.221169] out_cvt          =
[ 1491.221371] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1491.221700] conv_mode        = 0
[ 1491.221904] batch_num        = 1
[ 1491.222109] batch_stride     = 0
[ 1491.222310] x1_op            = [ dla_sdp_op =>
[ 1491.222552]     enable         = 1
[ 1491.222753]     alu_type       = 2
[ 1491.222951]     type           = 2
[ 1491.223142]     mode           = 1
[ 1491.223357]     act            = 1
[ 1491.223658]     shift_value    = 0
[ 1491.223978]     truncate       = 0
[ 1491.224285]     precision      = 2
[ 1491.224540]     alu_operand    = 0
[ 1491.224744]     mul_operand    = 1
[ 1491.224950] cvt.alu_cvt          =
[ 1491.225181] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.225479] cvt.mul_cvt          =
[ 1491.225713] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.226064] ]
[ 1491.226246] x2_op            = [ dla_sdp_op =>
[ 1491.226610]     enable         = 0
[ 1491.226870]     alu_type       = 0
[ 1491.227075]     type           = 0
[ 1491.227311]     mode           = 0
[ 1491.227539]     act            = 0
[ 1491.227733]     shift_value    = 0
[ 1491.227939]     truncate       = 0
[ 1491.228145]     precision      = 0
[ 1491.228385]     alu_operand    = 0
[ 1491.228598]     mul_operand    = 0
[ 1491.228796] cvt.alu_cvt          =
[ 1491.229029] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.229402] cvt.mul_cvt          =
[ 1491.229717] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.230174] ]
[ 1491.230389] y_op             = [ dla_sdp_op =>
[ 1491.230768]     enable         = 0
[ 1491.231098]     alu_type       = 0
[ 1491.231425]     type           = 0
[ 1491.231753]     mode           = 0
[ 1491.232080]     act            = 0
[ 1491.232401]     shift_value    = 0
[ 1491.232592]     truncate       = 0
[ 1491.232774]     precision      = 0
[ 1491.232955]     alu_operand    = 0
[ 1491.233144]     mul_operand    = 0
[ 1491.233324] cvt.alu_cvt          =
[ 1491.233597] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.234069] cvt.mul_cvt          =
[ 1491.234380] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1491.234847] ]
[ 1491.235072] Exit: dla_read_config
[ 1491.235394] Exit: dla_prepare_operation status=0
[ 1491.235771] Enter: dla_program_operation
[ 1491.236131] Program SDP operation index 26 ROI 0 Group[0]
[ 1491.237736] 
[ 1491.237736] entered processor_sdp_program():
[ 1491.238234] sdp skip getting src_addr
[ 1491.238234] 
[ 1491.238656] sdp getting dst_addr:
[ 1491.238890] entered dla_get_dma_cube_address(index = 2, offset = 0x5c0000):
[ 1491.239279] entered dla_get_dma_address(index = 2):
[ 1491.239576] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1491.239901] entered dla_read_dma_address(index = 2):
[ 1491.240204] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1491.240628] *phys_addr = 0xc0800000 + 0x0
[ 1491.240894] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1491.241289] back to dla_get_dma_cube_address: dst_ptr += 0x5c0000
[ 1491.241650] sdp dst_addr = 0xc0dc0000
[ 1491.241650] 
[ 1491.241986] sdp getting x1_addr:
[ 1491.242226] entered dla_get_dma_cube_address(index = 1, offset = 0x17000):
[ 1491.242612] entered dla_get_dma_address(index = 1):
[ 1491.242918] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1491.243243] entered dla_read_dma_address(index = 1):
[ 1491.243541] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1491.243910] *phys_addr = 0xc4000000 + 0x0
[ 1491.244178] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1491.244603] back to dla_get_dma_cube_address: dst_ptr += 0x17000
[ 1491.244949] sdp x1_addr = 0xc4017000
[ 1491.244949] 
[ 1491.245274] sdp skip getting x2_addr
[ 1491.245274] 
[ 1491.245608] sdp skip getting y_addr
[ 1491.245608] 
[ 1491.254623] no desc get due to index==-1
[ 1491.254934] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1491.255526] no desc get due to index==-1
[ 1491.255815] no desc get due to index==-1
[ 1491.256202] no desc get due to index==-1
[ 1491.256509] Enter: dla_op_programmed
[ 1491.256757] Update dependency operation index 28 ROI 0 DEP_COUNT=2
[ 1491.257115] Exit: dla_op_programmed
[ 1491.257348] Exit: dla_program_operation status=0
[ 1491.257638] Enter: dla_enable_operation
[ 1491.257912] Enable SDP operation index 26 ROI 0
[ 1491.259233] Enter: dla_op_enabled
[ 1491.259588] Update dependency operation index 25 ROI 0 DEP_COUNT=2
[ 1491.260019] Exit: dla_op_enabled
[ 1491.260277] Exit: dla_enable_operation status=0
[ 1491.260592] Exit: dla_submit_operation
[ 1491.260934] Exit: dla_dequeue_operation
[ 1491.261328] Enter: dla_free_op_desc op desc index 22 ROI 0
[ 1491.261830] Exit: dla_free_op_desc
[ 1491.262085] Exit:dla_op_completion processor SDP group0 status=0
[ 1491.262474] Exit:dla_handle_events, ret:0
[ 1491.262715] Enter:dla_handle_events, processor:PDP
[ 1491.262946] Exit:dla_handle_events, ret:0
[ 1491.263151] Enter:dla_handle_events, processor:CDP
[ 1491.263379] Exit:dla_handle_events, ret:0
[ 1491.263582] Enter:dla_handle_events, processor:RUBIK
[ 1491.263814] Exit:dla_handle_events, ret:0
[ 1545.831801] Enter:dla_handle_events, processor:BDMA
[ 1545.832216] Exit:dla_handle_events, ret:0
[ 1545.832473] Enter:dla_handle_events, processor:Convolution
[ 1545.832797] Handle cdma weight done event, processor Convolution group 1
[ 1545.833283] Handle cdma data done event, processor Convolution group 1
[ 1545.833777] Handle op complete event, processor Convolution group 1
[ 1545.834190] Enter:dla_op_completion processor Convolution group1
[ 1545.834545] Completed Convolution operation index 23 ROI 0
[ 1545.834894] 24 HWLs done, totally 52 layers
[ 1545.835331] Enter: dla_dequeue_operation
[ 1545.835750] Dequeue op from Convolution processor, index=27 ROI=0
[ 1545.836319] Enter: dla_submit_operation
[ 1545.836735] Prepare Convolution operation index 27 ROI 0 dep_count 2
[ 1545.837312] Enter: dla_prepare_operation
[ 1545.837885] processor:Convolution group:1, rdma_group:0 available
[ 1545.838347] Enter: dla_read_config
[ 1545.838723] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1545.839500] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1545.840355] *********************************************************
[ 1545.840825] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1545.841197] ---------------------------------------------------------
[ 1545.841660] weight_data         = [ dla_data_cube =>
[ 1545.842052]     type          = 0
[ 1545.842348]     address       = 1
[ 1545.842643]     offset        = 200000
[ 1545.842955]     width         = 3
[ 1545.843247]     height        = 3
[ 1545.843544]     channel       = 80
[ 1545.843849]     size          = 294912
[ 1545.844168]     line_stride   = 0
[ 1545.844458]     surf_stride   = 0
[ 1545.844761]     plane_stride  = 0
[ 1545.845048] ]
[ 1545.845081] wmb_data            = [ dla_data_cube =>
[ 1545.845626]     type          = 0
[ 1545.845928]     address       = 0
[ 1545.846219]     offset        = 0
[ 1545.846514]     width         = 0
[ 1545.846809]     height        = 0
[ 1545.847097]     channel       = 0
[ 1545.847391]     size          = 0
[ 1545.847681]     line_stride   = 0
[ 1545.847977]     surf_stride   = 0
[ 1545.848274]     plane_stride  = 0
[ 1545.848567] ]
[ 1545.848596] wgs_data            = [ dla_data_cube =>
[ 1545.849130]     type          = 0
[ 1545.849427]     address       = 0
[ 1545.849742]     offset        = 0
[ 1545.850027]     width         = 0
[ 1545.850207]     height        = 0
[ 1545.850392]     channel       = 0
[ 1545.850571]     size          = 0
[ 1545.850752]     line_stride   = 0
[ 1545.850932]     surf_stride   = 0
[ 1545.851111]     plane_stride  = 0
[ 1545.851292] ]
[ 1545.851309] src_data            = [ dla_data_cube =>
[ 1545.851652]     type          = 0
[ 1545.851836]     address       = 2
[ 1545.852018]     offset        = 5c0000
[ 1545.852222]     width         = 1c
[ 1545.852409]     height        = 1c
[ 1545.852594]     channel       = 80
[ 1545.852776]     size          = 200704
[ 1545.852977]     line_stride   = 896
[ 1545.853164]     surf_stride   = 25088
[ 1545.853366]     plane_stride  = 0
[ 1545.853557] ]
[ 1545.853573] dst_data            = [ dla_data_cube =>
[ 1545.853917]     type          = 2
[ 1545.854097]     address       = -1
[ 1545.854281]     offset        = 0
[ 1545.854464]     width         = 1c
[ 1545.854657]     height        = 1c
[ 1545.854839]     channel       = 80
[ 1545.855028]     size          = 200704
[ 1545.855232]     line_stride   = 896
[ 1545.855425]     surf_stride   = 25088
[ 1545.855625]     plane_stride  = 0
[ 1545.855807] ]
[ 1545.855827] offset_u            = 0
[ 1545.856104] in_line_uv_stride   = 0
[ 1545.856104] 
[ 1545.856373] *********************************************************
[ 1545.856659] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1545.856875] ---------------------------------------------------------
[ 1545.857171] conv_mode          = 0
[ 1545.857366] data_reuse         = 0
[ 1545.857571] weight_reuse       = 0
[ 1545.857759] skip_data_rls      = 0
[ 1545.857948] skip_weight_rls    = 0
[ 1545.858138] entry_per_slice    = 56
[ 1545.858321] data_format        = 36
[ 1545.858507] pixel_mapping      = 0
[ 1545.858694] fetch_grain        = 1
[ 1545.858878] batch              = 1
[ 1545.859058] weight_format      = 0
[ 1545.859243] data_bank          = 7
[ 1545.859425] weight_bank        = 9
[ 1545.859614] batch_stride       = 0
[ 1545.859802] post_extension     = 0
[ 1545.859985] pixel_override     = 1
[ 1545.860172] release            = 28
[ 1545.860360] input_width_csc    = 28
[ 1545.860549] input_height_csc   = 28
[ 1545.860740] input_channel_csc  = 128
[ 1545.860938] kernel_width_csc   = 3
[ 1545.861130] kernel_height_csc  = 3
[ 1545.861314] kernel_channel_csc = 128
[ 1545.861541] input_width_cmac   = 28
[ 1545.861792] input_height_cmac  = 28
[ 1545.862036] bytes_per_kernel   = 2304
[ 1545.862274] mean_ry            = 0
[ 1545.862508] mean_gu            = 0
[ 1545.862738] mean_bv            = 0
[ 1545.862993] mean_ax            = 0
[ 1545.863284] mean_format        = 0
[ 1545.863574] conv_stride_x      = 1
[ 1545.863869] conv_stride_y      = 1
[ 1545.864163] pad_x_left         = 1
[ 1545.864457] pad_x_right        = 1
[ 1545.864758] pad_y_top          = 1
[ 1545.865055] pad_y_bottom       = 1
[ 1545.865348] dilation_x         = 1
[ 1545.865658] dilation_y         = 1
[ 1545.865947] pra_truncate       = 0
[ 1545.866244] in_precision       = 2
[ 1545.866535] out_precision      = 2
[ 1545.866828] pad_val            = 0
[ 1545.867116] in_cvt             =
[ 1545.867407] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1545.867837] out_cvt            =
[ 1545.868128] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1545.868557] 
[ 1545.868745] Exit: dla_read_config
[ 1545.869035] Exit: dla_prepare_operation status=0
[ 1545.869396] Enter: dla_program_operation
[ 1545.869748] Program Convolution operation index 27 ROI 0 Group[1]
[ 1545.870334] 
[ 1545.870334] entered processor_conv_program():
[ 1545.870638] conv getting weight_address:
[ 1545.870836] entered dla_get_dma_cube_address(index = 1, offset = 0x200000):
[ 1545.871143] entered dla_get_dma_address(index = 1):
[ 1545.871372] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1545.871635] entered dla_read_dma_address(index = 1):
[ 1545.871868] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1545.872163] *phys_addr = 0xc4000000 + 0x0
[ 1545.872369] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1545.872680] back to dla_get_dma_cube_address: dst_ptr += 0x200000
[ 1545.872958] conv weight_addr = 0xc4200000
[ 1545.872958] 
[ 1545.873231] conv getting input_address:
[ 1545.873415] entered dla_read_input_address():
[ 1545.873636] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6029312)
[ 1545.873996] entered dla_get_dma_cube_address(index = 2, offset = 0x5c0000):
[ 1545.874293] entered dla_get_dma_address(index = 2):
[ 1545.874516] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1545.874764] entered dla_read_dma_address(index = 2):
[ 1545.875000] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1545.875293] *phys_addr = 0xc0800000 + 0x0
[ 1545.875497] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1545.875804] back to dla_get_dma_cube_address: dst_ptr += 0x5c0000
[ 1545.876090] conv input_addr = 0xc0dc0000
[ 1545.876090] 
[ 1545.879021] no desc get due to index==-1
[ 1545.879303] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1545.879848] no desc get due to index==-1
[ 1545.880079] no desc get due to index==-1
[ 1545.880271] no desc get due to index==-1
[ 1545.880467] no desc get due to index==-1
[ 1545.880673] Enter: dla_op_programmed
[ 1545.880871] Update dependency operation index 29 ROI 0 DEP_COUNT=3
[ 1545.881153] Update dependency operation index 28 ROI 0 DEP_COUNT=1
[ 1545.881429] enable SDP in dla_update_dependency as depdency are resolved
[ 1545.881748] Enter: dla_enable_operation
[ 1545.881959] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1545.882374] Exit: dla_enable_operation status=0
[ 1545.882596] Exit: dla_op_programmed
[ 1545.882796] Exit: dla_program_operation status=0
[ 1545.883031] Exit: dla_submit_operation
[ 1545.883234] Exit: dla_dequeue_operation
[ 1545.883443] Exit:dla_op_completion processor Convolution group1 status=0
[ 1545.883753] Exit:dla_handle_events, ret:0
[ 1545.883964] Enter:dla_handle_events, processor:SDP
[ 1545.884205] Handle op complete event, processor SDP group 1
[ 1545.884474] Enter:dla_op_completion processor SDP group1
[ 1545.884733] Completed SDP operation index 24 ROI 0
[ 1545.884978] Update dependency operation index 25 ROI 0 DEP_COUNT=1
[ 1545.885262] enable Convolution in dla_update_dependency as depdency are resolved
[ 1545.885612] Enter: dla_enable_operation
[ 1545.885835] Enable Convolution operation index 25 ROI 0
[ 1545.886506] Enter: dla_op_enabled
[ 1545.886699] Exit: dla_op_enabled
[ 1545.886887] Exit: dla_enable_operation status=0
[ 1545.887127] 25 HWLs done, totally 52 layers
[ 1545.887355] Enter: dla_free_op_desc op desc index 23 ROI 0
[ 1545.887654] Exit: dla_free_op_desc
[ 1545.887846] Enter: dla_dequeue_operation
[ 1545.888079] Dequeue op from SDP processor, index=28 ROI=0
[ 1545.888343] Enter: dla_submit_operation
[ 1545.888559] Prepare SDP operation index 28 ROI 0 dep_count 0
[ 1545.888833] Enter: dla_prepare_operation
[ 1545.963125] processor:SDP group:1, rdma_group:1 available
[ 1545.963470] Enter: dla_read_config
[ 1545.963729] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1545.964254] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1545.964784] *********************************************************
[ 1545.965080] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1545.965318] ---------------------------------------------------------
[ 1545.965621] src_data            = [ dla_data_cube =>
[ 1545.965871]     type          = 2
[ 1545.966065]     address       = -1
[ 1545.966250]     offset        = 0
[ 1545.966433]     width         = 1c
[ 1545.966620]     height        = 1c
[ 1545.966809]     channel       = 80
[ 1545.967000]     size          = 200704
[ 1545.967200]     line_stride   = 896
[ 1545.967391]     surf_stride   = 25088
[ 1545.967594]     plane_stride  = 0
[ 1545.967779] ]
[ 1545.967798] x1_data             = [ dla_data_cube =>
[ 1545.968136]     type          = 0
[ 1545.968325]     address       = 1
[ 1545.968509]     offset        = 18000
[ 1545.968703]     width         = 1
[ 1545.968888]     height        = 1
[ 1545.969070]     channel       = 80
[ 1545.969258]     size          = 256
[ 1545.969451]     line_stride   = 32
[ 1545.969640]     surf_stride   = 32
[ 1545.969830]     plane_stride  = 0
[ 1545.970009] ]
[ 1545.970027] x2_data             = [ dla_data_cube =>
[ 1545.970359]     type          = 0
[ 1545.970545]     address       = 2
[ 1545.970726]     offset        = 580000
[ 1545.970928]     width         = 1c
[ 1545.971111]     height        = 1c
[ 1545.971290]     channel       = 80
[ 1545.971478]     size          = 200704
[ 1545.971682]     line_stride   = 896
[ 1545.971876]     surf_stride   = 25088
[ 1545.972076]     plane_stride  = 0
[ 1545.972256] ]
[ 1545.972274] y_data              = [ dla_data_cube =>
[ 1545.972604]     type          = 0
[ 1545.972793]     address       = 0
[ 1545.972976]     offset        = 0
[ 1545.973161]     width         = 0
[ 1545.973341]     height        = 0
[ 1545.973535]     channel       = 0
[ 1545.973722]     size          = 0
[ 1545.973939]     line_stride   = 0
[ 1545.974122]     surf_stride   = 0
[ 1545.974303]     plane_stride  = 0
[ 1545.974483] ]
[ 1545.974501] dst_data            = [ dla_data_cube =>
[ 1545.974828]     type          = 0
[ 1545.975008]     address       = 2
[ 1545.975187]     offset        = 600000
[ 1545.975388]     width         = 1c
[ 1545.975569]     height        = 1c
[ 1545.975756]     channel       = 80
[ 1545.975940]     size          = 200704
[ 1545.976144]     line_stride   = 896
[ 1545.976338]     surf_stride   = 25088
[ 1545.976532]     plane_stride  = 0
[ 1545.976716] ]
[ 1545.976736] *********************************************************
[ 1545.977115] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1545.977330] ---------------------------------------------------------
[ 1545.977629] src_precision    = 2
[ 1545.977813] dst_precision    = 2
[ 1545.977997] lut_index        = -1
[ 1545.978186] out_cvt          =
[ 1545.978368] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1545.978642] conv_mode        = 0
[ 1545.978827] batch_num        = 1
[ 1545.979013] batch_stride     = 0
[ 1545.979202] x1_op            = [ dla_sdp_op =>
[ 1545.979434]     enable         = 1
[ 1545.979628]     alu_type       = 2
[ 1545.979823]     type           = 2
[ 1545.980014]     mode           = 1
[ 1545.980209]     act            = 0
[ 1545.980394]     shift_value    = 0
[ 1545.980582]     truncate       = 0
[ 1545.980772]     precision      = 2
[ 1545.980966]     alu_operand    = 0
[ 1545.981151]     mul_operand    = 1
[ 1545.981340] cvt.alu_cvt          =
[ 1545.981546] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.981829] cvt.mul_cvt          =
[ 1545.982027] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.982301] ]
[ 1545.982420] x2_op            = [ dla_sdp_op =>
[ 1545.982648]     enable         = 1
[ 1545.982837]     alu_type       = 2
[ 1545.983028]     type           = 2
[ 1545.983221]     mode           = 2
[ 1545.983413]     act            = 1
[ 1545.983607]     shift_value    = 0
[ 1545.983798]     truncate       = 0
[ 1545.983982]     precision      = 2
[ 1545.984166]     alu_operand    = 0
[ 1545.984356]     mul_operand    = 1
[ 1545.984539] cvt.alu_cvt          =
[ 1545.984726] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.984998] cvt.mul_cvt          =
[ 1545.985185] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.985458] ]
[ 1545.985588] y_op             = [ dla_sdp_op =>
[ 1545.985817]     enable         = 0
[ 1545.986003]     alu_type       = 0
[ 1545.986184]     type           = 0
[ 1545.986368]     mode           = 0
[ 1545.986559]     act            = 0
[ 1545.986742]     shift_value    = 0
[ 1545.986925]     truncate       = 0
[ 1545.987116]     precision      = 0
[ 1545.987308]     alu_operand    = 0
[ 1545.987494]     mul_operand    = 0
[ 1545.987675] cvt.alu_cvt          =
[ 1545.987868] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.988146] cvt.mul_cvt          =
[ 1545.988334] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1545.988611] ]
[ 1545.988738] Exit: dla_read_config
[ 1545.988953] Exit: dla_prepare_operation status=0
[ 1545.989197] Enter: dla_program_operation
[ 1545.989415] Program SDP operation index 28 ROI 0 Group[1]
[ 1545.990861] 
[ 1545.990861] entered processor_sdp_program():
[ 1545.991217] sdp skip getting src_addr
[ 1545.991217] 
[ 1545.991559] sdp getting dst_addr:
[ 1545.991795] entered dla_get_dma_cube_address(index = 2, offset = 0x600000):
[ 1545.992147] entered dla_get_dma_address(index = 2):
[ 1545.992386] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1545.992657] entered dla_read_dma_address(index = 2):
[ 1545.992911] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1545.993211] *phys_addr = 0xc0800000 + 0x0
[ 1545.993426] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1545.993754] back to dla_get_dma_cube_address: dst_ptr += 0x600000
[ 1545.994045] sdp dst_addr = 0xc0e00000
[ 1545.994045] 
[ 1545.994322] sdp getting x1_addr:
[ 1545.994507] entered dla_get_dma_cube_address(index = 1, offset = 0x18000):
[ 1545.994817] entered dla_get_dma_address(index = 1):
[ 1545.995059] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1545.995324] entered dla_read_dma_address(index = 1):
[ 1545.995570] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1545.995873] *phys_addr = 0xc4000000 + 0x0
[ 1545.996082] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1545.996405] back to dla_get_dma_cube_address: dst_ptr += 0x18000
[ 1545.996684] sdp x1_addr = 0xc4018000
[ 1545.996684] 
[ 1545.996955] sdp getting x2_addr:
[ 1545.997145] entered dla_get_dma_cube_address(index = 2, offset = 0x580000):
[ 1545.997451] entered dla_get_dma_address(index = 2):
[ 1545.997701] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1545.997964] entered dla_read_dma_address(index = 2):
[ 1545.998214] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1545.998522] *phys_addr = 0xc0800000 + 0x0
[ 1545.998735] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1545.999054] back to dla_get_dma_cube_address: dst_ptr += 0x580000
[ 1545.999346] sdp x1_addr = 0xc0d80000
[ 1545.999346] 
[ 1545.999617] sdp skip getting y_addr
[ 1545.999617] 
[ 1546.010309] no desc get due to index==-1
[ 1546.010795] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1546.011601] no desc get due to index==-1
[ 1546.011874] no desc get due to index==-1
[ 1546.012128] no desc get due to index==-1
[ 1546.012389] Enter: dla_op_programmed
[ 1546.012640] Update dependency operation index 30 ROI 0 DEP_COUNT=2
[ 1546.013011] Exit: dla_op_programmed
[ 1546.013252] Exit: dla_program_operation status=0
[ 1546.013547] Enter: dla_enable_operation
[ 1546.013811] Enable SDP operation index 28 ROI 0
[ 1546.018122] Enter: dla_op_enabled
[ 1546.018372] Update dependency operation index 27 ROI 0 DEP_COUNT=2
[ 1546.018721] Exit: dla_op_enabled
[ 1546.018953] Exit: dla_enable_operation status=0
[ 1546.019260] Exit: dla_submit_operation
[ 1546.019526] Exit: dla_dequeue_operation
[ 1546.019787] Enter: dla_free_op_desc op desc index 24 ROI 0
[ 1546.020168] Exit: dla_free_op_desc
[ 1546.020417] Exit:dla_op_completion processor SDP group1 status=0
[ 1546.020771] Exit:dla_handle_events, ret:0
[ 1546.021034] Enter:dla_handle_events, processor:PDP
[ 1546.021334] Exit:dla_handle_events, ret:0
[ 1546.021603] Enter:dla_handle_events, processor:CDP
[ 1546.021898] Exit:dla_handle_events, ret:0
[ 1546.022170] Enter:dla_handle_events, processor:RUBIK
[ 1546.022478] Exit:dla_handle_events, ret:0
[ 1623.356667] Enter:dla_handle_events, processor:BDMA
[ 1623.357093] Exit:dla_handle_events, ret:0
[ 1623.357354] Enter:dla_handle_events, processor:Convolution
[ 1623.357778] Handle cdma weight done event, processor Convolution group 0
[ 1623.358269] Handle cdma data done event, processor Convolution group 0
[ 1623.358746] Handle op complete event, processor Convolution group 0
[ 1623.359219] Enter:dla_op_completion processor Convolution group0
[ 1623.359670] Completed Convolution operation index 25 ROI 0
[ 1623.360104] 26 HWLs done, totally 52 layers
[ 1623.360464] Enter: dla_dequeue_operation
[ 1623.360797] Dequeue op from Convolution processor, index=29 ROI=0
[ 1623.361245] Enter: dla_submit_operation
[ 1623.361578] Prepare Convolution operation index 29 ROI 0 dep_count 2
[ 1623.362039] Enter: dla_prepare_operation
[ 1623.362437] processor:Convolution group:0, rdma_group:0 available
[ 1623.362892] Enter: dla_read_config
[ 1623.363268] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1623.363832] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1623.364394] *********************************************************
[ 1623.364698] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1623.364942] ---------------------------------------------------------
[ 1623.365245] weight_data         = [ dla_data_cube =>
[ 1623.365506]     type          = 0
[ 1623.365690]     address       = 1
[ 1623.365879]     offset        = a0000
[ 1623.366080]     width         = 1
[ 1623.366266]     height        = 1
[ 1623.366448]     channel       = 80
[ 1623.366637]     size          = 65536
[ 1623.366834]     line_stride   = 0
[ 1623.367018]     surf_stride   = 0
[ 1623.367207]     plane_stride  = 0
[ 1623.367389] ]
[ 1623.367410] wmb_data            = [ dla_data_cube =>
[ 1623.367747]     type          = 0
[ 1623.367926]     address       = 0
[ 1623.368111]     offset        = 0
[ 1623.368296]     width         = 0
[ 1623.368479]     height        = 0
[ 1623.368666]     channel       = 0
[ 1623.368850]     size          = 0
[ 1623.369033]     line_stride   = 0
[ 1623.369224]     surf_stride   = 0
[ 1623.369409]     plane_stride  = 0
[ 1623.369595] ]
[ 1623.369614] wgs_data            = [ dla_data_cube =>
[ 1623.369971]     type          = 0
[ 1623.370282]     address       = 0
[ 1623.370608]     offset        = 0
[ 1623.370918]     width         = 0
[ 1623.371226]     height        = 0
[ 1623.371524]     channel       = 0
[ 1623.371829]     size          = 0
[ 1623.372064]     line_stride   = 0
[ 1623.372248]     surf_stride   = 0
[ 1623.372439]     plane_stride  = 0
[ 1623.372614] ]
[ 1623.372632] src_data            = [ dla_data_cube =>
[ 1623.372971]     type          = 0
[ 1623.373159]     address       = 2
[ 1623.373340]     offset        = 600000
[ 1623.373551]     width         = 1c
[ 1623.373745]     height        = 1c
[ 1623.373930]     channel       = 80
[ 1623.374117]     size          = 200704
[ 1623.374310]     line_stride   = 896
[ 1623.374499]     surf_stride   = 25088
[ 1623.374691]     plane_stride  = 0
[ 1623.374904] ]
[ 1623.374923] dst_data            = [ dla_data_cube =>
[ 1623.375265]     type          = 2
[ 1623.375449]     address       = -1
[ 1623.375639]     offset        = 0
[ 1623.375821]     width         = e
[ 1623.376005]     height        = e
[ 1623.376186]     channel       = 100
[ 1623.376372]     size          = 100352
[ 1623.376574]     line_stride   = 448
[ 1623.376760]     surf_stride   = 6272
[ 1623.376951]     plane_stride  = 0
[ 1623.377125] ]
[ 1623.377146] offset_u            = 0
[ 1623.377424] in_line_uv_stride   = 0
[ 1623.377424] 
[ 1623.377689] *********************************************************
[ 1623.377982] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1623.378193] ---------------------------------------------------------
[ 1623.378480] conv_mode          = 0
[ 1623.378670] data_reuse         = 0
[ 1623.378854] weight_reuse       = 0
[ 1623.379039] skip_data_rls      = 0
[ 1623.379228] skip_weight_rls    = 0
[ 1623.379412] entry_per_slice    = 56
[ 1623.379606] data_format        = 36
[ 1623.379804] pixel_mapping      = 0
[ 1623.379990] fetch_grain        = 1
[ 1623.380178] batch              = 1
[ 1623.380361] weight_format      = 0
[ 1623.380546] data_bank          = 7
[ 1623.380730] weight_bank        = 2
[ 1623.380918] batch_stride       = 0
[ 1623.381105] post_extension     = 0
[ 1623.381289] pixel_override     = 1
[ 1623.381482] release            = 28
[ 1623.381683] input_width_csc    = 28
[ 1623.381872] input_height_csc   = 28
[ 1623.382069] input_channel_csc  = 128
[ 1623.382262] kernel_width_csc   = 1
[ 1623.382451] kernel_height_csc  = 1
[ 1623.382645] kernel_channel_csc = 128
[ 1623.382842] input_width_cmac   = 14
[ 1623.383031] input_height_cmac  = 14
[ 1623.383221] bytes_per_kernel   = 256
[ 1623.383419] mean_ry            = 0
[ 1623.383604] mean_gu            = 0
[ 1623.383793] mean_bv            = 0
[ 1623.383993] mean_ax            = 0
[ 1623.384185] mean_format        = 0
[ 1623.384373] conv_stride_x      = 2
[ 1623.384558] conv_stride_y      = 2
[ 1623.384745] pad_x_left         = 0
[ 1623.384934] pad_x_right        = 0
[ 1623.385121] pad_y_top          = 0
[ 1623.385309] pad_y_bottom       = 0
[ 1623.385496] dilation_x         = 1
[ 1623.385695] dilation_y         = 1
[ 1623.385882] pra_truncate       = 0
[ 1623.386065] in_precision       = 2
[ 1623.386254] out_precision      = 2
[ 1623.386443] pad_val            = 0
[ 1623.386623] in_cvt             =
[ 1623.386804] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1623.387078] out_cvt            =
[ 1623.387261] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1623.387536] 
[ 1623.387647] Exit: dla_read_config
[ 1623.387834] Exit: dla_prepare_operation status=0
[ 1623.388069] Enter: dla_program_operation
[ 1623.388280] Program Convolution operation index 29 ROI 0 Group[0]
[ 1623.388827] 
[ 1623.388827] entered processor_conv_program():
[ 1623.389127] conv getting weight_address:
[ 1623.389337] entered dla_get_dma_cube_address(index = 1, offset = 0xa0000):
[ 1623.389650] entered dla_get_dma_address(index = 1):
[ 1623.389885] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1623.390150] entered dla_read_dma_address(index = 1):
[ 1623.390405] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1623.390719] *phys_addr = 0xc4000000 + 0x0
[ 1623.390928] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1623.391253] back to dla_get_dma_cube_address: dst_ptr += 0xa0000
[ 1623.391531] conv weight_addr = 0xc40a0000
[ 1623.391531] 
[ 1623.391815] conv getting input_address:
[ 1623.392012] entered dla_read_input_address():
[ 1623.392233] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6291456)
[ 1623.392599] entered dla_get_dma_cube_address(index = 2, offset = 0x600000):
[ 1623.392908] entered dla_get_dma_address(index = 2):
[ 1623.393140] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1623.393397] entered dla_read_dma_address(index = 2):
[ 1623.393649] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1623.393954] *phys_addr = 0xc0800000 + 0x0
[ 1623.394170] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1623.394496] back to dla_get_dma_cube_address: dst_ptr += 0x600000
[ 1623.394775] conv input_addr = 0xc0e00000
[ 1623.394775] 
[ 1623.397726] no desc get due to index==-1
[ 1623.398026] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1623.398592] no desc get due to index==-1
[ 1623.398847] no desc get due to index==-1
[ 1623.399102] no desc get due to index==-1
[ 1623.399358] no desc get due to index==-1
[ 1623.399614] Enter: dla_op_programmed
[ 1623.399890] Update dependency operation index 31 ROI 0 DEP_COUNT=3
[ 1623.400256] Update dependency operation index 30 ROI 0 DEP_COUNT=1
[ 1623.400613] enable SDP in dla_update_dependency as depdency are resolved
[ 1623.400987] Enter: dla_enable_operation
[ 1623.401236] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1623.401745] Exit: dla_enable_operation status=0
[ 1623.402032] Exit: dla_op_programmed
[ 1623.402271] Exit: dla_program_operation status=0
[ 1623.402562] Exit: dla_submit_operation
[ 1623.402807] Exit: dla_dequeue_operation
[ 1623.403080] Exit:dla_op_completion processor Convolution group0 status=0
[ 1623.403456] Exit:dla_handle_events, ret:0
[ 1623.403718] Enter:dla_handle_events, processor:SDP
[ 1623.404017] Handle op complete event, processor SDP group 0
[ 1623.404353] Enter:dla_op_completion processor SDP group0
[ 1623.404673] Completed SDP operation index 26 ROI 0
[ 1623.404975] Update dependency operation index 27 ROI 0 DEP_COUNT=1
[ 1623.405332] enable Convolution in dla_update_dependency as depdency are resolved
[ 1623.405787] Enter: dla_enable_operation
[ 1623.406050] Enable Convolution operation index 27 ROI 0
[ 1623.406810] Enter: dla_op_enabled
[ 1623.407006] Exit: dla_op_enabled
[ 1623.407197] Exit: dla_enable_operation status=0
[ 1623.407426] 27 HWLs done, totally 52 layers
[ 1623.407655] Enter: dla_free_op_desc op desc index 25 ROI 0
[ 1623.407941] Exit: dla_free_op_desc
[ 1623.408131] Enter: dla_dequeue_operation
[ 1623.408344] Dequeue op from SDP processor, index=30 ROI=0
[ 1623.408607] Enter: dla_submit_operation
[ 1623.408814] Prepare SDP operation index 30 ROI 0 dep_count 0
[ 1623.409082] Enter: dla_prepare_operation
[ 1623.486696] processor:SDP group:0, rdma_group:0 available
[ 1623.487126] Enter: dla_read_config
[ 1623.487442] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1623.488170] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1623.488840] *********************************************************
[ 1623.489188] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1623.489454] ---------------------------------------------------------
[ 1623.489798] src_data            = [ dla_data_cube =>
[ 1623.490069]     type          = 2
[ 1623.490284]     address       = -1
[ 1623.490505]     offset        = 0
[ 1623.490725]     width         = e
[ 1623.490945]     height        = e
[ 1623.491161]     channel       = 100
[ 1623.491389]     size          = 100352
[ 1623.491638]     line_stride   = 448
[ 1623.491871]     surf_stride   = 6272
[ 1623.492099]     plane_stride  = 0
[ 1623.492317] ]
[ 1623.492341] x1_data             = [ dla_data_cube =>
[ 1623.492745]     type          = 0
[ 1623.492961]     address       = 1
[ 1623.493180]     offset        = 19000
[ 1623.493414]     width         = 1
[ 1623.493652]     height        = 1
[ 1623.493872]     channel       = 100
[ 1623.494101]     size          = 512
[ 1623.494334]     line_stride   = 32
[ 1623.494569]     surf_stride   = 32
[ 1623.494799]     plane_stride  = 0
[ 1623.495017] ]
[ 1623.495039] x2_data             = [ dla_data_cube =>
[ 1623.495451]     type          = 0
[ 1623.495679]     address       = 0
[ 1623.495898]     offset        = 0
[ 1623.496136]     width         = 0
[ 1623.496358]     height        = 0
[ 1623.496576]     channel       = 0
[ 1623.496810]     size          = 0
[ 1623.497027]     line_stride   = 0
[ 1623.497271]     surf_stride   = 0
[ 1623.497523]     plane_stride  = 0
[ 1623.497747] ]
[ 1623.497770] y_data              = [ dla_data_cube =>
[ 1623.498180]     type          = 0
[ 1623.498401]     address       = 0
[ 1623.498580]     offset        = 0
[ 1623.498754]     width         = 0
[ 1623.498928]     height        = 0
[ 1623.499102]     channel       = 0
[ 1623.499277]     size          = 0
[ 1623.499456]     line_stride   = 0
[ 1623.499636]     surf_stride   = 0
[ 1623.499817]     plane_stride  = 0
[ 1623.499998] ]
[ 1623.500015] dst_data            = [ dla_data_cube =>
[ 1623.500341]     type          = 0
[ 1623.500520]     address       = 2
[ 1623.500702]     offset        = 640000
[ 1623.500891]     width         = e
[ 1623.501069]     height        = e
[ 1623.501248]     channel       = 100
[ 1623.501435]     size          = 100352
[ 1623.501645]     line_stride   = 448
[ 1623.501840]     surf_stride   = 6272
[ 1623.502030]     plane_stride  = 0
[ 1623.502209] ]
[ 1623.502230] *********************************************************
[ 1623.502607] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1623.502817] ---------------------------------------------------------
[ 1623.503106] src_precision    = 2
[ 1623.503290] dst_precision    = 2
[ 1623.503472] lut_index        = -1
[ 1623.503653] out_cvt          =
[ 1623.503832] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1623.504104] conv_mode        = 0
[ 1623.504279] batch_num        = 1
[ 1623.504459] batch_stride     = 0
[ 1623.504630] x1_op            = [ dla_sdp_op =>
[ 1623.504848]     enable         = 1
[ 1623.505034]     alu_type       = 2
[ 1623.505215]     type           = 2
[ 1623.505393]     mode           = 1
[ 1623.505584]     act            = 0
[ 1623.505768]     shift_value    = 0
[ 1623.505951]     truncate       = 0
[ 1623.506138]     precision      = 2
[ 1623.506322]     alu_operand    = 0
[ 1623.506516]     mul_operand    = 1
[ 1623.506701] cvt.alu_cvt          =
[ 1623.506904] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.507175] cvt.mul_cvt          =
[ 1623.507371] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.507637] ]
[ 1623.507755] x2_op            = [ dla_sdp_op =>
[ 1623.507976]     enable         = 0
[ 1623.508154]     alu_type       = 0
[ 1623.508333]     type           = 0
[ 1623.508514]     mode           = 0
[ 1623.508694]     act            = 0
[ 1623.508875]     shift_value    = 0
[ 1623.509056]     truncate       = 0
[ 1623.509238]     precision      = 0
[ 1623.509420]     alu_operand    = 0
[ 1623.509616]     mul_operand    = 0
[ 1623.509801] cvt.alu_cvt          =
[ 1623.509983] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.510254] cvt.mul_cvt          =
[ 1623.510437] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.510708] ]
[ 1623.510826] y_op             = [ dla_sdp_op =>
[ 1623.511044]     enable         = 0
[ 1623.511231]     alu_type       = 0
[ 1623.511415]     type           = 0
[ 1623.511601]     mode           = 0
[ 1623.511784]     act            = 0
[ 1623.511974]     shift_value    = 0
[ 1623.512156]     truncate       = 0
[ 1623.512369]     precision      = 0
[ 1623.512555]     alu_operand    = 0
[ 1623.512740]     mul_operand    = 0
[ 1623.512917] cvt.alu_cvt          =
[ 1623.513099] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.513369] cvt.mul_cvt          =
[ 1623.513555] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1623.513825] ]
[ 1623.513950] Exit: dla_read_config
[ 1623.514133] Exit: dla_prepare_operation status=0
[ 1623.514362] Enter: dla_program_operation
[ 1623.514565] Program SDP operation index 30 ROI 0 Group[0]
[ 1623.516102] 
[ 1623.516102] entered processor_sdp_program():
[ 1623.516400] sdp skip getting src_addr
[ 1623.516400] 
[ 1623.516730] sdp getting dst_addr:
[ 1623.516958] entered dla_get_dma_cube_address(index = 2, offset = 0x640000):
[ 1623.517325] entered dla_get_dma_address(index = 2):
[ 1623.517575] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1623.517841] entered dla_read_dma_address(index = 2):
[ 1623.518083] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1623.518368] *phys_addr = 0xc0800000 + 0x0
[ 1623.518579] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1623.518890] back to dla_get_dma_cube_address: dst_ptr += 0x640000
[ 1623.519160] sdp dst_addr = 0xc0e40000
[ 1623.519160] 
[ 1623.519429] sdp getting x1_addr:
[ 1623.519609] entered dla_get_dma_cube_address(index = 1, offset = 0x19000):
[ 1623.519903] entered dla_get_dma_address(index = 1):
[ 1623.520129] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1623.520380] entered dla_read_dma_address(index = 1):
[ 1623.520612] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1623.520900] *phys_addr = 0xc4000000 + 0x0
[ 1623.521102] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1623.521414] back to dla_get_dma_cube_address: dst_ptr += 0x19000
[ 1623.521697] sdp x1_addr = 0xc4019000
[ 1623.521697] 
[ 1623.521955] sdp skip getting x2_addr
[ 1623.521955] 
[ 1623.522215] sdp skip getting y_addr
[ 1623.522215] 
[ 1623.531367] no desc get due to index==-1
[ 1623.531745] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1623.532675] no desc get due to index==-1
[ 1623.532994] no desc get due to index==-1
[ 1623.533303] no desc get due to index==-1
[ 1623.533628] Enter: dla_op_programmed
[ 1623.533936] Update dependency operation index 32 ROI 0 DEP_COUNT=2
[ 1623.534365] Exit: dla_op_programmed
[ 1623.534657] Exit: dla_program_operation status=0
[ 1623.534997] Enter: dla_enable_operation
[ 1623.535311] Enable SDP operation index 30 ROI 0
[ 1623.536641] Enter: dla_op_enabled
[ 1623.536944] Update dependency operation index 29 ROI 0 DEP_COUNT=2
[ 1623.537365] Exit: dla_op_enabled
[ 1623.537660] Exit: dla_enable_operation status=0
[ 1623.538004] Exit: dla_submit_operation
[ 1623.538359] Exit: dla_dequeue_operation
[ 1623.538681] Enter: dla_free_op_desc op desc index 26 ROI 0
[ 1623.539117] Exit: dla_free_op_desc
[ 1623.539422] Exit:dla_op_completion processor SDP group0 status=0
[ 1623.539763] Exit:dla_handle_events, ret:0
[ 1623.540012] Enter:dla_handle_events, processor:PDP
[ 1623.540292] Exit:dla_handle_events, ret:0
[ 1623.540541] Enter:dla_handle_events, processor:CDP
[ 1623.540826] Exit:dla_handle_events, ret:0
[ 1623.541073] Enter:dla_handle_events, processor:RUBIK
[ 1623.541364] Exit:dla_handle_events, ret:0
[ 1682.083837] Enter:dla_handle_events, processor:BDMA
[ 1682.084228] Exit:dla_handle_events, ret:0
[ 1682.084493] Enter:dla_handle_events, processor:Convolution
[ 1682.084885] Handle cdma weight done event, processor Convolution group 1
[ 1682.085386] Handle cdma data done event, processor Convolution group 1
[ 1682.085863] Handle op complete event, processor Convolution group 1
[ 1682.086306] Enter:dla_op_completion processor Convolution group1
[ 1682.086746] Completed Convolution operation index 27 ROI 0
[ 1682.087171] 28 HWLs done, totally 52 layers
[ 1682.087506] Enter: dla_dequeue_operation
[ 1682.087833] Dequeue op from Convolution processor, index=31 ROI=0
[ 1682.088259] Enter: dla_submit_operation
[ 1682.088579] Prepare Convolution operation index 31 ROI 0 dep_count 2
[ 1682.089014] Enter: dla_prepare_operation
[ 1682.089403] processor:Convolution group:1, rdma_group:0 available
[ 1682.089839] Enter: dla_read_config
[ 1682.090196] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1682.090937] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1682.091754] *********************************************************
[ 1682.092214] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1682.092574] ---------------------------------------------------------
[ 1682.093009] weight_data         = [ dla_data_cube =>
[ 1682.093388]     type          = 0
[ 1682.093687]     address       = 1
[ 1682.093907]     offset        = 300000
[ 1682.094094]     width         = 3
[ 1682.094268]     height        = 3
[ 1682.094438]     channel       = 80
[ 1682.094620]     size          = 589824
[ 1682.094811]     line_stride   = 0
[ 1682.094991]     surf_stride   = 0
[ 1682.095173]     plane_stride  = 0
[ 1682.095382] ]
[ 1682.095403] wmb_data            = [ dla_data_cube =>
[ 1682.095728]     type          = 0
[ 1682.095903]     address       = 0
[ 1682.096083]     offset        = 0
[ 1682.096256]     width         = 0
[ 1682.096433]     height        = 0
[ 1682.096609]     channel       = 0
[ 1682.096787]     size          = 0
[ 1682.096972]     line_stride   = 0
[ 1682.097155]     surf_stride   = 0
[ 1682.097338]     plane_stride  = 0
[ 1682.097523] ]
[ 1682.097541] wgs_data            = [ dla_data_cube =>
[ 1682.097866]     type          = 0
[ 1682.098041]     address       = 0
[ 1682.098215]     offset        = 0
[ 1682.098391]     width         = 0
[ 1682.098568]     height        = 0
[ 1682.098741]     channel       = 0
[ 1682.098916]     size          = 0
[ 1682.099104]     line_stride   = 0
[ 1682.099285]     surf_stride   = 0
[ 1682.099459]     plane_stride  = 0
[ 1682.099632] ]
[ 1682.099649] src_data            = [ dla_data_cube =>
[ 1682.099972]     type          = 0
[ 1682.100150]     address       = 2
[ 1682.100331]     offset        = 600000
[ 1682.100531]     width         = 1c
[ 1682.100716]     height        = 1c
[ 1682.100894]     channel       = 80
[ 1682.101078]     size          = 200704
[ 1682.101280]     line_stride   = 896
[ 1682.101467]     surf_stride   = 25088
[ 1682.101658]     plane_stride  = 0
[ 1682.101830] ]
[ 1682.101847] dst_data            = [ dla_data_cube =>
[ 1682.102163]     type          = 2
[ 1682.102340]     address       = -1
[ 1682.102519]     offset        = 0
[ 1682.102701]     width         = e
[ 1682.102880]     height        = e
[ 1682.103065]     channel       = 100
[ 1682.103249]     size          = 100352
[ 1682.103442]     line_stride   = 448
[ 1682.103627]     surf_stride   = 6272
[ 1682.103817]     plane_stride  = 0
[ 1682.103990] ]
[ 1682.104010] offset_u            = 0
[ 1682.104278] in_line_uv_stride   = 0
[ 1682.104278] 
[ 1682.104532] *********************************************************
[ 1682.104810] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1682.105018] ---------------------------------------------------------
[ 1682.105294] conv_mode          = 0
[ 1682.105478] data_reuse         = 0
[ 1682.105669] weight_reuse       = 0
[ 1682.105850] skip_data_rls      = 0
[ 1682.106029] skip_weight_rls    = 0
[ 1682.106218] entry_per_slice    = 56
[ 1682.106410] data_format        = 36
[ 1682.106595] pixel_mapping      = 0
[ 1682.106776] fetch_grain        = 1
[ 1682.106963] batch              = 1
[ 1682.107142] weight_format      = 0
[ 1682.107323] data_bank          = 7
[ 1682.107513] weight_bank        = 4
[ 1682.107697] batch_stride       = 0
[ 1682.107881] post_extension     = 0
[ 1682.108066] pixel_override     = 1
[ 1682.108232] release            = 28
[ 1682.108417] input_width_csc    = 28
[ 1682.108605] input_height_csc   = 28
[ 1682.108795] input_channel_csc  = 128
[ 1682.108987] kernel_width_csc   = 3
[ 1682.109177] kernel_height_csc  = 3
[ 1682.109357] kernel_channel_csc = 128
[ 1682.109549] input_width_cmac   = 14
[ 1682.109746] input_height_cmac  = 14
[ 1682.109968] bytes_per_kernel   = 2304
[ 1682.110158] mean_ry            = 0
[ 1682.110336] mean_gu            = 0
[ 1682.110543] mean_bv            = 0
[ 1682.110724] mean_ax            = 0
[ 1682.110905] mean_format        = 0
[ 1682.111084] conv_stride_x      = 2
[ 1682.111265] conv_stride_y      = 2
[ 1682.111444] pad_x_left         = 1
[ 1682.111624] pad_x_right        = 1
[ 1682.111804] pad_y_top          = 1
[ 1682.111982] pad_y_bottom       = 1
[ 1682.112158] dilation_x         = 1
[ 1682.112336] dilation_y         = 1
[ 1682.112516] pra_truncate       = 0
[ 1682.112694] in_precision       = 2
[ 1682.112872] out_precision      = 2
[ 1682.113051] pad_val            = 0
[ 1682.113227] in_cvt             =
[ 1682.113404] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1682.113671] out_cvt            =
[ 1682.113853] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1682.114116] 
[ 1682.114233] Exit: dla_read_config
[ 1682.114413] Exit: dla_prepare_operation status=0
[ 1682.114637] Enter: dla_program_operation
[ 1682.114842] Program Convolution operation index 31 ROI 0 Group[1]
[ 1682.115334] 
[ 1682.115334] entered processor_conv_program():
[ 1682.115623] conv getting weight_address:
[ 1682.115822] entered dla_get_dma_cube_address(index = 1, offset = 0x300000):
[ 1682.116117] entered dla_get_dma_address(index = 1):
[ 1682.116341] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1682.116588] entered dla_read_dma_address(index = 1):
[ 1682.116817] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1682.117119] *phys_addr = 0xc4000000 + 0x0
[ 1682.117321] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1682.117634] back to dla_get_dma_cube_address: dst_ptr += 0x300000
[ 1682.117902] conv weight_addr = 0xc4300000
[ 1682.117902] 
[ 1682.118171] conv getting input_address:
[ 1682.118356] entered dla_read_input_address():
[ 1682.118576] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6291456)
[ 1682.118922] entered dla_get_dma_cube_address(index = 2, offset = 0x600000):
[ 1682.119221] entered dla_get_dma_address(index = 2):
[ 1682.119438] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1682.119677] entered dla_read_dma_address(index = 2):
[ 1682.119914] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1682.120198] *phys_addr = 0xc0800000 + 0x0
[ 1682.120400] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1682.120703] back to dla_get_dma_cube_address: dst_ptr += 0x600000
[ 1682.120977] conv input_addr = 0xc0e00000
[ 1682.120977] 
[ 1682.123595] no desc get due to index==-1
[ 1682.123813] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1682.124256] no desc get due to index==-1
[ 1682.124456] no desc get due to index==-1
[ 1682.124658] no desc get due to index==-1
[ 1682.124853] no desc get due to index==-1
[ 1682.125056] Enter: dla_op_programmed
[ 1682.125252] Update dependency operation index 33 ROI 0 DEP_COUNT=3
[ 1682.125531] Update dependency operation index 32 ROI 0 DEP_COUNT=1
[ 1682.125803] enable SDP in dla_update_dependency as depdency are resolved
[ 1682.126101] Enter: dla_enable_operation
[ 1682.126299] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1682.126676] Exit: dla_enable_operation status=0
[ 1682.126895] Exit: dla_op_programmed
[ 1682.127082] Exit: dla_program_operation status=0
[ 1682.127307] Exit: dla_submit_operation
[ 1682.127500] Exit: dla_dequeue_operation
[ 1682.127704] Exit:dla_op_completion processor Convolution group1 status=0
[ 1682.127998] Exit:dla_handle_events, ret:0
[ 1682.128199] Enter:dla_handle_events, processor:SDP
[ 1682.128427] Handle op complete event, processor SDP group 1
[ 1682.128702] Enter:dla_op_completion processor SDP group1
[ 1682.128955] Completed SDP operation index 28 ROI 0
[ 1682.129194] Update dependency operation index 29 ROI 0 DEP_COUNT=1
[ 1682.129478] enable Convolution in dla_update_dependency as depdency are resolved
[ 1682.129831] Enter: dla_enable_operation
[ 1682.130033] Enable Convolution operation index 29 ROI 0
[ 1682.130694] Enter: dla_op_enabled
[ 1682.130886] Exit: dla_op_enabled
[ 1682.131061] Exit: dla_enable_operation status=0
[ 1682.131290] 29 HWLs done, totally 52 layers
[ 1682.131504] Enter: dla_free_op_desc op desc index 27 ROI 0
[ 1682.131791] Exit: dla_free_op_desc
[ 1682.131980] Enter: dla_dequeue_operation
[ 1682.132194] Dequeue op from SDP processor, index=32 ROI=0
[ 1682.132441] Enter: dla_submit_operation
[ 1682.132642] Prepare SDP operation index 32 ROI 0 dep_count 0
[ 1682.132900] Enter: dla_prepare_operation
[ 1682.155499] processor:SDP group:1, rdma_group:1 available
[ 1682.155825] Enter: dla_read_config
[ 1682.156071] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1682.156644] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1682.157445] *********************************************************
[ 1682.157936] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1682.158291] ---------------------------------------------------------
[ 1682.158721] src_data            = [ dla_data_cube =>
[ 1682.159092]     type          = 2
[ 1682.159377]     address       = -1
[ 1682.159658]     offset        = 0
[ 1682.159939]     width         = e
[ 1682.160216]     height        = e
[ 1682.160494]     channel       = 100
[ 1682.160780]     size          = 100352
[ 1682.161083]     line_stride   = 448
[ 1682.161374]     surf_stride   = 6272
[ 1682.161666]     plane_stride  = 0
[ 1682.162006] ]
[ 1682.162044] x1_data             = [ dla_data_cube =>
[ 1682.162703]     type          = 0
[ 1682.163058]     address       = 1
[ 1682.163415]     offset        = 1a000
[ 1682.163792]     width         = 1
[ 1682.164147]     height        = 1
[ 1682.164495]     channel       = 100
[ 1682.164859]     size          = 512
[ 1682.165238]     line_stride   = 32
[ 1682.165606]     surf_stride   = 32
[ 1682.165965]     plane_stride  = 0
[ 1682.166318] ]
[ 1682.166354] x2_data             = [ dla_data_cube =>
[ 1682.167005]     type          = 0
[ 1682.167356]     address       = 0
[ 1682.167710]     offset        = 0
[ 1682.168064]     width         = 0
[ 1682.168414]     height        = 0
[ 1682.168766]     channel       = 0
[ 1682.169121]     size          = 0
[ 1682.169476]     line_stride   = 0
[ 1682.169832]     surf_stride   = 0
[ 1682.170006]     plane_stride  = 0
[ 1682.170176] ]
[ 1682.170193] y_data              = [ dla_data_cube =>
[ 1682.170505]     type          = 0
[ 1682.170674]     address       = 0
[ 1682.170846]     offset        = 0
[ 1682.171031]     width         = 0
[ 1682.171230]     height        = 0
[ 1682.171401]     channel       = 0
[ 1682.171576]     size          = 0
[ 1682.171747]     line_stride   = 0
[ 1682.171919]     surf_stride   = 0
[ 1682.172099]     plane_stride  = 0
[ 1682.172268] ]
[ 1682.172285] dst_data            = [ dla_data_cube =>
[ 1682.172602]     type          = 0
[ 1682.172781]     address       = 2
[ 1682.172958]     offset        = 660000
[ 1682.173144]     width         = e
[ 1682.173320]     height        = e
[ 1682.173495]     channel       = 100
[ 1682.173679]     size          = 100352
[ 1682.173865]     line_stride   = 448
[ 1682.174050]     surf_stride   = 6272
[ 1682.174231]     plane_stride  = 0
[ 1682.174403] ]
[ 1682.174423] *********************************************************
[ 1682.174785] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1682.174988] ---------------------------------------------------------
[ 1682.175268] src_precision    = 2
[ 1682.175439] dst_precision    = 2
[ 1682.175617] lut_index        = -1
[ 1682.175791] out_cvt          =
[ 1682.175965] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1682.176227] conv_mode        = 0
[ 1682.176401] batch_num        = 1
[ 1682.176573] batch_stride     = 0
[ 1682.176773] x1_op            = [ dla_sdp_op =>
[ 1682.176992]     enable         = 1
[ 1682.177275]     alu_type       = 2
[ 1682.177585]     type           = 2
[ 1682.177863]     mode           = 1
[ 1682.178144]     act            = 1
[ 1682.178417]     shift_value    = 0
[ 1682.178695]     truncate       = 0
[ 1682.178969]     precision      = 2
[ 1682.179239]     alu_operand    = 0
[ 1682.179516]     mul_operand    = 1
[ 1682.179775] cvt.alu_cvt          =
[ 1682.180063] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.180457] cvt.mul_cvt          =
[ 1682.180743] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.181147] ]
[ 1682.181325] x2_op            = [ dla_sdp_op =>
[ 1682.181676]     enable         = 0
[ 1682.181951]     alu_type       = 0
[ 1682.182227]     type           = 0
[ 1682.182559]     mode           = 0
[ 1682.182844]     act            = 0
[ 1682.183114]     shift_value    = 0
[ 1682.183394]     truncate       = 0
[ 1682.183662]     precision      = 0
[ 1682.183851]     alu_operand    = 0
[ 1682.184055]     mul_operand    = 0
[ 1682.184254] cvt.alu_cvt          =
[ 1682.184436] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.184705] cvt.mul_cvt          =
[ 1682.184886] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.185148] ]
[ 1682.185266] y_op             = [ dla_sdp_op =>
[ 1682.185485]     enable         = 0
[ 1682.185675]     alu_type       = 0
[ 1682.185863]     type           = 0
[ 1682.186048]     mode           = 0
[ 1682.186228]     act            = 0
[ 1682.186410]     shift_value    = 0
[ 1682.186599]     truncate       = 0
[ 1682.186784]     precision      = 0
[ 1682.186966]     alu_operand    = 0
[ 1682.187147]     mul_operand    = 0
[ 1682.187321] cvt.alu_cvt          =
[ 1682.187500] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.187758] cvt.mul_cvt          =
[ 1682.187942] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1682.188205] ]
[ 1682.188330] Exit: dla_read_config
[ 1682.188518] Exit: dla_prepare_operation status=0
[ 1682.188751] Enter: dla_program_operation
[ 1682.188961] Program SDP operation index 32 ROI 0 Group[1]
[ 1682.190581] 
[ 1682.190581] entered processor_sdp_program():
[ 1682.190932] sdp skip getting src_addr
[ 1682.190932] 
[ 1682.191263] sdp getting dst_addr:
[ 1682.191490] entered dla_get_dma_cube_address(index = 2, offset = 0x660000):
[ 1682.191888] entered dla_get_dma_address(index = 2):
[ 1682.192122] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1682.192374] entered dla_read_dma_address(index = 2):
[ 1682.192612] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1682.192904] *phys_addr = 0xc0800000 + 0x0
[ 1682.193113] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1682.193424] back to dla_get_dma_cube_address: dst_ptr += 0x660000
[ 1682.193710] sdp dst_addr = 0xc0e60000
[ 1682.193710] 
[ 1682.193974] sdp getting x1_addr:
[ 1682.194153] entered dla_get_dma_cube_address(index = 1, offset = 0x1a000):
[ 1682.194446] entered dla_get_dma_address(index = 1):
[ 1682.194682] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1682.194940] entered dla_read_dma_address(index = 1):
[ 1682.195175] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1682.195464] *phys_addr = 0xc4000000 + 0x0
[ 1682.195670] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1682.195969] back to dla_get_dma_cube_address: dst_ptr += 0x1a000
[ 1682.196233] sdp x1_addr = 0xc401a000
[ 1682.196233] 
[ 1682.196486] sdp skip getting x2_addr
[ 1682.196486] 
[ 1682.196734] sdp skip getting y_addr
[ 1682.196734] 
[ 1682.205631] no desc get due to index==-1
[ 1682.205912] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1682.206452] no desc get due to index==-1
[ 1682.206700] no desc get due to index==-1
[ 1682.206907] no desc get due to index==-1
[ 1682.207104] Enter: dla_op_programmed
[ 1682.207298] Update dependency operation index 34 ROI 0 DEP_COUNT=2
[ 1682.207569] Exit: dla_op_programmed
[ 1682.207755] Exit: dla_program_operation status=0
[ 1682.207974] Enter: dla_enable_operation
[ 1682.208177] Enable SDP operation index 32 ROI 0
[ 1682.209313] Enter: dla_op_enabled
[ 1682.209564] Update dependency operation index 31 ROI 0 DEP_COUNT=2
[ 1682.209900] Exit: dla_op_enabled
[ 1682.210121] Exit: dla_enable_operation status=0
[ 1682.210395] Exit: dla_submit_operation
[ 1682.210634] Exit: dla_dequeue_operation
[ 1682.210887] Enter: dla_free_op_desc op desc index 28 ROI 0
[ 1682.211237] Exit: dla_free_op_desc
[ 1682.211472] Exit:dla_op_completion processor SDP group1 status=0
[ 1682.211806] Exit:dla_handle_events, ret:0
[ 1682.212053] Enter:dla_handle_events, processor:PDP
[ 1682.212331] Exit:dla_handle_events, ret:0
[ 1682.212577] Enter:dla_handle_events, processor:CDP
[ 1682.212858] Exit:dla_handle_events, ret:0
[ 1682.213106] Enter:dla_handle_events, processor:RUBIK
[ 1682.213398] Exit:dla_handle_events, ret:0
[ 1688.099833] Enter:dla_handle_events, processor:BDMA
[ 1688.100238] Exit:dla_handle_events, ret:0
[ 1688.100499] Enter:dla_handle_events, processor:Convolution
[ 1688.100880] Handle cdma weight done event, processor Convolution group 0
[ 1688.101454] Handle cdma data done event, processor Convolution group 0
[ 1688.101995] Handle op complete event, processor Convolution group 0
[ 1688.102494] Enter:dla_op_completion processor Convolution group0
[ 1688.102977] Completed Convolution operation index 29 ROI 0
[ 1688.103438] 30 HWLs done, totally 52 layers
[ 1688.103811] Enter: dla_dequeue_operation
[ 1688.104164] Dequeue op from Convolution processor, index=33 ROI=0
[ 1688.104663] Enter: dla_submit_operation
[ 1688.104995] Prepare Convolution operation index 33 ROI 0 dep_count 2
[ 1688.105435] Enter: dla_prepare_operation
[ 1688.105863] processor:Convolution group:0, rdma_group:0 available
[ 1688.106378] Enter: dla_read_config
[ 1688.106787] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1688.107682] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1688.108627] *********************************************************
[ 1688.109137] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1688.109549] ---------------------------------------------------------
[ 1688.109953] weight_data         = [ dla_data_cube =>
[ 1688.110216]     type          = 0
[ 1688.110445]     address       = 1
[ 1688.110712]     offset        = 400000
[ 1688.111026]     width         = 3
[ 1688.111336]     height        = 3
[ 1688.111631]     channel       = 100
[ 1688.111846]     size          = 1179648
[ 1688.112074]     line_stride   = 0
[ 1688.112274]     surf_stride   = 0
[ 1688.112476]     plane_stride  = 0
[ 1688.112673] ]
[ 1688.112694] wmb_data            = [ dla_data_cube =>
[ 1688.113067]     type          = 0
[ 1688.113267]     address       = 0
[ 1688.113465]     offset        = 0
[ 1688.113672]     width         = 0
[ 1688.113880]     height        = 0
[ 1688.114078]     channel       = 0
[ 1688.114281]     size          = 0
[ 1688.114476]     line_stride   = 0
[ 1688.114675]     surf_stride   = 0
[ 1688.114879]     plane_stride  = 0
[ 1688.115082] ]
[ 1688.115101] wgs_data            = [ dla_data_cube =>
[ 1688.115475]     type          = 0
[ 1688.115680]     address       = 0
[ 1688.115885]     offset        = 0
[ 1688.116088]     width         = 0
[ 1688.116293]     height        = 0
[ 1688.116494]     channel       = 0
[ 1688.116700]     size          = 0
[ 1688.116898]     line_stride   = 0
[ 1688.117116]     surf_stride   = 0
[ 1688.117312]     plane_stride  = 0
[ 1688.117521] ]
[ 1688.117540] src_data            = [ dla_data_cube =>
[ 1688.117911]     type          = 0
[ 1688.118108]     address       = 2
[ 1688.118312]     offset        = 660000
[ 1688.118532]     width         = e
[ 1688.118732]     height        = e
[ 1688.118932]     channel       = 100
[ 1688.119128]     size          = 100352
[ 1688.119342]     line_stride   = 448
[ 1688.119552]     surf_stride   = 6272
[ 1688.119765]     plane_stride  = 0
[ 1688.119957] ]
[ 1688.119974] dst_data            = [ dla_data_cube =>
[ 1688.120339]     type          = 2
[ 1688.120547]     address       = -1
[ 1688.120753]     offset        = 0
[ 1688.120955]     width         = e
[ 1688.121159]     height        = e
[ 1688.121362]     channel       = 100
[ 1688.121580]     size          = 100352
[ 1688.121811]     line_stride   = 448
[ 1688.122029]     surf_stride   = 6272
[ 1688.122250]     plane_stride  = 0
[ 1688.122459] ]
[ 1688.122479] offset_u            = 0
[ 1688.122785] in_line_uv_stride   = 0
[ 1688.122785] 
[ 1688.123083] *********************************************************
[ 1688.123414] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1688.123654] ---------------------------------------------------------
[ 1688.123979] conv_mode          = 0
[ 1688.124189] data_reuse         = 0
[ 1688.124395] weight_reuse       = 0
[ 1688.124608] skip_data_rls      = 0
[ 1688.124833] skip_weight_rls    = 0
[ 1688.125041] entry_per_slice    = 56
[ 1688.125260] data_format        = 36
[ 1688.125506] pixel_mapping      = 0
[ 1688.125792] fetch_grain        = 1
[ 1688.126011] batch              = 1
[ 1688.126226] weight_format      = 0
[ 1688.126435] data_bank          = 4
[ 1688.126655] weight_bank        = 6
[ 1688.126862] batch_stride       = 0
[ 1688.127072] post_extension     = 0
[ 1688.127278] pixel_override     = 1
[ 1688.127485] release            = 14
[ 1688.127694] input_width_csc    = 14
[ 1688.127909] input_height_csc   = 14
[ 1688.128143] input_channel_csc  = 256
[ 1688.128480] kernel_width_csc   = 3
[ 1688.128724] kernel_height_csc  = 3
[ 1688.128953] kernel_channel_csc = 256
[ 1688.129166] input_width_cmac   = 14
[ 1688.129374] input_height_cmac  = 14
[ 1688.129592] bytes_per_kernel   = 4608
[ 1688.129818] mean_ry            = 0
[ 1688.130032] mean_gu            = 0
[ 1688.130217] mean_bv            = 0
[ 1688.130400] mean_ax            = 0
[ 1688.130583] mean_format        = 0
[ 1688.130766] conv_stride_x      = 1
[ 1688.130959] conv_stride_y      = 1
[ 1688.131151] pad_x_left         = 1
[ 1688.131332] pad_x_right        = 1
[ 1688.131523] pad_y_top          = 1
[ 1688.131705] pad_y_bottom       = 1
[ 1688.131884] dilation_x         = 1
[ 1688.132064] dilation_y         = 1
[ 1688.132250] pra_truncate       = 0
[ 1688.132435] in_precision       = 2
[ 1688.132619] out_precision      = 2
[ 1688.132798] pad_val            = 0
[ 1688.132973] in_cvt             =
[ 1688.133155] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1688.133429] out_cvt            =
[ 1688.133636] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1688.133956] 
[ 1688.134086] Exit: dla_read_config
[ 1688.134303] Exit: dla_prepare_operation status=0
[ 1688.134575] Enter: dla_program_operation
[ 1688.134810] Program Convolution operation index 33 ROI 0 Group[0]
[ 1688.135373] 
[ 1688.135373] entered processor_conv_program():
[ 1688.135720] conv getting weight_address:
[ 1688.135957] entered dla_get_dma_cube_address(index = 1, offset = 0x400000):
[ 1688.136326] entered dla_get_dma_address(index = 1):
[ 1688.136598] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1688.136883] entered dla_read_dma_address(index = 1):
[ 1688.137154] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1688.137487] *phys_addr = 0xc4000000 + 0x0
[ 1688.137733] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1688.138102] back to dla_get_dma_cube_address: dst_ptr += 0x400000
[ 1688.138422] conv weight_addr = 0xc4400000
[ 1688.138422] 
[ 1688.138741] conv getting input_address:
[ 1688.138969] entered dla_read_input_address():
[ 1688.139220] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6684672)
[ 1688.139643] entered dla_get_dma_cube_address(index = 2, offset = 0x660000):
[ 1688.139991] entered dla_get_dma_address(index = 2):
[ 1688.140259] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1688.140556] entered dla_read_dma_address(index = 2):
[ 1688.140837] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1688.141191] *phys_addr = 0xc0800000 + 0x0
[ 1688.141439] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1688.141812] back to dla_get_dma_cube_address: dst_ptr += 0x660000
[ 1688.142144] conv input_addr = 0xc0e60000
[ 1688.142144] 
[ 1688.145136] no desc get due to index==-1
[ 1688.145458] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1688.146337] no desc get due to index==-1
[ 1688.146774] no desc get due to index==-1
[ 1688.147210] no desc get due to index==-1
[ 1688.147641] no desc get due to index==-1
[ 1688.148101] Enter: dla_op_programmed
[ 1688.148514] Update dependency operation index 35 ROI 0 DEP_COUNT=3
[ 1688.149150] Update dependency operation index 34 ROI 0 DEP_COUNT=1
[ 1688.149811] enable SDP in dla_update_dependency as depdency are resolved
[ 1688.150481] Enter: dla_enable_operation
[ 1688.150938] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1688.151730] Exit: dla_enable_operation status=0
[ 1688.152178] Exit: dla_op_programmed
[ 1688.152554] Exit: dla_program_operation status=0
[ 1688.153001] Exit: dla_submit_operation
[ 1688.153393] Exit: dla_dequeue_operation
[ 1688.153820] Exit:dla_op_completion processor Convolution group0 status=0
[ 1688.154141] Exit:dla_handle_events, ret:0
[ 1688.154335] Enter:dla_handle_events, processor:SDP
[ 1688.154570] Handle op complete event, processor SDP group 0
[ 1688.154857] Enter:dla_op_completion processor SDP group0
[ 1688.155121] Completed SDP operation index 30 ROI 0
[ 1688.155350] Update dependency operation index 31 ROI 0 DEP_COUNT=1
[ 1688.155620] enable Convolution in dla_update_dependency as depdency are resolved
[ 1688.155954] Enter: dla_enable_operation
[ 1688.156203] Enable Convolution operation index 31 ROI 0
[ 1688.156964] Enter: dla_op_enabled
[ 1688.157182] Exit: dla_op_enabled
[ 1688.157374] Exit: dla_enable_operation status=0
[ 1688.157627] 31 HWLs done, totally 52 layers
[ 1688.157866] Enter: dla_free_op_desc op desc index 29 ROI 0
[ 1688.158186] Exit: dla_free_op_desc
[ 1688.158416] Enter: dla_dequeue_operation
[ 1688.158635] Dequeue op from SDP processor, index=34 ROI=0
[ 1688.158937] Enter: dla_submit_operation
[ 1688.159141] Prepare SDP operation index 34 ROI 0 dep_count 0
[ 1688.159402] Enter: dla_prepare_operation
[ 1688.200223] processor:SDP group:0, rdma_group:0 available
[ 1688.200574] Enter: dla_read_config
[ 1688.200819] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1688.201395] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1688.202043] *********************************************************
[ 1688.202396] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1688.202671] ---------------------------------------------------------
[ 1688.203018] src_data            = [ dla_data_cube =>
[ 1688.203309]     type          = 2
[ 1688.203530]     address       = -1
[ 1688.203753]     offset        = 0
[ 1688.203972]     width         = e
[ 1688.204188]     height        = e
[ 1688.204408]     channel       = 100
[ 1688.204635]     size          = 100352
[ 1688.204875]     line_stride   = 448
[ 1688.205102]     surf_stride   = 6272
[ 1688.205329]     plane_stride  = 0
[ 1688.205554] ]
[ 1688.205578] x1_data             = [ dla_data_cube =>
[ 1688.205987]     type          = 0
[ 1688.206210]     address       = 1
[ 1688.206432]     offset        = 1b000
[ 1688.206667]     width         = 1
[ 1688.206891]     height        = 1
[ 1688.207107]     channel       = 100
[ 1688.207334]     size          = 512
[ 1688.207564]     line_stride   = 32
[ 1688.207793]     surf_stride   = 32
[ 1688.208015]     plane_stride  = 0
[ 1688.208275] ]
[ 1688.208306] x2_data             = [ dla_data_cube =>
[ 1688.208716]     type          = 0
[ 1688.208945]     address       = 2
[ 1688.209181]     offset        = 640000
[ 1688.209416]     width         = e
[ 1688.209664]     height        = e
[ 1688.209864]     channel       = 100
[ 1688.210063]     size          = 100352
[ 1688.210269]     line_stride   = 448
[ 1688.210456]     surf_stride   = 6272
[ 1688.210644]     plane_stride  = 0
[ 1688.210822] ]
[ 1688.210840] y_data              = [ dla_data_cube =>
[ 1688.211167]     type          = 0
[ 1688.211346]     address       = 0
[ 1688.211519]     offset        = 0
[ 1688.211696]     width         = 0
[ 1688.211876]     height        = 0
[ 1688.212054]     channel       = 0
[ 1688.212229]     size          = 0
[ 1688.212408]     line_stride   = 0
[ 1688.212585]     surf_stride   = 0
[ 1688.212763]     plane_stride  = 0
[ 1688.212942] ]
[ 1688.212960] dst_data            = [ dla_data_cube =>
[ 1688.213280]     type          = 0
[ 1688.213461]     address       = 2
[ 1688.213650]     offset        = 680000
[ 1688.213849]     width         = e
[ 1688.214023]     height        = e
[ 1688.214199]     channel       = 100
[ 1688.214381]     size          = 100352
[ 1688.214577]     line_stride   = 448
[ 1688.214763]     surf_stride   = 6272
[ 1688.214951]     plane_stride  = 0
[ 1688.215128] ]
[ 1688.215148] *********************************************************
[ 1688.215524] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1688.215737] ---------------------------------------------------------
[ 1688.216021] src_precision    = 2
[ 1688.216200] dst_precision    = 2
[ 1688.216379] lut_index        = -1
[ 1688.216569] out_cvt          =
[ 1688.216750] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1688.217018] conv_mode        = 0
[ 1688.217198] batch_num        = 1
[ 1688.217379] batch_stride     = 0
[ 1688.217559] x1_op            = [ dla_sdp_op =>
[ 1688.217811]     enable         = 1
[ 1688.217996]     alu_type       = 2
[ 1688.218180]     type           = 2
[ 1688.218358]     mode           = 1
[ 1688.218538]     act            = 0
[ 1688.218706]     shift_value    = 0
[ 1688.218886]     truncate       = 0
[ 1688.219069]     precision      = 2
[ 1688.219254]     alu_operand    = 0
[ 1688.219436]     mul_operand    = 1
[ 1688.219616] cvt.alu_cvt          =
[ 1688.219812] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.220071] cvt.mul_cvt          =
[ 1688.220259] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.220525] ]
[ 1688.220643] x2_op            = [ dla_sdp_op =>
[ 1688.220862]     enable         = 1
[ 1688.221043]     alu_type       = 2
[ 1688.221227]     type           = 2
[ 1688.221411]     mode           = 2
[ 1688.221605]     act            = 1
[ 1688.221789]     shift_value    = 0
[ 1688.221970]     truncate       = 0
[ 1688.222154]     precision      = 2
[ 1688.222336]     alu_operand    = 0
[ 1688.222519]     mul_operand    = 1
[ 1688.222695] cvt.alu_cvt          =
[ 1688.222876] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.223144] cvt.mul_cvt          =
[ 1688.223326] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.223591] ]
[ 1688.223711] y_op             = [ dla_sdp_op =>
[ 1688.223928]     enable         = 0
[ 1688.224107]     alu_type       = 0
[ 1688.224287]     type           = 0
[ 1688.224467]     mode           = 0
[ 1688.224647]     act            = 0
[ 1688.224839]     shift_value    = 0
[ 1688.225065]     truncate       = 0
[ 1688.225249]     precision      = 0
[ 1688.225428]     alu_operand    = 0
[ 1688.225618]     mul_operand    = 0
[ 1688.225792] cvt.alu_cvt          =
[ 1688.225979] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.226252] cvt.mul_cvt          =
[ 1688.226466] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1688.226738] ]
[ 1688.226865] Exit: dla_read_config
[ 1688.227050] Exit: dla_prepare_operation status=0
[ 1688.227268] Enter: dla_program_operation
[ 1688.227501] Program SDP operation index 34 ROI 0 Group[0]
[ 1688.228871] 
[ 1688.228871] entered processor_sdp_program():
[ 1688.229172] sdp skip getting src_addr
[ 1688.229172] 
[ 1688.229440] sdp getting dst_addr:
[ 1688.229635] entered dla_get_dma_cube_address(index = 2, offset = 0x680000):
[ 1688.229940] entered dla_get_dma_address(index = 2):
[ 1688.230174] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1688.230435] entered dla_read_dma_address(index = 2):
[ 1688.230671] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1688.230963] *phys_addr = 0xc0800000 + 0x0
[ 1688.231176] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1688.231490] back to dla_get_dma_cube_address: dst_ptr += 0x680000
[ 1688.231762] sdp dst_addr = 0xc0e80000
[ 1688.231762] 
[ 1688.232029] sdp getting x1_addr:
[ 1688.232207] entered dla_get_dma_cube_address(index = 1, offset = 0x1b000):
[ 1688.232508] entered dla_get_dma_address(index = 1):
[ 1688.232738] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1688.232995] entered dla_read_dma_address(index = 1):
[ 1688.233225] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1688.233522] *phys_addr = 0xc4000000 + 0x0
[ 1688.233728] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1688.234038] back to dla_get_dma_cube_address: dst_ptr += 0x1b000
[ 1688.234306] sdp x1_addr = 0xc401b000
[ 1688.234306] 
[ 1688.234561] sdp getting x2_addr:
[ 1688.234741] entered dla_get_dma_cube_address(index = 2, offset = 0x640000):
[ 1688.235039] entered dla_get_dma_address(index = 2):
[ 1688.235265] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1688.235512] entered dla_read_dma_address(index = 2):
[ 1688.235745] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1688.236032] *phys_addr = 0xc0800000 + 0x0
[ 1688.236236] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1688.236535] back to dla_get_dma_cube_address: dst_ptr += 0x640000
[ 1688.236807] sdp x1_addr = 0xc0e40000
[ 1688.236807] 
[ 1688.237066] sdp skip getting y_addr
[ 1688.237066] 
[ 1688.247265] no desc get due to index==-1
[ 1688.247553] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1688.248075] no desc get due to index==-1
[ 1688.248355] no desc get due to index==-1
[ 1688.248596] no desc get due to index==-1
[ 1688.248847] Enter: dla_op_programmed
[ 1688.249089] Update dependency operation index 36 ROI 0 DEP_COUNT=2
[ 1688.249427] Exit: dla_op_programmed
[ 1688.249663] Exit: dla_program_operation status=0
[ 1688.249932] Enter: dla_enable_operation
[ 1688.250177] Enable SDP operation index 34 ROI 0
[ 1688.252977] Enter: dla_op_enabled
[ 1688.253213] Update dependency operation index 33 ROI 0 DEP_COUNT=2
[ 1688.253560] Exit: dla_op_enabled
[ 1688.253774] Exit: dla_enable_operation status=0
[ 1688.254040] Exit: dla_submit_operation
[ 1688.254290] Exit: dla_dequeue_operation
[ 1688.254545] Enter: dla_free_op_desc op desc index 30 ROI 0
[ 1688.254891] Exit: dla_free_op_desc
[ 1688.255129] Exit:dla_op_completion processor SDP group0 status=0
[ 1688.255471] Exit:dla_handle_events, ret:0
[ 1688.255718] Enter:dla_handle_events, processor:PDP
[ 1688.256000] Exit:dla_handle_events, ret:0
[ 1688.256248] Enter:dla_handle_events, processor:CDP
[ 1688.256532] Exit:dla_handle_events, ret:0
[ 1688.256779] Enter:dla_handle_events, processor:RUBIK
[ 1688.257067] Exit:dla_handle_events, ret:0
[ 1728.345896] Enter:dla_handle_events, processor:BDMA
[ 1728.346490] Exit:dla_handle_events, ret:0
[ 1728.347022] Enter:dla_handle_events, processor:Convolution
[ 1728.347582] Handle cdma weight done event, processor Convolution group 1
[ 1728.348196] Handle cdma data done event, processor Convolution group 1
[ 1728.348783] Handle op complete event, processor Convolution group 1
[ 1728.349417] Enter:dla_op_completion processor Convolution group1
[ 1728.350003] Completed Convolution operation index 31 ROI 0
[ 1728.350305] 32 HWLs done, totally 52 layers
[ 1728.350510] Enter: dla_dequeue_operation
[ 1728.350706] Dequeue op from Convolution processor, index=35 ROI=0
[ 1728.350974] Enter: dla_submit_operation
[ 1728.351171] Prepare Convolution operation index 35 ROI 0 dep_count 2
[ 1728.351444] Enter: dla_prepare_operation
[ 1728.351755] processor:Convolution group:1, rdma_group:0 available
[ 1728.352025] Enter: dla_read_config
[ 1728.352252] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1728.352725] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1728.353232] *********************************************************
[ 1728.353526] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1728.353747] ---------------------------------------------------------
[ 1728.354022] weight_data         = [ dla_data_cube =>
[ 1728.354256]     type          = 0
[ 1728.354436]     address       = 1
[ 1728.354616]     offset        = 600000
[ 1728.354810]     width         = 3
[ 1728.354989]     height        = 3
[ 1728.355163]     channel       = 100
[ 1728.355346]     size          = 1179648
[ 1728.355539]     line_stride   = 0
[ 1728.355718]     surf_stride   = 0
[ 1728.355895]     plane_stride  = 0
[ 1728.356066] ]
[ 1728.356086] wmb_data            = [ dla_data_cube =>
[ 1728.356408]     type          = 0
[ 1728.356584]     address       = 0
[ 1728.356762]     offset        = 0
[ 1728.356940]     width         = 0
[ 1728.357114]     height        = 0
[ 1728.357289]     channel       = 0
[ 1728.357467]     size          = 0
[ 1728.357649]     line_stride   = 0
[ 1728.357825]     surf_stride   = 0
[ 1728.358003]     plane_stride  = 0
[ 1728.358172] ]
[ 1728.358189] wgs_data            = [ dla_data_cube =>
[ 1728.358604]     type          = 0
[ 1728.358913]     address       = 0
[ 1728.359227]     offset        = 0
[ 1728.359522]     width         = 0
[ 1728.359821]     height        = 0
[ 1728.360106]     channel       = 0
[ 1728.360399]     size          = 0
[ 1728.360685]     line_stride   = 0
[ 1728.360973]     surf_stride   = 0
[ 1728.361265]     plane_stride  = 0
[ 1728.361559] ]
[ 1728.361591] src_data            = [ dla_data_cube =>
[ 1728.362161]     type          = 0
[ 1728.362416]     address       = 2
[ 1728.362647]     offset        = 680000
[ 1728.362847]     width         = e
[ 1728.363029]     height        = e
[ 1728.363203]     channel       = 100
[ 1728.363384]     size          = 100352
[ 1728.363575]     line_stride   = 448
[ 1728.363764]     surf_stride   = 6272
[ 1728.363955]     plane_stride  = 0
[ 1728.364125] ]
[ 1728.364142] dst_data            = [ dla_data_cube =>
[ 1728.364462]     type          = 2
[ 1728.364643]     address       = -1
[ 1728.364824]     offset        = 0
[ 1728.364999]     width         = e
[ 1728.365173]     height        = e
[ 1728.365352]     channel       = 100
[ 1728.365547]     size          = 100352
[ 1728.365735]     line_stride   = 448
[ 1728.365918]     surf_stride   = 6272
[ 1728.366102]     plane_stride  = 0
[ 1728.366269] ]
[ 1728.366289] offset_u            = 0
[ 1728.366551] in_line_uv_stride   = 0
[ 1728.366551] 
[ 1728.366800] *********************************************************
[ 1728.367078] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1728.367284] ---------------------------------------------------------
[ 1728.367561] conv_mode          = 0
[ 1728.367743] data_reuse         = 0
[ 1728.367924] weight_reuse       = 0
[ 1728.368107] skip_data_rls      = 0
[ 1728.368290] skip_weight_rls    = 0
[ 1728.368470] entry_per_slice    = 56
[ 1728.368653] data_format        = 36
[ 1728.368841] pixel_mapping      = 0
[ 1728.369020] fetch_grain        = 1
[ 1728.369202] batch              = 1
[ 1728.369380] weight_format      = 0
[ 1728.369568] data_bank          = 4
[ 1728.369751] weight_bank        = 6
[ 1728.369934] batch_stride       = 0
[ 1728.370117] post_extension     = 0
[ 1728.370295] pixel_override     = 1
[ 1728.370481] release            = 14
[ 1728.370664] input_width_csc    = 14
[ 1728.370848] input_height_csc   = 14
[ 1728.371034] input_channel_csc  = 256
[ 1728.371223] kernel_width_csc   = 3
[ 1728.371402] kernel_height_csc  = 3
[ 1728.371583] kernel_channel_csc = 256
[ 1728.371767] input_width_cmac   = 14
[ 1728.371949] input_height_cmac  = 14
[ 1728.372134] bytes_per_kernel   = 4608
[ 1728.372324] mean_ry            = 0
[ 1728.372509] mean_gu            = 0
[ 1728.372691] mean_bv            = 0
[ 1728.372872] mean_ax            = 0
[ 1728.373048] mean_format        = 0
[ 1728.373229] conv_stride_x      = 1
[ 1728.373408] conv_stride_y      = 1
[ 1728.373596] pad_x_left         = 1
[ 1728.373779] pad_x_right        = 1
[ 1728.373958] pad_y_top          = 1
[ 1728.374138] pad_y_bottom       = 1
[ 1728.374321] dilation_x         = 1
[ 1728.374502] dilation_y         = 1
[ 1728.374682] pra_truncate       = 0
[ 1728.374864] in_precision       = 2
[ 1728.375123] out_precision      = 2
[ 1728.375307] pad_val            = 0
[ 1728.375486] in_cvt             =
[ 1728.375671] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1728.375971] out_cvt            =
[ 1728.376154] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1728.376415] 
[ 1728.376531] Exit: dla_read_config
[ 1728.376710] Exit: dla_prepare_operation status=0
[ 1728.376929] Enter: dla_program_operation
[ 1728.377135] Program Convolution operation index 35 ROI 0 Group[1]
[ 1728.377710] 
[ 1728.377710] entered processor_conv_program():
[ 1728.378005] conv getting weight_address:
[ 1728.378208] entered dla_get_dma_cube_address(index = 1, offset = 0x600000):
[ 1728.378506] entered dla_get_dma_address(index = 1):
[ 1728.378729] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1728.378975] entered dla_read_dma_address(index = 1):
[ 1728.379208] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1728.379503] *phys_addr = 0xc4000000 + 0x0
[ 1728.379705] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1728.380013] back to dla_get_dma_cube_address: dst_ptr += 0x600000
[ 1728.380283] conv weight_addr = 0xc4600000
[ 1728.380283] 
[ 1728.380555] conv getting input_address:
[ 1728.380745] entered dla_read_input_address():
[ 1728.380961] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6815744)
[ 1728.381316] entered dla_get_dma_cube_address(index = 2, offset = 0x680000):
[ 1728.381625] entered dla_get_dma_address(index = 2):
[ 1728.381845] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1728.382088] entered dla_read_dma_address(index = 2):
[ 1728.382321] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1728.382599] *phys_addr = 0xc0800000 + 0x0
[ 1728.382802] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1728.383101] back to dla_get_dma_cube_address: dst_ptr += 0x680000
[ 1728.383365] conv input_addr = 0xc0e80000
[ 1728.383365] 
[ 1728.387298] no desc get due to index==-1
[ 1728.387514] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1728.387944] no desc get due to index==-1
[ 1728.388139] no desc get due to index==-1
[ 1728.388333] no desc get due to index==-1
[ 1728.388529] no desc get due to index==-1
[ 1728.388731] Enter: dla_op_programmed
[ 1728.388927] Update dependency operation index 37 ROI 0 DEP_COUNT=3
[ 1728.389199] Update dependency operation index 36 ROI 0 DEP_COUNT=1
[ 1728.389481] enable SDP in dla_update_dependency as depdency are resolved
[ 1728.389788] Enter: dla_enable_operation
[ 1728.390011] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1728.390633] Exit: dla_enable_operation status=0
[ 1728.391004] Exit: dla_op_programmed
[ 1728.391308] Exit: dla_program_operation status=0
[ 1728.391731] Exit: dla_submit_operation
[ 1728.392049] Exit: dla_dequeue_operation
[ 1728.392377] Exit:dla_op_completion processor Convolution group1 status=0
[ 1728.392878] Exit:dla_handle_events, ret:0
[ 1728.393200] Enter:dla_handle_events, processor:SDP
[ 1728.393580] Handle op complete event, processor SDP group 1
[ 1728.393999] Enter:dla_op_completion processor SDP group1
[ 1728.394401] Completed SDP operation index 32 ROI 0
[ 1728.394779] Update dependency operation index 33 ROI 0 DEP_COUNT=1
[ 1728.395222] enable Convolution in dla_update_dependency as depdency are resolved
[ 1728.395750] Enter: dla_enable_operation
[ 1728.396072] Enable Convolution operation index 33 ROI 0
[ 1728.397052] Enter: dla_op_enabled
[ 1728.397349] Exit: dla_op_enabled
[ 1728.397653] Exit: dla_enable_operation status=0
[ 1728.398012] 33 HWLs done, totally 52 layers
[ 1728.398249] Enter: dla_free_op_desc op desc index 31 ROI 0
[ 1728.398530] Exit: dla_free_op_desc
[ 1728.398716] Enter: dla_dequeue_operation
[ 1728.398920] Dequeue op from SDP processor, index=36 ROI=0
[ 1728.399169] Enter: dla_submit_operation
[ 1728.399366] Prepare SDP operation index 36 ROI 0 dep_count 0
[ 1728.399623] Enter: dla_prepare_operation
[ 1728.456378] processor:SDP group:1, rdma_group:1 available
[ 1728.456805] Enter: dla_read_config
[ 1728.457124] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1728.457887] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1728.458814] *********************************************************
[ 1728.459280] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1728.459631] ---------------------------------------------------------
[ 1728.460083] src_data            = [ dla_data_cube =>
[ 1728.460456]     type          = 2
[ 1728.460744]     address       = -1
[ 1728.461035]     offset        = 0
[ 1728.461324]     width         = e
[ 1728.461619]     height        = e
[ 1728.461908]     channel       = 100
[ 1728.462206]     size          = 100352
[ 1728.462523]     line_stride   = 448
[ 1728.462828]     surf_stride   = 6272
[ 1728.463127]     plane_stride  = 0
[ 1728.463414] ]
[ 1728.463444] x1_data             = [ dla_data_cube =>
[ 1728.463976]     type          = 0
[ 1728.464263]     address       = 1
[ 1728.464550]     offset        = 1c000
[ 1728.464856]     width         = 1
[ 1728.465144]     height        = 1
[ 1728.465433]     channel       = 100
[ 1728.465750]     size          = 512
[ 1728.466043]     line_stride   = 32
[ 1728.466224]     surf_stride   = 32
[ 1728.466400]     plane_stride  = 0
[ 1728.466570] ]
[ 1728.466587] x2_data             = [ dla_data_cube =>
[ 1728.466909]     type          = 0
[ 1728.467089]     address       = 0
[ 1728.467267]     offset        = 0
[ 1728.467440]     width         = 0
[ 1728.467618]     height        = 0
[ 1728.467794]     channel       = 0
[ 1728.467970]     size          = 0
[ 1728.468147]     line_stride   = 0
[ 1728.468324]     surf_stride   = 0
[ 1728.468503]     plane_stride  = 0
[ 1728.468677] ]
[ 1728.468694] y_data              = [ dla_data_cube =>
[ 1728.469014]     type          = 0
[ 1728.469191]     address       = 0
[ 1728.469370]     offset        = 0
[ 1728.469551]     width         = 0
[ 1728.469730]     height        = 0
[ 1728.469907]     channel       = 0
[ 1728.470086]     size          = 0
[ 1728.470266]     line_stride   = 0
[ 1728.470444]     surf_stride   = 0
[ 1728.470622]     plane_stride  = 0
[ 1728.470799] ]
[ 1728.470816] dst_data            = [ dla_data_cube =>
[ 1728.471137]     type          = 0
[ 1728.471318]     address       = 2
[ 1728.471495]     offset        = 6a0000
[ 1728.471684]     width         = e
[ 1728.471860]     height        = e
[ 1728.472033]     channel       = 100
[ 1728.472218]     size          = 100352
[ 1728.472412]     line_stride   = 448
[ 1728.472599]     surf_stride   = 6272
[ 1728.472785]     plane_stride  = 0
[ 1728.472955] ]
[ 1728.472975] *********************************************************
[ 1728.473349] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1728.473562] ---------------------------------------------------------
[ 1728.473852] src_precision    = 2
[ 1728.474028] dst_precision    = 2
[ 1728.474205] lut_index        = -1
[ 1728.474381] out_cvt          =
[ 1728.474556] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1728.474821] conv_mode        = 0
[ 1728.475059] batch_num        = 1
[ 1728.475246] batch_stride     = 0
[ 1728.475422] x1_op            = [ dla_sdp_op =>
[ 1728.475642]     enable         = 1
[ 1728.475844]     alu_type       = 2
[ 1728.476035]     type           = 2
[ 1728.476221]     mode           = 1
[ 1728.476402]     act            = 1
[ 1728.476592]     shift_value    = 0
[ 1728.476780]     truncate       = 0
[ 1728.476970]     precision      = 2
[ 1728.477168]     alu_operand    = 0
[ 1728.477361]     mul_operand    = 1
[ 1728.477559] cvt.alu_cvt          =
[ 1728.477756] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.478018] cvt.mul_cvt          =
[ 1728.478211] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.478479] ]
[ 1728.478600] x2_op            = [ dla_sdp_op =>
[ 1728.478819]     enable         = 0
[ 1728.479002]     alu_type       = 0
[ 1728.479186]     type           = 0
[ 1728.479367]     mode           = 0
[ 1728.479546]     act            = 0
[ 1728.479725]     shift_value    = 0
[ 1728.479915]     truncate       = 0
[ 1728.480104]     precision      = 0
[ 1728.480290]     alu_operand    = 0
[ 1728.480475]     mul_operand    = 0
[ 1728.480660] cvt.alu_cvt          =
[ 1728.480856] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.481121] cvt.mul_cvt          =
[ 1728.481315] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.481589] ]
[ 1728.481713] y_op             = [ dla_sdp_op =>
[ 1728.481942]     enable         = 0
[ 1728.482126]     alu_type       = 0
[ 1728.482306]     type           = 0
[ 1728.482497]     mode           = 0
[ 1728.482677]     act            = 0
[ 1728.482864]     shift_value    = 0
[ 1728.483044]     truncate       = 0
[ 1728.483228]     precision      = 0
[ 1728.483413]     alu_operand    = 0
[ 1728.483597]     mul_operand    = 0
[ 1728.483775] cvt.alu_cvt          =
[ 1728.483960] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.484230] cvt.mul_cvt          =
[ 1728.484414] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1728.484686] ]
[ 1728.484810] Exit: dla_read_config
[ 1728.484997] Exit: dla_prepare_operation status=0
[ 1728.485229] Enter: dla_program_operation
[ 1728.485436] Program SDP operation index 36 ROI 0 Group[1]
[ 1728.486871] 
[ 1728.486871] entered processor_sdp_program():
[ 1728.487217] sdp skip getting src_addr
[ 1728.487217] 
[ 1728.487562] sdp getting dst_addr:
[ 1728.487797] entered dla_get_dma_cube_address(index = 2, offset = 0x6a0000):
[ 1728.488160] entered dla_get_dma_address(index = 2):
[ 1728.488394] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1728.488650] entered dla_read_dma_address(index = 2):
[ 1728.488884] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1728.489170] *phys_addr = 0xc0800000 + 0x0
[ 1728.489380] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1728.489706] back to dla_get_dma_cube_address: dst_ptr += 0x6a0000
[ 1728.489979] sdp dst_addr = 0xc0ea0000
[ 1728.489979] 
[ 1728.490245] sdp getting x1_addr:
[ 1728.490423] entered dla_get_dma_cube_address(index = 1, offset = 0x1c000):
[ 1728.490724] entered dla_get_dma_address(index = 1):
[ 1728.490962] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1728.491230] entered dla_read_dma_address(index = 1):
[ 1728.491474] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1728.491809] *phys_addr = 0xc4000000 + 0x0
[ 1728.492017] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1728.492327] back to dla_get_dma_cube_address: dst_ptr += 0x1c000
[ 1728.492622] sdp x1_addr = 0xc401c000
[ 1728.492622] 
[ 1728.492886] sdp skip getting x2_addr
[ 1728.492886] 
[ 1728.493149] sdp skip getting y_addr
[ 1728.493149] 
[ 1728.501772] no desc get due to index==-1
[ 1728.502069] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1728.502651] no desc get due to index==-1
[ 1728.502917] no desc get due to index==-1
[ 1728.503140] no desc get due to index==-1
[ 1728.503341] Enter: dla_op_programmed
[ 1728.503533] Update dependency operation index 38 ROI 0 DEP_COUNT=2
[ 1728.503814] Exit: dla_op_programmed
[ 1728.504003] Exit: dla_program_operation status=0
[ 1728.504227] Enter: dla_enable_operation
[ 1728.504426] Enable SDP operation index 36 ROI 0
[ 1728.505714] Enter: dla_op_enabled
[ 1728.506026] Update dependency operation index 35 ROI 0 DEP_COUNT=2
[ 1728.506471] Exit: dla_op_enabled
[ 1728.506762] Exit: dla_enable_operation status=0
[ 1728.507120] Exit: dla_submit_operation
[ 1728.507439] Exit: dla_dequeue_operation
[ 1728.507768] Enter: dla_free_op_desc op desc index 32 ROI 0
[ 1728.508245] Exit: dla_free_op_desc
[ 1728.508600] Exit:dla_op_completion processor SDP group1 status=0
[ 1728.509060] Exit:dla_handle_events, ret:0
[ 1728.509392] Enter:dla_handle_events, processor:PDP
[ 1728.509774] Exit:dla_handle_events, ret:0
[ 1728.510105] Enter:dla_handle_events, processor:CDP
[ 1728.510478] Exit:dla_handle_events, ret:0
[ 1728.510809] Enter:dla_handle_events, processor:RUBIK
[ 1728.511189] Exit:dla_handle_events, ret:0
[ 1785.518108] Enter:dla_handle_events, processor:BDMA
[ 1785.518651] Exit:dla_handle_events, ret:0
[ 1785.519011] Enter:dla_handle_events, processor:Convolution
[ 1785.519426] Handle cdma weight done event, processor Convolution group 0
[ 1785.519907] Handle cdma data done event, processor Convolution group 0
[ 1785.520384] Handle op complete event, processor Convolution group 0
[ 1785.520839] Enter:dla_op_completion processor Convolution group0
[ 1785.521338] Completed Convolution operation index 33 ROI 0
[ 1785.521816] 34 HWLs done, totally 52 layers
[ 1785.522203] Enter: dla_dequeue_operation
[ 1785.522574] Dequeue op from Convolution processor, index=37 ROI=0
[ 1785.523070] Enter: dla_submit_operation
[ 1785.523434] Prepare Convolution operation index 37 ROI 0 dep_count 2
[ 1785.523934] Enter: dla_prepare_operation
[ 1785.524370] processor:Convolution group:0, rdma_group:0 available
[ 1785.524859] Enter: dla_read_config
[ 1785.525289] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1785.526144] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1785.527065] *********************************************************
[ 1785.527586] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1785.527988] ---------------------------------------------------------
[ 1785.528475] weight_data         = [ dla_data_cube =>
[ 1785.528898]     type          = 0
[ 1785.529215]     address       = 1
[ 1785.529546]     offset        = 800000
[ 1785.529908]     width         = 3
[ 1785.530225]     height        = 3
[ 1785.530506]     channel       = 100
[ 1785.530708]     size          = 1179648
[ 1785.530925]     line_stride   = 0
[ 1785.531124]     surf_stride   = 0
[ 1785.531313]     plane_stride  = 0
[ 1785.531510] ]
[ 1785.531531] wmb_data            = [ dla_data_cube =>
[ 1785.531873]     type          = 0
[ 1785.532066]     address       = 0
[ 1785.532265]     offset        = 0
[ 1785.532446]     width         = 0
[ 1785.532626]     height        = 0
[ 1785.532809]     channel       = 0
[ 1785.532990]     size          = 0
[ 1785.533177]     line_stride   = 0
[ 1785.533367]     surf_stride   = 0
[ 1785.533550]     plane_stride  = 0
[ 1785.533722] ]
[ 1785.533740] wgs_data            = [ dla_data_cube =>
[ 1785.534057]     type          = 0
[ 1785.534233]     address       = 0
[ 1785.534407]     offset        = 0
[ 1785.534585]     width         = 0
[ 1785.534763]     height        = 0
[ 1785.534938]     channel       = 0
[ 1785.535113]     size          = 0
[ 1785.535291]     line_stride   = 0
[ 1785.535472]     surf_stride   = 0
[ 1785.535652]     plane_stride  = 0
[ 1785.535839] ]
[ 1785.535856] src_data            = [ dla_data_cube =>
[ 1785.536194]     type          = 0
[ 1785.536374]     address       = 2
[ 1785.536553]     offset        = 6a0000
[ 1785.536745]     width         = e
[ 1785.536925]     height        = e
[ 1785.537104]     channel       = 100
[ 1785.537295]     size          = 100352
[ 1785.537486]     line_stride   = 448
[ 1785.537674]     surf_stride   = 6272
[ 1785.537862]     plane_stride  = 0
[ 1785.538037] ]
[ 1785.538053] dst_data            = [ dla_data_cube =>
[ 1785.538377]     type          = 2
[ 1785.538553]     address       = -1
[ 1785.538731]     offset        = 0
[ 1785.538910]     width         = e
[ 1785.539089]     height        = e
[ 1785.539268]     channel       = 100
[ 1785.539454]     size          = 100352
[ 1785.539645]     line_stride   = 448
[ 1785.539832]     surf_stride   = 6272
[ 1785.540016]     plane_stride  = 0
[ 1785.540194] ]
[ 1785.540214] offset_u            = 0
[ 1785.540479] in_line_uv_stride   = 0
[ 1785.540479] 
[ 1785.540731] *********************************************************
[ 1785.541005] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1785.541213] ---------------------------------------------------------
[ 1785.541487] conv_mode          = 0
[ 1785.541690] data_reuse         = 0
[ 1785.541906] weight_reuse       = 0
[ 1785.542091] skip_data_rls      = 0
[ 1785.542267] skip_weight_rls    = 0
[ 1785.542466] entry_per_slice    = 56
[ 1785.542651] data_format        = 36
[ 1785.542840] pixel_mapping      = 0
[ 1785.543023] fetch_grain        = 1
[ 1785.543204] batch              = 1
[ 1785.543388] weight_format      = 0
[ 1785.543565] data_bank          = 4
[ 1785.543746] weight_bank        = 6
[ 1785.543927] batch_stride       = 0
[ 1785.544108] post_extension     = 0
[ 1785.544291] pixel_override     = 1
[ 1785.544472] release            = 14
[ 1785.544654] input_width_csc    = 14
[ 1785.544839] input_height_csc   = 14
[ 1785.545022] input_channel_csc  = 256
[ 1785.545208] kernel_width_csc   = 3
[ 1785.545393] kernel_height_csc  = 3
[ 1785.545584] kernel_channel_csc = 256
[ 1785.545775] input_width_cmac   = 14
[ 1785.545958] input_height_cmac  = 14
[ 1785.546143] bytes_per_kernel   = 4608
[ 1785.546340] mean_ry            = 0
[ 1785.546530] mean_gu            = 0
[ 1785.546716] mean_bv            = 0
[ 1785.546895] mean_ax            = 0
[ 1785.547077] mean_format        = 0
[ 1785.547257] conv_stride_x      = 1
[ 1785.547442] conv_stride_y      = 1
[ 1785.547621] pad_x_left         = 1
[ 1785.547803] pad_x_right        = 1
[ 1785.547985] pad_y_top          = 1
[ 1785.548167] pad_y_bottom       = 1
[ 1785.548347] dilation_x         = 1
[ 1785.548528] dilation_y         = 1
[ 1785.548713] pra_truncate       = 0
[ 1785.548894] in_precision       = 2
[ 1785.549075] out_precision      = 2
[ 1785.549265] pad_val            = 0
[ 1785.549448] in_cvt             =
[ 1785.549638] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1785.549904] out_cvt            =
[ 1785.550090] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1785.550360] 
[ 1785.550478] Exit: dla_read_config
[ 1785.550659] Exit: dla_prepare_operation status=0
[ 1785.550883] Enter: dla_program_operation
[ 1785.551090] Program Convolution operation index 37 ROI 0 Group[0]
[ 1785.551660] 
[ 1785.551660] entered processor_conv_program():
[ 1785.551958] conv getting weight_address:
[ 1785.552165] entered dla_get_dma_cube_address(index = 1, offset = 0x800000):
[ 1785.552477] entered dla_get_dma_address(index = 1):
[ 1785.552704] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1785.552967] entered dla_read_dma_address(index = 1):
[ 1785.553205] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1785.553494] *phys_addr = 0xc4000000 + 0x0
[ 1785.553704] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1785.554021] back to dla_get_dma_cube_address: dst_ptr += 0x800000
[ 1785.554291] conv weight_addr = 0xc4800000
[ 1785.554291] 
[ 1785.554562] conv getting input_address:
[ 1785.554753] entered dla_read_input_address():
[ 1785.554974] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 6946816)
[ 1785.555334] entered dla_get_dma_cube_address(index = 2, offset = 0x6a0000):
[ 1785.555636] entered dla_get_dma_address(index = 2):
[ 1785.555859] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1785.556111] entered dla_read_dma_address(index = 2):
[ 1785.556352] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1785.556642] *phys_addr = 0xc0800000 + 0x0
[ 1785.556854] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1785.557170] back to dla_get_dma_cube_address: dst_ptr += 0x6a0000
[ 1785.557450] conv input_addr = 0xc0ea0000
[ 1785.557450] 
[ 1785.561043] no desc get due to index==-1
[ 1785.561269] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1785.561730] no desc get due to index==-1
[ 1785.561935] no desc get due to index==-1
[ 1785.562130] no desc get due to index==-1
[ 1785.562327] no desc get due to index==-1
[ 1785.562525] Enter: dla_op_programmed
[ 1785.562718] Update dependency operation index 39 ROI 0 DEP_COUNT=3
[ 1785.562999] Update dependency operation index 38 ROI 0 DEP_COUNT=1
[ 1785.563272] enable SDP in dla_update_dependency as depdency are resolved
[ 1785.563562] Enter: dla_enable_operation
[ 1785.563766] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1785.564152] Exit: dla_enable_operation status=0
[ 1785.564372] Exit: dla_op_programmed
[ 1785.564557] Exit: dla_program_operation status=0
[ 1785.564782] Exit: dla_submit_operation
[ 1785.564981] Exit: dla_dequeue_operation
[ 1785.565194] Exit:dla_op_completion processor Convolution group0 status=0
[ 1785.565496] Exit:dla_handle_events, ret:0
[ 1785.565707] Enter:dla_handle_events, processor:SDP
[ 1785.565940] Handle op complete event, processor SDP group 0
[ 1785.566191] Enter:dla_op_completion processor SDP group0
[ 1785.566435] Completed SDP operation index 34 ROI 0
[ 1785.566686] Update dependency operation index 35 ROI 0 DEP_COUNT=1
[ 1785.566960] enable Convolution in dla_update_dependency as depdency are resolved
[ 1785.567289] Enter: dla_enable_operation
[ 1785.567494] Enable Convolution operation index 35 ROI 0
[ 1785.568296] Enter: dla_op_enabled
[ 1785.568483] Exit: dla_op_enabled
[ 1785.568661] Exit: dla_enable_operation status=0
[ 1785.568887] 35 HWLs done, totally 52 layers
[ 1785.569102] Enter: dla_free_op_desc op desc index 33 ROI 0
[ 1785.569374] Exit: dla_free_op_desc
[ 1785.569572] Enter: dla_dequeue_operation
[ 1785.569778] Dequeue op from SDP processor, index=38 ROI=0
[ 1785.570024] Enter: dla_submit_operation
[ 1785.570224] Prepare SDP operation index 38 ROI 0 dep_count 0
[ 1785.570483] Enter: dla_prepare_operation
[ 1785.625944] processor:SDP group:0, rdma_group:0 available
[ 1785.626517] Enter: dla_read_config
[ 1785.626971] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1785.628022] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1785.629165] *********************************************************
[ 1785.629846] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1785.630348] ---------------------------------------------------------
[ 1785.630976] src_data            = [ dla_data_cube =>
[ 1785.631506]     type          = 2
[ 1785.631911]     address       = -1
[ 1785.632320]     offset        = 0
[ 1785.632721]     width         = e
[ 1785.633121]     height        = e
[ 1785.633533]     channel       = 100
[ 1785.633955]     size          = 100352
[ 1785.634389]     line_stride   = 448
[ 1785.634806]     surf_stride   = 6272
[ 1785.635228]     plane_stride  = 0
[ 1785.635635] ]
[ 1785.635674] x1_data             = [ dla_data_cube =>
[ 1785.636438]     type          = 0
[ 1785.636844]     address       = 1
[ 1785.637266]     offset        = 1d000
[ 1785.637717]     width         = 1
[ 1785.638129]     height        = 1
[ 1785.638448]     channel       = 100
[ 1785.638661]     size          = 512
[ 1785.638872]     line_stride   = 32
[ 1785.639069]     surf_stride   = 32
[ 1785.639269]     plane_stride  = 0
[ 1785.639470] ]
[ 1785.639488] x2_data             = [ dla_data_cube =>
[ 1785.639861]     type          = 0
[ 1785.640064]     address       = 2
[ 1785.640260]     offset        = 680000
[ 1785.640469]     width         = e
[ 1785.640661]     height        = e
[ 1785.640871]     channel       = 100
[ 1785.641088]     size          = 100352
[ 1785.641306]     line_stride   = 448
[ 1785.641519]     surf_stride   = 6272
[ 1785.641733]     plane_stride  = 0
[ 1785.641927] ]
[ 1785.641945] y_data              = [ dla_data_cube =>
[ 1785.642289]     type          = 0
[ 1785.642494]     address       = 0
[ 1785.642692]     offset        = 0
[ 1785.642886]     width         = 0
[ 1785.643088]     height        = 0
[ 1785.643277]     channel       = 0
[ 1785.643468]     size          = 0
[ 1785.643660]     line_stride   = 0
[ 1785.643864]     surf_stride   = 0
[ 1785.644070]     plane_stride  = 0
[ 1785.644274] ]
[ 1785.644292] dst_data            = [ dla_data_cube =>
[ 1785.644696]     type          = 0
[ 1785.644906]     address       = 2
[ 1785.645119]     offset        = 6c0000
[ 1785.645348]     width         = e
[ 1785.645557]     height        = e
[ 1785.645756]     channel       = 100
[ 1785.645952]     size          = 100352
[ 1785.646166]     line_stride   = 448
[ 1785.646369]     surf_stride   = 6272
[ 1785.646571]     plane_stride  = 0
[ 1785.646763] ]
[ 1785.646783] *********************************************************
[ 1785.647193] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1785.647414] ---------------------------------------------------------
[ 1785.647721] src_precision    = 2
[ 1785.647912] dst_precision    = 2
[ 1785.648104] lut_index        = -1
[ 1785.648294] out_cvt          =
[ 1785.648486] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1785.648775] conv_mode        = 0
[ 1785.648968] batch_num        = 1
[ 1785.649154] batch_stride     = 0
[ 1785.649343] x1_op            = [ dla_sdp_op =>
[ 1785.649594]     enable         = 1
[ 1785.649796]     alu_type       = 2
[ 1785.649999]     type           = 2
[ 1785.650205]     mode           = 1
[ 1785.650400]     act            = 0
[ 1785.650592]     shift_value    = 0
[ 1785.650794]     truncate       = 0
[ 1785.650997]     precision      = 2
[ 1785.651200]     alu_operand    = 0
[ 1785.651407]     mul_operand    = 1
[ 1785.651608] cvt.alu_cvt          =
[ 1785.651815] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.652101] cvt.mul_cvt          =
[ 1785.652309] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.652612] ]
[ 1785.652741] x2_op            = [ dla_sdp_op =>
[ 1785.652980]     enable         = 1
[ 1785.653190]     alu_type       = 2
[ 1785.653400]     type           = 2
[ 1785.653620]     mode           = 2
[ 1785.653831]     act            = 1
[ 1785.654036]     shift_value    = 0
[ 1785.654227]     truncate       = 0
[ 1785.654417]     precision      = 2
[ 1785.654612]     alu_operand    = 0
[ 1785.654808]     mul_operand    = 1
[ 1785.655001] cvt.alu_cvt          =
[ 1785.655196] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.655477] cvt.mul_cvt          =
[ 1785.655672] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.655954] ]
[ 1785.656080] y_op             = [ dla_sdp_op =>
[ 1785.656314]     enable         = 0
[ 1785.656506]     alu_type       = 0
[ 1785.656700]     type           = 0
[ 1785.656891]     mode           = 0
[ 1785.657083]     act            = 0
[ 1785.657280]     shift_value    = 0
[ 1785.657477]     truncate       = 0
[ 1785.657680]     precision      = 0
[ 1785.657885]     alu_operand    = 0
[ 1785.658068]     mul_operand    = 0
[ 1785.658246] cvt.alu_cvt          =
[ 1785.658463] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.658756] cvt.mul_cvt          =
[ 1785.658953] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1785.659260] ]
[ 1785.659412] Exit: dla_read_config
[ 1785.659613] Exit: dla_prepare_operation status=0
[ 1785.659881] Enter: dla_program_operation
[ 1785.660117] Program SDP operation index 38 ROI 0 Group[0]
[ 1785.661568] 
[ 1785.661568] entered processor_sdp_program():
[ 1785.661888] sdp skip getting src_addr
[ 1785.661888] 
[ 1785.662188] sdp getting dst_addr:
[ 1785.662380] entered dla_get_dma_cube_address(index = 2, offset = 0x6c0000):
[ 1785.662715] entered dla_get_dma_address(index = 2):
[ 1785.662961] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1785.663231] entered dla_read_dma_address(index = 2):
[ 1785.663505] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1785.663826] *phys_addr = 0xc0800000 + 0x0
[ 1785.664048] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1785.664379] back to dla_get_dma_cube_address: dst_ptr += 0x6c0000
[ 1785.664679] sdp dst_addr = 0xc0ec0000
[ 1785.664679] 
[ 1785.664970] sdp getting x1_addr:
[ 1785.665166] entered dla_get_dma_cube_address(index = 1, offset = 0x1d000):
[ 1785.665506] entered dla_get_dma_address(index = 1):
[ 1785.665773] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1785.666059] entered dla_read_dma_address(index = 1):
[ 1785.666318] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1785.666650] *phys_addr = 0xc4000000 + 0x0
[ 1785.666873] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1785.667219] back to dla_get_dma_cube_address: dst_ptr += 0x1d000
[ 1785.667530] sdp x1_addr = 0xc401d000
[ 1785.667530] 
[ 1785.667815] sdp getting x2_addr:
[ 1785.668016] entered dla_get_dma_cube_address(index = 2, offset = 0x680000):
[ 1785.668354] entered dla_get_dma_address(index = 2):
[ 1785.668602] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1785.668882] entered dla_read_dma_address(index = 2):
[ 1785.669139] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1785.669451] *phys_addr = 0xc0800000 + 0x0
[ 1785.669703] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1785.670055] back to dla_get_dma_cube_address: dst_ptr += 0x680000
[ 1785.670366] sdp x1_addr = 0xc0e80000
[ 1785.670366] 
[ 1785.670667] sdp skip getting y_addr
[ 1785.670667] 
[ 1785.680811] no desc get due to index==-1
[ 1785.681217] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1785.681986] no desc get due to index==-1
[ 1785.682333] no desc get due to index==-1
[ 1785.682677] no desc get due to index==-1
[ 1785.683024] Enter: dla_op_programmed
[ 1785.683366] Update dependency operation index 40 ROI 0 DEP_COUNT=2
[ 1785.683852] Exit: dla_op_programmed
[ 1785.684174] Exit: dla_program_operation status=0
[ 1785.684575] Enter: dla_enable_operation
[ 1785.684930] Enable SDP operation index 38 ROI 0
[ 1785.687816] Enter: dla_op_enabled
[ 1785.688155] Update dependency operation index 37 ROI 0 DEP_COUNT=2
[ 1785.688631] Exit: dla_op_enabled
[ 1785.688950] Exit: dla_enable_operation status=0
[ 1785.689339] Exit: dla_submit_operation
[ 1785.689689] Exit: dla_dequeue_operation
[ 1785.690042] Enter: dla_free_op_desc op desc index 34 ROI 0
[ 1785.690522] Exit: dla_free_op_desc
[ 1785.690857] Exit:dla_op_completion processor SDP group0 status=0
[ 1785.691332] Exit:dla_handle_events, ret:0
[ 1785.691702] Enter:dla_handle_events, processor:PDP
[ 1785.692133] Exit:dla_handle_events, ret:0
[ 1785.692481] Enter:dla_handle_events, processor:CDP
[ 1785.692889] Exit:dla_handle_events, ret:0
[ 1785.693252] Enter:dla_handle_events, processor:RUBIK
[ 1785.693683] Exit:dla_handle_events, ret:0
[ 1853.105111] Enter:dla_handle_events, processor:BDMA
[ 1853.105780] Exit:dla_handle_events, ret:0
[ 1853.106268] Enter:dla_handle_events, processor:Convolution
[ 1853.106853] Handle cdma weight done event, processor Convolution group 1
[ 1853.107508] Handle cdma data done event, processor Convolution group 1
[ 1853.108138] Handle op complete event, processor Convolution group 1
[ 1853.108802] Enter:dla_op_completion processor Convolution group1
[ 1853.109420] Completed Convolution operation index 35 ROI 0
[ 1853.109981] 36 HWLs done, totally 52 layers
[ 1853.110353] Enter: dla_dequeue_operation
[ 1853.110761] Dequeue op from Convolution processor, index=39 ROI=0
[ 1853.111280] Enter: dla_submit_operation
[ 1853.111664] Prepare Convolution operation index 39 ROI 0 dep_count 2
[ 1853.112183] Enter: dla_prepare_operation
[ 1853.112657] processor:Convolution group:1, rdma_group:0 available
[ 1853.113302] Enter: dla_read_config
[ 1853.113798] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1853.114590] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1853.115448] *********************************************************
[ 1853.115928] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1853.116303] ---------------------------------------------------------
[ 1853.116765] weight_data         = [ dla_data_cube =>
[ 1853.117156]     type          = 0
[ 1853.117453]     address       = 1
[ 1853.117763]     offset        = 280000
[ 1853.118081]     width         = 1
[ 1853.118379]     height        = 1
[ 1853.118675]     channel       = 100
[ 1853.118989]     size          = 262144
[ 1853.119345]     line_stride   = 0
[ 1853.119644]     surf_stride   = 0
[ 1853.119939]     plane_stride  = 0
[ 1853.120321] ]
[ 1853.120355] wmb_data            = [ dla_data_cube =>
[ 1853.120903]     type          = 0
[ 1853.121203]     address       = 0
[ 1853.121519]     offset        = 0
[ 1853.121819]     width         = 0
[ 1853.122035]     height        = 0
[ 1853.122212]     channel       = 0
[ 1853.122387]     size          = 0
[ 1853.122570]     line_stride   = 0
[ 1853.122756]     surf_stride   = 0
[ 1853.122936]     plane_stride  = 0
[ 1853.123117] ]
[ 1853.123134] wgs_data            = [ dla_data_cube =>
[ 1853.123494]     type          = 0
[ 1853.123678]     address       = 0
[ 1853.123859]     offset        = 0
[ 1853.124047]     width         = 0
[ 1853.124234]     height        = 0
[ 1853.124419]     channel       = 0
[ 1853.124599]     size          = 0
[ 1853.124784]     line_stride   = 0
[ 1853.124972]     surf_stride   = 0
[ 1853.125178]     plane_stride  = 0
[ 1853.125382] ]
[ 1853.125400] src_data            = [ dla_data_cube =>
[ 1853.125746]     type          = 0
[ 1853.125933]     address       = 2
[ 1853.126148]     offset        = 6c0000
[ 1853.126349]     width         = e
[ 1853.126525]     height        = e
[ 1853.126709]     channel       = 100
[ 1853.126903]     size          = 100352
[ 1853.127120]     line_stride   = 448
[ 1853.127335]     surf_stride   = 6272
[ 1853.127524]     plane_stride  = 0
[ 1853.127708] ]
[ 1853.127725] dst_data            = [ dla_data_cube =>
[ 1853.128051]     type          = 2
[ 1853.128237]     address       = -1
[ 1853.128437]     offset        = 0
[ 1853.128617]     width         = 7
[ 1853.128796]     height        = 7
[ 1853.128977]     channel       = 200
[ 1853.129169]     size          = 50176
[ 1853.129372]     line_stride   = 224
[ 1853.129573]     surf_stride   = 1568
[ 1853.129764]     plane_stride  = 0
[ 1853.129942] ]
[ 1853.129962] offset_u            = 0
[ 1853.130230] in_line_uv_stride   = 0
[ 1853.130230] 
[ 1853.130498] *********************************************************
[ 1853.130790] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1853.131001] ---------------------------------------------------------
[ 1853.131277] conv_mode          = 0
[ 1853.131457] data_reuse         = 0
[ 1853.131636] weight_reuse       = 0
[ 1853.131821] skip_data_rls      = 0
[ 1853.132004] skip_weight_rls    = 0
[ 1853.132188] entry_per_slice    = 56
[ 1853.132379] data_format        = 36
[ 1853.132566] pixel_mapping      = 0
[ 1853.132747] fetch_grain        = 1
[ 1853.132928] batch              = 1
[ 1853.133109] weight_format      = 0
[ 1853.133293] data_bank          = 4
[ 1853.133478] weight_bank        = 8
[ 1853.133671] batch_stride       = 0
[ 1853.133857] post_extension     = 0
[ 1853.134036] pixel_override     = 1
[ 1853.134216] release            = 14
[ 1853.134402] input_width_csc    = 14
[ 1853.134587] input_height_csc   = 14
[ 1853.134782] input_channel_csc  = 256
[ 1853.134968] kernel_width_csc   = 1
[ 1853.135154] kernel_height_csc  = 1
[ 1853.135338] kernel_channel_csc = 256
[ 1853.135528] input_width_cmac   = 7
[ 1853.135708] input_height_cmac  = 7
[ 1853.135898] bytes_per_kernel   = 512
[ 1853.136085] mean_ry            = 0
[ 1853.136269] mean_gu            = 0
[ 1853.136505] mean_bv            = 0
[ 1853.136697] mean_ax            = 0
[ 1853.136878] mean_format        = 0
[ 1853.137069] conv_stride_x      = 2
[ 1853.137252] conv_stride_y      = 2
[ 1853.137440] pad_x_left         = 0
[ 1853.137627] pad_x_right        = 0
[ 1853.137817] pad_y_top          = 0
[ 1853.137999] pad_y_bottom       = 0
[ 1853.138187] dilation_x         = 1
[ 1853.138375] dilation_y         = 1
[ 1853.138561] pra_truncate       = 0
[ 1853.138746] in_precision       = 2
[ 1853.138930] out_precision      = 2
[ 1853.139110] pad_val            = 0
[ 1853.139295] in_cvt             =
[ 1853.139480] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1853.139746] out_cvt            =
[ 1853.139924] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1853.140189] 
[ 1853.140307] Exit: dla_read_config
[ 1853.140490] Exit: dla_prepare_operation status=0
[ 1853.140718] Enter: dla_program_operation
[ 1853.140932] Program Convolution operation index 39 ROI 0 Group[1]
[ 1853.141579] 
[ 1853.141579] entered processor_conv_program():
[ 1853.141912] conv getting weight_address:
[ 1853.142138] entered dla_get_dma_cube_address(index = 1, offset = 0x280000):
[ 1853.142442] entered dla_get_dma_address(index = 1):
[ 1853.142694] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1853.142962] entered dla_read_dma_address(index = 1):
[ 1853.143206] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1853.143512] *phys_addr = 0xc4000000 + 0x0
[ 1853.143718] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1853.144041] back to dla_get_dma_cube_address: dst_ptr += 0x280000
[ 1853.144348] conv weight_addr = 0xc4280000
[ 1853.144348] 
[ 1853.144622] conv getting input_address:
[ 1853.144813] entered dla_read_input_address():
[ 1853.145032] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7077888)
[ 1853.145396] entered dla_get_dma_cube_address(index = 2, offset = 0x6c0000):
[ 1853.145701] entered dla_get_dma_address(index = 2):
[ 1853.145927] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1853.146178] entered dla_read_dma_address(index = 2):
[ 1853.146412] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1853.146707] *phys_addr = 0xc0800000 + 0x0
[ 1853.146908] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1853.147215] back to dla_get_dma_cube_address: dst_ptr += 0x6c0000
[ 1853.147495] conv input_addr = 0xc0ec0000
[ 1853.147495] 
[ 1853.151092] no desc get due to index==-1
[ 1853.151320] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1853.151771] no desc get due to index==-1
[ 1853.151973] no desc get due to index==-1
[ 1853.152175] no desc get due to index==-1
[ 1853.152377] no desc get due to index==-1
[ 1853.152580] Enter: dla_op_programmed
[ 1853.152779] Update dependency operation index 41 ROI 0 DEP_COUNT=3
[ 1853.153065] Update dependency operation index 40 ROI 0 DEP_COUNT=1
[ 1853.153347] enable SDP in dla_update_dependency as depdency are resolved
[ 1853.153659] Enter: dla_enable_operation
[ 1853.153863] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1853.154293] Exit: dla_enable_operation status=0
[ 1853.154532] Exit: dla_op_programmed
[ 1853.154724] Exit: dla_program_operation status=0
[ 1853.154951] Exit: dla_submit_operation
[ 1853.155154] Exit: dla_dequeue_operation
[ 1853.155361] Exit:dla_op_completion processor Convolution group1 status=0
[ 1853.155669] Exit:dla_handle_events, ret:0
[ 1853.155876] Enter:dla_handle_events, processor:SDP
[ 1853.156116] Handle op complete event, processor SDP group 1
[ 1853.156379] Enter:dla_op_completion processor SDP group1
[ 1853.156645] Completed SDP operation index 36 ROI 0
[ 1853.156897] Update dependency operation index 37 ROI 0 DEP_COUNT=1
[ 1853.157190] enable Convolution in dla_update_dependency as depdency are resolved
[ 1853.157540] Enter: dla_enable_operation
[ 1853.157756] Enable Convolution operation index 37 ROI 0
[ 1853.158603] Enter: dla_op_enabled
[ 1853.158809] Exit: dla_op_enabled
[ 1853.158987] Exit: dla_enable_operation status=0
[ 1853.159217] 37 HWLs done, totally 52 layers
[ 1853.159444] Enter: dla_free_op_desc op desc index 35 ROI 0
[ 1853.159745] Exit: dla_free_op_desc
[ 1853.159935] Enter: dla_dequeue_operation
[ 1853.160148] Dequeue op from SDP processor, index=40 ROI=0
[ 1853.160437] Enter: dla_submit_operation
[ 1853.160662] Prepare SDP operation index 40 ROI 0 dep_count 0
[ 1853.160932] Enter: dla_prepare_operation
[ 1853.224798] processor:SDP group:1, rdma_group:1 available
[ 1853.225454] Enter: dla_read_config
[ 1853.225947] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1853.227096] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1853.228326] *********************************************************
[ 1853.229036] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1853.229571] ---------------------------------------------------------
[ 1853.230225] src_data            = [ dla_data_cube =>
[ 1853.230783]     type          = 2
[ 1853.231219]     address       = -1
[ 1853.231656]     offset        = 0
[ 1853.232026]     width         = 7
[ 1853.232373]     height        = 7
[ 1853.232718]     channel       = 200
[ 1853.233076]     size          = 50176
[ 1853.233444]     line_stride   = 224
[ 1853.233808]     surf_stride   = 1568
[ 1853.234051]     plane_stride  = 0
[ 1853.234256] ]
[ 1853.234276] x1_data             = [ dla_data_cube =>
[ 1853.234655]     type          = 0
[ 1853.234866]     address       = 1
[ 1853.235089]     offset        = 1e000
[ 1853.235388]     width         = 1
[ 1853.235658]     height        = 1
[ 1853.235966]     channel       = 200
[ 1853.236281]     size          = 1024
[ 1853.236515]     line_stride   = 32
[ 1853.236742]     surf_stride   = 32
[ 1853.236956]     plane_stride  = 0
[ 1853.237161] ]
[ 1853.237179] x2_data             = [ dla_data_cube =>
[ 1853.237563]     type          = 0
[ 1853.237775]     address       = 0
[ 1853.237980]     offset        = 0
[ 1853.238189]     width         = 0
[ 1853.238400]     height        = 0
[ 1853.238607]     channel       = 0
[ 1853.238820]     size          = 0
[ 1853.239031]     line_stride   = 0
[ 1853.239241]     surf_stride   = 0
[ 1853.239450]     plane_stride  = 0
[ 1853.239664] ]
[ 1853.239683] y_data              = [ dla_data_cube =>
[ 1853.240073]     type          = 0
[ 1853.240277]     address       = 0
[ 1853.240481]     offset        = 0
[ 1853.240689]     width         = 0
[ 1853.240900]     height        = 0
[ 1853.241108]     channel       = 0
[ 1853.241315]     size          = 0
[ 1853.241528]     line_stride   = 0
[ 1853.241748]     surf_stride   = 0
[ 1853.241993]     plane_stride  = 0
[ 1853.242200] ]
[ 1853.242218] dst_data            = [ dla_data_cube =>
[ 1853.242598]     type          = 0
[ 1853.242810]     address       = 2
[ 1853.243020]     offset        = 6e0000
[ 1853.243251]     width         = 7
[ 1853.243463]     height        = 7
[ 1853.243674]     channel       = 200
[ 1853.243893]     size          = 50176
[ 1853.244128]     line_stride   = 224
[ 1853.244352]     surf_stride   = 1568
[ 1853.244595]     plane_stride  = 0
[ 1853.244800] ]
[ 1853.244820] *********************************************************
[ 1853.245262] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1853.245522] ---------------------------------------------------------
[ 1853.245864] src_precision    = 2
[ 1853.246068] dst_precision    = 2
[ 1853.246279] lut_index        = -1
[ 1853.246485] out_cvt          =
[ 1853.246696] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1853.247017] conv_mode        = 0
[ 1853.247224] batch_num        = 1
[ 1853.247434] batch_stride     = 0
[ 1853.247641] x1_op            = [ dla_sdp_op =>
[ 1853.247901]     enable         = 1
[ 1853.248115]     alu_type       = 2
[ 1853.248336]     type           = 2
[ 1853.248548]     mode           = 1
[ 1853.248756]     act            = 0
[ 1853.248958]     shift_value    = 0
[ 1853.249179]     truncate       = 0
[ 1853.249393]     precision      = 2
[ 1853.249612]     alu_operand    = 0
[ 1853.249823]     mul_operand    = 1
[ 1853.250036] cvt.alu_cvt          =
[ 1853.250306] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.250750] cvt.mul_cvt          =
[ 1853.251046] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.251361] ]
[ 1853.251496] x2_op            = [ dla_sdp_op =>
[ 1853.251768]     enable         = 0
[ 1853.251980]     alu_type       = 0
[ 1853.252186]     type           = 0
[ 1853.252392]     mode           = 0
[ 1853.252601]     act            = 0
[ 1853.252815]     shift_value    = 0
[ 1853.253022]     truncate       = 0
[ 1853.253229]     precision      = 0
[ 1853.253432]     alu_operand    = 0
[ 1853.253654]     mul_operand    = 0
[ 1853.253861] cvt.alu_cvt          =
[ 1853.254077] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.254382] cvt.mul_cvt          =
[ 1853.254591] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.254905] ]
[ 1853.255043] y_op             = [ dla_sdp_op =>
[ 1853.255302]     enable         = 0
[ 1853.255514]     alu_type       = 0
[ 1853.255724]     type           = 0
[ 1853.255927]     mode           = 0
[ 1853.256134]     act            = 0
[ 1853.256339]     shift_value    = 0
[ 1853.256548]     truncate       = 0
[ 1853.256752]     precision      = 0
[ 1853.256957]     alu_operand    = 0
[ 1853.257167]     mul_operand    = 0
[ 1853.257373] cvt.alu_cvt          =
[ 1853.257582] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.257897] cvt.mul_cvt          =
[ 1853.258106] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1853.258425] ]
[ 1853.258588] Exit: dla_read_config
[ 1853.258829] Exit: dla_prepare_operation status=0
[ 1853.259085] Enter: dla_program_operation
[ 1853.259338] Program SDP operation index 40 ROI 0 Group[1]
[ 1853.260831] 
[ 1853.260831] entered processor_sdp_program():
[ 1853.261238] sdp skip getting src_addr
[ 1853.261238] 
[ 1853.261623] sdp getting dst_addr:
[ 1853.261883] entered dla_get_dma_cube_address(index = 2, offset = 0x6e0000):
[ 1853.262243] entered dla_get_dma_address(index = 2):
[ 1853.262531] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1853.262826] entered dla_read_dma_address(index = 2):
[ 1853.263105] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1853.263443] *phys_addr = 0xc0800000 + 0x0
[ 1853.263681] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1853.264056] back to dla_get_dma_cube_address: dst_ptr += 0x6e0000
[ 1853.264377] sdp dst_addr = 0xc0ee0000
[ 1853.264377] 
[ 1853.264675] sdp getting x1_addr:
[ 1853.264879] entered dla_get_dma_cube_address(index = 1, offset = 0x1e000):
[ 1853.265223] entered dla_get_dma_address(index = 1):
[ 1853.265476] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1853.265787] entered dla_read_dma_address(index = 1):
[ 1853.266061] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1853.266390] *phys_addr = 0xc4000000 + 0x0
[ 1853.266625] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1853.266972] back to dla_get_dma_cube_address: dst_ptr += 0x1e000
[ 1853.267277] sdp x1_addr = 0xc401e000
[ 1853.267277] 
[ 1853.267577] sdp skip getting x2_addr
[ 1853.267577] 
[ 1853.267874] sdp skip getting y_addr
[ 1853.267874] 
[ 1853.276350] no desc get due to index==-1
[ 1853.276784] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1853.277662] no desc get due to index==-1
[ 1853.278127] no desc get due to index==-1
[ 1853.278588] no desc get due to index==-1
[ 1853.279047] Enter: dla_op_programmed
[ 1853.279496] Update dependency operation index 42 ROI 0 DEP_COUNT=2
[ 1853.280140] Exit: dla_op_programmed
[ 1853.280505] Exit: dla_program_operation status=0
[ 1853.280859] Enter: dla_enable_operation
[ 1853.281183] Enable SDP operation index 40 ROI 0
[ 1853.282637] Enter: dla_op_enabled
[ 1853.282954] Update dependency operation index 39 ROI 0 DEP_COUNT=2
[ 1853.283390] Exit: dla_op_enabled
[ 1853.283678] Exit: dla_enable_operation status=0
[ 1853.284033] Exit: dla_submit_operation
[ 1853.284345] Exit: dla_dequeue_operation
[ 1853.284668] Enter: dla_free_op_desc op desc index 36 ROI 0
[ 1853.285135] Exit: dla_free_op_desc
[ 1853.285438] Exit:dla_op_completion processor SDP group1 status=0
[ 1853.285885] Exit:dla_handle_events, ret:0
[ 1853.286210] Enter:dla_handle_events, processor:PDP
[ 1853.286578] Exit:dla_handle_events, ret:0
[ 1853.286923] Enter:dla_handle_events, processor:CDP
[ 1853.287294] Exit:dla_handle_events, ret:0
[ 1853.287623] Enter:dla_handle_events, processor:RUBIK
[ 1853.287999] Exit:dla_handle_events, ret:0
[ 1914.265957] Enter:dla_handle_events, processor:BDMA
[ 1914.266602] Exit:dla_handle_events, ret:0
[ 1914.267021] Enter:dla_handle_events, processor:Convolution
[ 1914.267541] Handle cdma weight done event, processor Convolution group 0
[ 1914.268156] Handle cdma data done event, processor Convolution group 0
[ 1914.268748] Handle op complete event, processor Convolution group 0
[ 1914.269358] Enter:dla_op_completion processor Convolution group0
[ 1914.269928] Completed Convolution operation index 37 ROI 0
[ 1914.270459] 38 HWLs done, totally 52 layers
[ 1914.270890] Enter: dla_dequeue_operation
[ 1914.271312] Dequeue op from Convolution processor, index=41 ROI=0
[ 1914.271871] Enter: dla_submit_operation
[ 1914.272285] Prepare Convolution operation index 41 ROI 0 dep_count 2
[ 1914.272860] Enter: dla_prepare_operation
[ 1914.273363] processor:Convolution group:0, rdma_group:0 available
[ 1914.273930] Enter: dla_read_config
[ 1914.274367] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1914.274847] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1914.275364] *********************************************************
[ 1914.275723] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1914.275952] ---------------------------------------------------------
[ 1914.276228] weight_data         = [ dla_data_cube =>
[ 1914.276470]     type          = 0
[ 1914.276645]     address       = 1
[ 1914.276828]     offset        = c00000
[ 1914.277019]     width         = 3
[ 1914.277202]     height        = 3
[ 1914.277380]     channel       = 100
[ 1914.277570]     size          = 2359296
[ 1914.277773]     line_stride   = 0
[ 1914.277955]     surf_stride   = 0
[ 1914.278134]     plane_stride  = 0
[ 1914.278311] ]
[ 1914.278332] wmb_data            = [ dla_data_cube =>
[ 1914.278678]     type          = 0
[ 1914.278856]     address       = 0
[ 1914.279030]     offset        = 0
[ 1914.279211]     width         = 0
[ 1914.279389]     height        = 0
[ 1914.279590]     channel       = 0
[ 1914.279766]     size          = 0
[ 1914.279947]     line_stride   = 0
[ 1914.280127]     surf_stride   = 0
[ 1914.280310]     plane_stride  = 0
[ 1914.280488] ]
[ 1914.280506] wgs_data            = [ dla_data_cube =>
[ 1914.280841]     type          = 0
[ 1914.281020]     address       = 0
[ 1914.281198]     offset        = 0
[ 1914.281377]     width         = 0
[ 1914.281568]     height        = 0
[ 1914.281751]     channel       = 0
[ 1914.281932]     size          = 0
[ 1914.282118]     line_stride   = 0
[ 1914.282308]     surf_stride   = 0
[ 1914.282490]     plane_stride  = 0
[ 1914.282666] ]
[ 1914.282683] src_data            = [ dla_data_cube =>
[ 1914.283020]     type          = 0
[ 1914.283206]     address       = 2
[ 1914.283393]     offset        = 6c0000
[ 1914.283593]     width         = e
[ 1914.283777]     height        = e
[ 1914.283962]     channel       = 100
[ 1914.284147]     size          = 100352
[ 1914.284351]     line_stride   = 448
[ 1914.284549]     surf_stride   = 6272
[ 1914.284751]     plane_stride  = 0
[ 1914.284925] ]
[ 1914.284941] dst_data            = [ dla_data_cube =>
[ 1914.285274]     type          = 2
[ 1914.285454]     address       = -1
[ 1914.285643]     offset        = 0
[ 1914.285822]     width         = 7
[ 1914.286011]     height        = 7
[ 1914.286197]     channel       = 200
[ 1914.286384]     size          = 50176
[ 1914.286572]     line_stride   = 224
[ 1914.286768]     surf_stride   = 1568
[ 1914.286968]     plane_stride  = 0
[ 1914.287140] ]
[ 1914.287160] offset_u            = 0
[ 1914.287428] in_line_uv_stride   = 0
[ 1914.287428] 
[ 1914.287691] *********************************************************
[ 1914.287978] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1914.288196] ---------------------------------------------------------
[ 1914.288484] conv_mode          = 0
[ 1914.288672] data_reuse         = 0
[ 1914.288858] weight_reuse       = 0
[ 1914.289049] skip_data_rls      = 0
[ 1914.289234] skip_weight_rls    = 0
[ 1914.289420] entry_per_slice    = 56
[ 1914.289614] data_format        = 36
[ 1914.289801] pixel_mapping      = 0
[ 1914.289988] fetch_grain        = 1
[ 1914.290175] batch              = 1
[ 1914.290363] weight_format      = 0
[ 1914.290548] data_bank          = 4
[ 1914.290739] weight_bank        = 6
[ 1914.290920] batch_stride       = 0
[ 1914.291103] post_extension     = 0
[ 1914.291292] pixel_override     = 1
[ 1914.291473] release            = 14
[ 1914.291661] input_width_csc    = 14
[ 1914.291844] input_height_csc   = 14
[ 1914.292042] input_channel_csc  = 256
[ 1914.292298] kernel_width_csc   = 3
[ 1914.292491] kernel_height_csc  = 3
[ 1914.292679] kernel_channel_csc = 256
[ 1914.292870] input_width_cmac   = 7
[ 1914.293074] input_height_cmac  = 7
[ 1914.293264] bytes_per_kernel   = 4608
[ 1914.293458] mean_ry            = 0
[ 1914.293658] mean_gu            = 0
[ 1914.293848] mean_bv            = 0
[ 1914.294032] mean_ax            = 0
[ 1914.294220] mean_format        = 0
[ 1914.294407] conv_stride_x      = 2
[ 1914.294605] conv_stride_y      = 2
[ 1914.294801] pad_x_left         = 1
[ 1914.294989] pad_x_right        = 1
[ 1914.295176] pad_y_top          = 1
[ 1914.295366] pad_y_bottom       = 1
[ 1914.295556] dilation_x         = 1
[ 1914.295738] dilation_y         = 1
[ 1914.295926] pra_truncate       = 0
[ 1914.296112] in_precision       = 2
[ 1914.296297] out_precision      = 2
[ 1914.296482] pad_val            = 0
[ 1914.296667] in_cvt             =
[ 1914.296854] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1914.297125] out_cvt            =
[ 1914.297310] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1914.297589] 
[ 1914.297712] Exit: dla_read_config
[ 1914.297906] Exit: dla_prepare_operation status=0
[ 1914.298136] Enter: dla_program_operation
[ 1914.298349] Program Convolution operation index 41 ROI 0 Group[0]
[ 1914.298918] 
[ 1914.298918] entered processor_conv_program():
[ 1914.299234] conv getting weight_address:
[ 1914.299445] entered dla_get_dma_cube_address(index = 1, offset = 0xc00000):
[ 1914.299749] entered dla_get_dma_address(index = 1):
[ 1914.299985] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1914.300241] entered dla_read_dma_address(index = 1):
[ 1914.300495] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1914.300804] *phys_addr = 0xc4000000 + 0x0
[ 1914.301019] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1914.301347] back to dla_get_dma_cube_address: dst_ptr += 0xc00000
[ 1914.301640] conv weight_addr = 0xc4c00000
[ 1914.301640] 
[ 1914.301918] conv getting input_address:
[ 1914.302112] entered dla_read_input_address():
[ 1914.302330] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7077888)
[ 1914.302695] entered dla_get_dma_cube_address(index = 2, offset = 0x6c0000):
[ 1914.302996] entered dla_get_dma_address(index = 2):
[ 1914.303226] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1914.303481] entered dla_read_dma_address(index = 2):
[ 1914.303725] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1914.304017] *phys_addr = 0xc0800000 + 0x0
[ 1914.304228] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1914.304538] back to dla_get_dma_cube_address: dst_ptr += 0x6c0000
[ 1914.304813] conv input_addr = 0xc0ec0000
[ 1914.304813] 
[ 1914.309738] no desc get due to index==-1
[ 1914.310028] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1914.310783] no desc get due to index==-1
[ 1914.311192] no desc get due to index==-1
[ 1914.311587] no desc get due to index==-1
[ 1914.311981] no desc get due to index==-1
[ 1914.312380] Enter: dla_op_programmed
[ 1914.312775] Update dependency operation index 43 ROI 0 DEP_COUNT=3
[ 1914.313437] Update dependency operation index 42 ROI 0 DEP_COUNT=1
[ 1914.314140] enable SDP in dla_update_dependency as depdency are resolved
[ 1914.314822] Enter: dla_enable_operation
[ 1914.315262] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1914.316123] Exit: dla_enable_operation status=0
[ 1914.316634] Exit: dla_op_programmed
[ 1914.317061] Exit: dla_program_operation status=0
[ 1914.317597] Exit: dla_submit_operation
[ 1914.318043] Exit: dla_dequeue_operation
[ 1914.318447] Exit:dla_op_completion processor Convolution group0 status=0
[ 1914.318776] Exit:dla_handle_events, ret:0
[ 1914.319003] Enter:dla_handle_events, processor:SDP
[ 1914.319271] Handle op complete event, processor SDP group 0
[ 1914.319568] Enter:dla_op_completion processor SDP group0
[ 1914.319860] Completed SDP operation index 38 ROI 0
[ 1914.320128] Update dependency operation index 39 ROI 0 DEP_COUNT=1
[ 1914.320447] enable Convolution in dla_update_dependency as depdency are resolved
[ 1914.320818] Enter: dla_enable_operation
[ 1914.321054] Enable Convolution operation index 39 ROI 0
[ 1914.321947] Enter: dla_op_enabled
[ 1914.322165] Exit: dla_op_enabled
[ 1914.322371] Exit: dla_enable_operation status=0
[ 1914.322635] 39 HWLs done, totally 52 layers
[ 1914.322872] Enter: dla_free_op_desc op desc index 37 ROI 0
[ 1914.323192] Exit: dla_free_op_desc
[ 1914.323414] Enter: dla_dequeue_operation
[ 1914.323656] Dequeue op from SDP processor, index=42 ROI=0
[ 1914.323914] Enter: dla_submit_operation
[ 1914.324123] Prepare SDP operation index 42 ROI 0 dep_count 0
[ 1914.324383] Enter: dla_prepare_operation
[ 1914.396276] processor:SDP group:0, rdma_group:0 available
[ 1914.396699] Enter: dla_read_config
[ 1914.397025] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1914.397786] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1914.398623] *********************************************************
[ 1914.399075] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1914.399433] ---------------------------------------------------------
[ 1914.399883] src_data            = [ dla_data_cube =>
[ 1914.400254]     type          = 2
[ 1914.400496]     address       = -1
[ 1914.400730]     offset        = 0
[ 1914.400952]     width         = 7
[ 1914.401180]     height        = 7
[ 1914.401404]     channel       = 200
[ 1914.401642]     size          = 50176
[ 1914.401888]     line_stride   = 224
[ 1914.402123]     surf_stride   = 1568
[ 1914.402360]     plane_stride  = 0
[ 1914.402578] ]
[ 1914.402603] x1_data             = [ dla_data_cube =>
[ 1914.403014]     type          = 0
[ 1914.403241]     address       = 1
[ 1914.403504]     offset        = 1f000
[ 1914.403800]     width         = 1
[ 1914.404077]     height        = 1
[ 1914.404359]     channel       = 200
[ 1914.404653]     size          = 1024
[ 1914.404951]     line_stride   = 32
[ 1914.405237]     surf_stride   = 32
[ 1914.405540]     plane_stride  = 0
[ 1914.405818] ]
[ 1914.405845] x2_data             = [ dla_data_cube =>
[ 1914.406353]     type          = 0
[ 1914.406534]     address       = 0
[ 1914.406713]     offset        = 0
[ 1914.406885]     width         = 0
[ 1914.407062]     height        = 0
[ 1914.407239]     channel       = 0
[ 1914.407422]     size          = 0
[ 1914.407603]     line_stride   = 0
[ 1914.407787]     surf_stride   = 0
[ 1914.407976]     plane_stride  = 0
[ 1914.408152] ]
[ 1914.408169] y_data              = [ dla_data_cube =>
[ 1914.408504]     type          = 0
[ 1914.408695]     address       = 0
[ 1914.408877]     offset        = 0
[ 1914.409052]     width         = 0
[ 1914.409234]     height        = 0
[ 1914.409414]     channel       = 0
[ 1914.409607]     size          = 0
[ 1914.409793]     line_stride   = 0
[ 1914.409968]     surf_stride   = 0
[ 1914.410143]     plane_stride  = 0
[ 1914.410322] ]
[ 1914.410340] dst_data            = [ dla_data_cube =>
[ 1914.410671]     type          = 0
[ 1914.410852]     address       = 2
[ 1914.411024]     offset        = 6f0000
[ 1914.411220]     width         = 7
[ 1914.411396]     height        = 7
[ 1914.411573]     channel       = 200
[ 1914.411761]     size          = 50176
[ 1914.411946]     line_stride   = 224
[ 1914.412140]     surf_stride   = 1568
[ 1914.412341]     plane_stride  = 0
[ 1914.412522] ]
[ 1914.412542] *********************************************************
[ 1914.412927] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1914.413143] ---------------------------------------------------------
[ 1914.413431] src_precision    = 2
[ 1914.413616] dst_precision    = 2
[ 1914.413802] lut_index        = -1
[ 1914.413986] out_cvt          =
[ 1914.414167] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1914.414444] conv_mode        = 0
[ 1914.414618] batch_num        = 1
[ 1914.414800] batch_stride     = 0
[ 1914.414978] x1_op            = [ dla_sdp_op =>
[ 1914.415198]     enable         = 1
[ 1914.415386]     alu_type       = 2
[ 1914.415571]     type           = 2
[ 1914.415758]     mode           = 1
[ 1914.415942]     act            = 1
[ 1914.416130]     shift_value    = 0
[ 1914.416314]     truncate       = 0
[ 1914.416503]     precision      = 2
[ 1914.416687]     alu_operand    = 0
[ 1914.416872]     mul_operand    = 1
[ 1914.417050] cvt.alu_cvt          =
[ 1914.417248] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.417528] cvt.mul_cvt          =
[ 1914.417722] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.417993] ]
[ 1914.418111] x2_op            = [ dla_sdp_op =>
[ 1914.418336]     enable         = 0
[ 1914.418520]     alu_type       = 0
[ 1914.418704]     type           = 0
[ 1914.418890]     mode           = 0
[ 1914.419154]     act            = 0
[ 1914.419431]     shift_value    = 0
[ 1914.419710]     truncate       = 0
[ 1914.419980]     precision      = 0
[ 1914.420245]     alu_operand    = 0
[ 1914.420507]     mul_operand    = 0
[ 1914.420757] cvt.alu_cvt          =
[ 1914.421033] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.421430] cvt.mul_cvt          =
[ 1914.421706] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.422114] ]
[ 1914.422299] y_op             = [ dla_sdp_op =>
[ 1914.422528]     enable         = 0
[ 1914.422715]     alu_type       = 0
[ 1914.422898]     type           = 0
[ 1914.423086]     mode           = 0
[ 1914.423270]     act            = 0
[ 1914.423453]     shift_value    = 0
[ 1914.423636]     truncate       = 0
[ 1914.423818]     precision      = 0
[ 1914.424000]     alu_operand    = 0
[ 1914.424189]     mul_operand    = 0
[ 1914.424369] cvt.alu_cvt          =
[ 1914.424553] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.424819] cvt.mul_cvt          =
[ 1914.425006] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1914.425271] ]
[ 1914.425395] Exit: dla_read_config
[ 1914.425590] Exit: dla_prepare_operation status=0
[ 1914.425842] Enter: dla_program_operation
[ 1914.426056] Program SDP operation index 42 ROI 0 Group[0]
[ 1914.427450] 
[ 1914.427450] entered processor_sdp_program():
[ 1914.427746] sdp skip getting src_addr
[ 1914.427746] 
[ 1914.428022] sdp getting dst_addr:
[ 1914.428206] entered dla_get_dma_cube_address(index = 2, offset = 0x6f0000):
[ 1914.428515] entered dla_get_dma_address(index = 2):
[ 1914.428755] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1914.429017] entered dla_read_dma_address(index = 2):
[ 1914.429250] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1914.429559] *phys_addr = 0xc0800000 + 0x0
[ 1914.429778] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1914.430086] back to dla_get_dma_cube_address: dst_ptr += 0x6f0000
[ 1914.430364] sdp dst_addr = 0xc0ef0000
[ 1914.430364] 
[ 1914.430633] sdp getting x1_addr:
[ 1914.430816] entered dla_get_dma_cube_address(index = 1, offset = 0x1f000):
[ 1914.431120] entered dla_get_dma_address(index = 1):
[ 1914.431368] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1914.431622] entered dla_read_dma_address(index = 1):
[ 1914.431865] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1914.432163] *phys_addr = 0xc4000000 + 0x0
[ 1914.432376] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1914.432692] back to dla_get_dma_cube_address: dst_ptr += 0x1f000
[ 1914.432962] sdp x1_addr = 0xc401f000
[ 1914.432962] 
[ 1914.433225] sdp skip getting x2_addr
[ 1914.433225] 
[ 1914.433485] sdp skip getting y_addr
[ 1914.433485] 
[ 1914.442341] no desc get due to index==-1
[ 1914.442806] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1914.443686] no desc get due to index==-1
[ 1914.444085] no desc get due to index==-1
[ 1914.444481] no desc get due to index==-1
[ 1914.444880] Enter: dla_op_programmed
[ 1914.445274] Update dependency operation index 44 ROI 0 DEP_COUNT=2
[ 1914.445843] Exit: dla_op_programmed
[ 1914.446220] Exit: dla_program_operation status=0
[ 1914.446664] Enter: dla_enable_operation
[ 1914.447071] Enable SDP operation index 42 ROI 0
[ 1914.448488] Enter: dla_op_enabled
[ 1914.448874] Update dependency operation index 41 ROI 0 DEP_COUNT=2
[ 1914.449421] Exit: dla_op_enabled
[ 1914.449788] Exit: dla_enable_operation status=0
[ 1914.450225] Exit: dla_submit_operation
[ 1914.450612] Exit: dla_dequeue_operation
[ 1914.451017] Enter: dla_free_op_desc op desc index 38 ROI 0
[ 1914.451560] Exit: dla_free_op_desc
[ 1914.451949] Exit:dla_op_completion processor SDP group0 status=0
[ 1914.452488] Exit:dla_handle_events, ret:0
[ 1914.452893] Enter:dla_handle_events, processor:PDP
[ 1914.453350] Exit:dla_handle_events, ret:0
[ 1914.453778] Enter:dla_handle_events, processor:CDP
[ 1914.454238] Exit:dla_handle_events, ret:0
[ 1914.454496] Enter:dla_handle_events, processor:RUBIK
[ 1914.454741] Exit:dla_handle_events, ret:0
[ 1919.888752] Enter:dla_handle_events, processor:BDMA
[ 1919.889167] Exit:dla_handle_events, ret:0
[ 1919.889438] Enter:dla_handle_events, processor:Convolution
[ 1919.889785] Handle cdma weight done event, processor Convolution group 1
[ 1919.890166] Handle cdma data done event, processor Convolution group 1
[ 1919.890535] Handle op complete event, processor Convolution group 1
[ 1919.890890] Enter:dla_op_completion processor Convolution group1
[ 1919.891236] Completed Convolution operation index 39 ROI 0
[ 1919.891565] 40 HWLs done, totally 52 layers
[ 1919.891836] Enter: dla_dequeue_operation
[ 1919.892088] Dequeue op from Convolution processor, index=43 ROI=0
[ 1919.892434] Enter: dla_submit_operation
[ 1919.892693] Prepare Convolution operation index 43 ROI 0 dep_count 2
[ 1919.893047] Enter: dla_prepare_operation
[ 1919.893376] processor:Convolution group:1, rdma_group:0 available
[ 1919.893727] Enter: dla_read_config
[ 1919.894014] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1919.894612] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1919.895276] *********************************************************
[ 1919.895670] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1919.895956] ---------------------------------------------------------
[ 1919.896322] weight_data         = [ dla_data_cube =>
[ 1919.896712]     type          = 0
[ 1919.897010]     address       = 1
[ 1919.897311]     offset        = 1000000
[ 1919.897661]     width         = 3
[ 1919.897961]     height        = 3
[ 1919.898259]     channel       = 200
[ 1919.898514]     size          = 4718592
[ 1919.898712]     line_stride   = 0
[ 1919.898891]     surf_stride   = 0
[ 1919.899064]     plane_stride  = 0
[ 1919.899241] ]
[ 1919.899262] wmb_data            = [ dla_data_cube =>
[ 1919.899625]     type          = 0
[ 1919.899810]     address       = 0
[ 1919.899992]     offset        = 0
[ 1919.900168]     width         = 0
[ 1919.900353]     height        = 0
[ 1919.900577]     channel       = 0
[ 1919.900756]     size          = 0
[ 1919.900944]     line_stride   = 0
[ 1919.901123]     surf_stride   = 0
[ 1919.901305]     plane_stride  = 0
[ 1919.901479] ]
[ 1919.901502] wgs_data            = [ dla_data_cube =>
[ 1919.901841]     type          = 0
[ 1919.902024]     address       = 0
[ 1919.902203]     offset        = 0
[ 1919.902380]     width         = 0
[ 1919.902557]     height        = 0
[ 1919.902736]     channel       = 0
[ 1919.902915]     size          = 0
[ 1919.903099]     line_stride   = 0
[ 1919.903284]     surf_stride   = 0
[ 1919.903469]     plane_stride  = 0
[ 1919.903644] ]
[ 1919.903662] src_data            = [ dla_data_cube =>
[ 1919.903992]     type          = 0
[ 1919.904169]     address       = 2
[ 1919.904350]     offset        = 6f0000
[ 1919.904555]     width         = 7
[ 1919.904739]     height        = 7
[ 1919.904922]     channel       = 200
[ 1919.905110]     size          = 50176
[ 1919.905307]     line_stride   = 224
[ 1919.905502]     surf_stride   = 1568
[ 1919.905700]     plane_stride  = 0
[ 1919.905877] ]
[ 1919.905895] dst_data            = [ dla_data_cube =>
[ 1919.906238]     type          = 2
[ 1919.906431]     address       = -1
[ 1919.906617]     offset        = 0
[ 1919.906807]     width         = 7
[ 1919.906996]     height        = 7
[ 1919.907177]     channel       = 200
[ 1919.907366]     size          = 50176
[ 1919.907556]     line_stride   = 224
[ 1919.907748]     surf_stride   = 1568
[ 1919.907950]     plane_stride  = 0
[ 1919.908126] ]
[ 1919.908147] offset_u            = 0
[ 1919.908424] in_line_uv_stride   = 0
[ 1919.908424] 
[ 1919.908686] *********************************************************
[ 1919.908975] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1919.909198] ---------------------------------------------------------
[ 1919.909488] conv_mode          = 0
[ 1919.909687] data_reuse         = 0
[ 1919.909872] weight_reuse       = 0
[ 1919.910058] skip_data_rls      = 0
[ 1919.910243] skip_weight_rls    = 0
[ 1919.910431] entry_per_slice    = 56
[ 1919.910618] data_format        = 36
[ 1919.910810] pixel_mapping      = 0
[ 1919.911001] fetch_grain        = 1
[ 1919.911186] batch              = 1
[ 1919.911370] weight_format      = 0
[ 1919.911566] data_bank          = 2
[ 1919.911754] weight_bank        = 10
[ 1919.911944] batch_stride       = 0
[ 1919.912135] post_extension     = 0
[ 1919.912324] pixel_override     = 1
[ 1919.912534] release            = 7
[ 1919.912725] input_width_csc    = 7
[ 1919.912911] input_height_csc   = 7
[ 1919.913102] input_channel_csc  = 512
[ 1919.913288] kernel_width_csc   = 3
[ 1919.913471] kernel_height_csc  = 3
[ 1919.913664] kernel_channel_csc = 512
[ 1919.913861] input_width_cmac   = 7
[ 1919.914048] input_height_cmac  = 7
[ 1919.914237] bytes_per_kernel   = 9216
[ 1919.914440] mean_ry            = 0
[ 1919.914627] mean_gu            = 0
[ 1919.914814] mean_bv            = 0
[ 1919.915002] mean_ax            = 0
[ 1919.915191] mean_format        = 0
[ 1919.915382] conv_stride_x      = 1
[ 1919.915566] conv_stride_y      = 1
[ 1919.915749] pad_x_left         = 1
[ 1919.915935] pad_x_right        = 1
[ 1919.916117] pad_y_top          = 1
[ 1919.916305] pad_y_bottom       = 1
[ 1919.916488] dilation_x         = 1
[ 1919.916670] dilation_y         = 1
[ 1919.916859] pra_truncate       = 0
[ 1919.917050] in_precision       = 2
[ 1919.917241] out_precision      = 2
[ 1919.917434] pad_val            = 0
[ 1919.917620] in_cvt             =
[ 1919.917813] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1919.918093] out_cvt            =
[ 1919.918280] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1919.918558] 
[ 1919.918680] Exit: dla_read_config
[ 1919.918871] Exit: dla_prepare_operation status=0
[ 1919.919106] Enter: dla_program_operation
[ 1919.919323] Program Convolution operation index 43 ROI 0 Group[1]
[ 1919.919953] 
[ 1919.919953] entered processor_conv_program():
[ 1919.920283] conv getting weight_address:
[ 1919.920492] entered dla_get_dma_cube_address(index = 1, offset = 0x1000000):
[ 1919.920820] entered dla_get_dma_address(index = 1):
[ 1919.921051] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1919.921309] entered dla_read_dma_address(index = 1):
[ 1919.921557] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1919.921876] *phys_addr = 0xc4000000 + 0x0
[ 1919.922090] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1919.922415] back to dla_get_dma_cube_address: dst_ptr += 0x1000000
[ 1919.922700] conv weight_addr = 0xc5000000
[ 1919.922700] 
[ 1919.922985] conv getting input_address:
[ 1919.923171] entered dla_read_input_address():
[ 1919.923424] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7274496)
[ 1919.923808] entered dla_get_dma_cube_address(index = 2, offset = 0x6f0000):
[ 1919.924117] entered dla_get_dma_address(index = 2):
[ 1919.924350] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1919.924605] entered dla_read_dma_address(index = 2):
[ 1919.924842] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1919.925142] *phys_addr = 0xc0800000 + 0x0
[ 1919.925351] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1919.925681] back to dla_get_dma_cube_address: dst_ptr += 0x6f0000
[ 1919.925960] conv input_addr = 0xc0ef0000
[ 1919.925960] 
[ 1919.929432] no desc get due to index==-1
[ 1919.929658] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1919.930107] no desc get due to index==-1
[ 1919.930311] no desc get due to index==-1
[ 1919.930514] no desc get due to index==-1
[ 1919.930715] no desc get due to index==-1
[ 1919.930923] Enter: dla_op_programmed
[ 1919.931123] Update dependency operation index 45 ROI 0 DEP_COUNT=3
[ 1919.931418] Update dependency operation index 44 ROI 0 DEP_COUNT=1
[ 1919.931710] enable SDP in dla_update_dependency as depdency are resolved
[ 1919.932018] Enter: dla_enable_operation
[ 1919.932221] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1919.932633] Exit: dla_enable_operation status=0
[ 1919.932866] Exit: dla_op_programmed
[ 1919.933071] Exit: dla_program_operation status=0
[ 1919.933307] Exit: dla_submit_operation
[ 1919.933514] Exit: dla_dequeue_operation
[ 1919.933732] Exit:dla_op_completion processor Convolution group1 status=0
[ 1919.934042] Exit:dla_handle_events, ret:0
[ 1919.934247] Enter:dla_handle_events, processor:SDP
[ 1919.934478] Handle op complete event, processor SDP group 1
[ 1919.934736] Enter:dla_op_completion processor SDP group1
[ 1919.934993] Completed SDP operation index 40 ROI 0
[ 1919.935239] Update dependency operation index 41 ROI 0 DEP_COUNT=1
[ 1919.935527] enable Convolution in dla_update_dependency as depdency are resolved
[ 1919.935882] Enter: dla_enable_operation
[ 1919.936090] Enable Convolution operation index 41 ROI 0
[ 1919.936901] Enter: dla_op_enabled
[ 1919.937094] Exit: dla_op_enabled
[ 1919.937273] Exit: dla_enable_operation status=0
[ 1919.937513] 41 HWLs done, totally 52 layers
[ 1919.937739] Enter: dla_free_op_desc op desc index 39 ROI 0
[ 1919.938033] Exit: dla_free_op_desc
[ 1919.938226] Enter: dla_dequeue_operation
[ 1919.938442] Dequeue op from SDP processor, index=44 ROI=0
[ 1919.938697] Enter: dla_submit_operation
[ 1919.938903] Prepare SDP operation index 44 ROI 0 dep_count 0
[ 1919.939190] Enter: dla_prepare_operation
[ 1919.992551] processor:SDP group:1, rdma_group:1 available
[ 1919.992888] Enter: dla_read_config
[ 1919.993162] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1919.993782] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1919.994482] *********************************************************
[ 1919.994957] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1919.995323] ---------------------------------------------------------
[ 1919.995782] src_data            = [ dla_data_cube =>
[ 1919.996161]     type          = 2
[ 1919.996455]     address       = -1
[ 1919.996751]     offset        = 0
[ 1919.997039]     width         = 7
[ 1919.997331]     height        = 7
[ 1919.997630]     channel       = 200
[ 1919.997938]     size          = 50176
[ 1919.998249]     line_stride   = 224
[ 1919.998552]     surf_stride   = 1568
[ 1919.998853]     plane_stride  = 0
[ 1919.999138] ]
[ 1919.999169] x1_data             = [ dla_data_cube =>
[ 1919.999704]     type          = 0
[ 1919.999997]     address       = 1
[ 1920.000292]     offset        = b0000
[ 1920.000601]     width         = 1
[ 1920.000890]     height        = 1
[ 1920.001184]     channel       = 200
[ 1920.001480]     size          = 1024
[ 1920.001803]     line_stride   = 32
[ 1920.002102]     surf_stride   = 32
[ 1920.002391]     plane_stride  = 0
[ 1920.002568] ]
[ 1920.002586] x2_data             = [ dla_data_cube =>
[ 1920.002915]     type          = 0
[ 1920.003095]     address       = 2
[ 1920.003271]     offset        = 6e0000
[ 1920.003462]     width         = 7
[ 1920.003639]     height        = 7
[ 1920.003814]     channel       = 200
[ 1920.004004]     size          = 50176
[ 1920.004195]     line_stride   = 224
[ 1920.004380]     surf_stride   = 1568
[ 1920.004571]     plane_stride  = 0
[ 1920.004753] ]
[ 1920.004770] y_data              = [ dla_data_cube =>
[ 1920.005119]     type          = 0
[ 1920.005306]     address       = 0
[ 1920.005482]     offset        = 0
[ 1920.005667]     width         = 0
[ 1920.005845]     height        = 0
[ 1920.006026]     channel       = 0
[ 1920.006201]     size          = 0
[ 1920.006382]     line_stride   = 0
[ 1920.006562]     surf_stride   = 0
[ 1920.006740]     plane_stride  = 0
[ 1920.006915] ]
[ 1920.006933] dst_data            = [ dla_data_cube =>
[ 1920.007270]     type          = 0
[ 1920.007451]     address       = 2
[ 1920.007634]     offset        = 700000
[ 1920.007825]     width         = 7
[ 1920.008007]     height        = 7
[ 1920.008191]     channel       = 200
[ 1920.008375]     size          = 50176
[ 1920.008563]     line_stride   = 224
[ 1920.008743]     surf_stride   = 1568
[ 1920.008937]     plane_stride  = 0
[ 1920.009119] ]
[ 1920.009138] *********************************************************
[ 1920.009511] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1920.009725] ---------------------------------------------------------
[ 1920.010014] src_precision    = 2
[ 1920.010193] dst_precision    = 2
[ 1920.010370] lut_index        = -1
[ 1920.010545] out_cvt          =
[ 1920.010721] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1920.010990] conv_mode        = 0
[ 1920.011168] batch_num        = 1
[ 1920.011350] batch_stride     = 0
[ 1920.011522] x1_op            = [ dla_sdp_op =>
[ 1920.011747]     enable         = 1
[ 1920.011936]     alu_type       = 2
[ 1920.012119]     type           = 2
[ 1920.012304]     mode           = 1
[ 1920.012488]     act            = 0
[ 1920.012674]     shift_value    = 0
[ 1920.012858]     truncate       = 0
[ 1920.013040]     precision      = 2
[ 1920.013224]     alu_operand    = 0
[ 1920.013436]     mul_operand    = 1
[ 1920.013631] cvt.alu_cvt          =
[ 1920.013830] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.014132] cvt.mul_cvt          =
[ 1920.014325] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.014603] ]
[ 1920.014722] x2_op            = [ dla_sdp_op =>
[ 1920.014946]     enable         = 1
[ 1920.015134]     alu_type       = 2
[ 1920.015314]     type           = 2
[ 1920.015498]     mode           = 2
[ 1920.015682]     act            = 1
[ 1920.015863]     shift_value    = 0
[ 1920.016043]     truncate       = 0
[ 1920.016225]     precision      = 2
[ 1920.016412]     alu_operand    = 0
[ 1920.016627]     mul_operand    = 1
[ 1920.016813] cvt.alu_cvt          =
[ 1920.017001] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.017282] cvt.mul_cvt          =
[ 1920.017460] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.017734] ]
[ 1920.017854] y_op             = [ dla_sdp_op =>
[ 1920.018073]     enable         = 0
[ 1920.018266]     alu_type       = 0
[ 1920.018446]     type           = 0
[ 1920.018631]     mode           = 0
[ 1920.018818]     act            = 0
[ 1920.018998]     shift_value    = 0
[ 1920.019184]     truncate       = 0
[ 1920.019374]     precision      = 0
[ 1920.019561]     alu_operand    = 0
[ 1920.019749]     mul_operand    = 0
[ 1920.019932] cvt.alu_cvt          =
[ 1920.020117] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.020385] cvt.mul_cvt          =
[ 1920.020574] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1920.020846] ]
[ 1920.020973] Exit: dla_read_config
[ 1920.021160] Exit: dla_prepare_operation status=0
[ 1920.021398] Enter: dla_program_operation
[ 1920.021612] Program SDP operation index 44 ROI 0 Group[1]
[ 1920.022935] 
[ 1920.022935] entered processor_sdp_program():
[ 1920.023234] sdp skip getting src_addr
[ 1920.023234] 
[ 1920.023499] sdp getting dst_addr:
[ 1920.023685] entered dla_get_dma_cube_address(index = 2, offset = 0x700000):
[ 1920.023991] entered dla_get_dma_address(index = 2):
[ 1920.024224] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1920.024482] entered dla_read_dma_address(index = 2):
[ 1920.024719] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1920.025011] *phys_addr = 0xc0800000 + 0x0
[ 1920.025222] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1920.025538] back to dla_get_dma_cube_address: dst_ptr += 0x700000
[ 1920.025819] sdp dst_addr = 0xc0f00000
[ 1920.025819] 
[ 1920.026076] sdp getting x1_addr:
[ 1920.026257] entered dla_get_dma_cube_address(index = 1, offset = 0xb0000):
[ 1920.026564] entered dla_get_dma_address(index = 1):
[ 1920.026795] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1920.027051] entered dla_read_dma_address(index = 1):
[ 1920.027295] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1920.027589] *phys_addr = 0xc4000000 + 0x0
[ 1920.027795] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1920.028110] back to dla_get_dma_cube_address: dst_ptr += 0xb0000
[ 1920.028436] sdp x1_addr = 0xc40b0000
[ 1920.028436] 
[ 1920.028739] sdp getting x2_addr:
[ 1920.028940] entered dla_get_dma_cube_address(index = 2, offset = 0x6e0000):
[ 1920.029300] entered dla_get_dma_address(index = 2):
[ 1920.029575] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1920.029881] entered dla_read_dma_address(index = 2):
[ 1920.030157] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1920.030507] *phys_addr = 0xc0800000 + 0x0
[ 1920.030760] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1920.031138] back to dla_get_dma_cube_address: dst_ptr += 0x6e0000
[ 1920.031481] sdp x1_addr = 0xc0ee0000
[ 1920.031481] 
[ 1920.031790] sdp skip getting y_addr
[ 1920.031790] 
[ 1920.042028] no desc get due to index==-1
[ 1920.042374] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1920.043398] no desc get due to index==-1
[ 1920.043870] no desc get due to index==-1
[ 1920.044335] no desc get due to index==-1
[ 1920.044809] Enter: dla_op_programmed
[ 1920.045261] Update dependency operation index 46 ROI 0 DEP_COUNT=2
[ 1920.045929] Exit: dla_op_programmed
[ 1920.046366] Exit: dla_program_operation status=0
[ 1920.046894] Enter: dla_enable_operation
[ 1920.047372] Enable SDP operation index 44 ROI 0
[ 1920.049747] Enter: dla_op_enabled
[ 1920.050052] Update dependency operation index 43 ROI 0 DEP_COUNT=2
[ 1920.050461] Exit: dla_op_enabled
[ 1920.050712] Exit: dla_enable_operation status=0
[ 1920.051037] Exit: dla_submit_operation
[ 1920.051319] Exit: dla_dequeue_operation
[ 1920.051621] Enter: dla_free_op_desc op desc index 40 ROI 0
[ 1920.052054] Exit: dla_free_op_desc
[ 1920.052348] Exit:dla_op_completion processor SDP group1 status=0
[ 1920.052738] Exit:dla_handle_events, ret:0
[ 1920.053050] Enter:dla_handle_events, processor:PDP
[ 1920.053409] Exit:dla_handle_events, ret:0
[ 1920.053717] Enter:dla_handle_events, processor:CDP
[ 1920.054070] Exit:dla_handle_events, ret:0
[ 1920.054371] Enter:dla_handle_events, processor:RUBIK
[ 1920.054718] Exit:dla_handle_events, ret:0
[ 1961.656720] Enter:dla_handle_events, processor:BDMA
[ 1961.657387] Exit:dla_handle_events, ret:0
[ 1961.657828] Enter:dla_handle_events, processor:Convolution
[ 1961.658362] Handle cdma weight done event, processor Convolution group 0
[ 1961.658987] Handle cdma data done event, processor Convolution group 0
[ 1961.659601] Handle op complete event, processor Convolution group 0
[ 1961.660180] Enter:dla_op_completion processor Convolution group0
[ 1961.660737] Completed Convolution operation index 41 ROI 0
[ 1961.661283] 42 HWLs done, totally 52 layers
[ 1961.661735] Enter: dla_dequeue_operation
[ 1961.662160] Dequeue op from Convolution processor, index=45 ROI=0
[ 1961.662734] Enter: dla_submit_operation
[ 1961.663165] Prepare Convolution operation index 45 ROI 0 dep_count 2
[ 1961.663759] Enter: dla_prepare_operation
[ 1961.664336] processor:Convolution group:0, rdma_group:0 available
[ 1961.664846] Enter: dla_read_config
[ 1961.665076] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1961.665567] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1961.666097] *********************************************************
[ 1961.666395] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 1961.666623] ---------------------------------------------------------
[ 1961.666897] weight_data         = [ dla_data_cube =>
[ 1961.667140]     type          = 0
[ 1961.667323]     address       = 1
[ 1961.667504]     offset        = 1800000
[ 1961.667708]     width         = 3
[ 1961.667890]     height        = 3
[ 1961.668074]     channel       = 200
[ 1961.668262]     size          = 4718592
[ 1961.668465]     line_stride   = 0
[ 1961.668649]     surf_stride   = 0
[ 1961.668840]     plane_stride  = 0
[ 1961.669019] ]
[ 1961.669040] wmb_data            = [ dla_data_cube =>
[ 1961.669371]     type          = 0
[ 1961.669561]     address       = 0
[ 1961.669744]     offset        = 0
[ 1961.669927]     width         = 0
[ 1961.670108]     height        = 0
[ 1961.670293]     channel       = 0
[ 1961.670483]     size          = 0
[ 1961.670674]     line_stride   = 0
[ 1961.670857]     surf_stride   = 0
[ 1961.671043]     plane_stride  = 0
[ 1961.671224] ]
[ 1961.671242] wgs_data            = [ dla_data_cube =>
[ 1961.671578]     type          = 0
[ 1961.671763]     address       = 0
[ 1961.671939]     offset        = 0
[ 1961.672124]     width         = 0
[ 1961.672308]     height        = 0
[ 1961.672490]     channel       = 0
[ 1961.672679]     size          = 0
[ 1961.672855]     line_stride   = 0
[ 1961.673044]     surf_stride   = 0
[ 1961.673233]     plane_stride  = 0
[ 1961.673417] ]
[ 1961.673434] src_data            = [ dla_data_cube =>
[ 1961.673794]     type          = 0
[ 1961.673981]     address       = 2
[ 1961.674160]     offset        = 700000
[ 1961.674350]     width         = 7
[ 1961.674530]     height        = 7
[ 1961.674719]     channel       = 200
[ 1961.674906]     size          = 50176
[ 1961.675108]     line_stride   = 224
[ 1961.675303]     surf_stride   = 1568
[ 1961.675490]     plane_stride  = 0
[ 1961.675667] ]
[ 1961.675684] dst_data            = [ dla_data_cube =>
[ 1961.676020]     type          = 2
[ 1961.676207]     address       = -1
[ 1961.676391]     offset        = 0
[ 1961.676578]     width         = 7
[ 1961.676762]     height        = 7
[ 1961.676941]     channel       = 200
[ 1961.677128]     size          = 50176
[ 1961.677326]     line_stride   = 224
[ 1961.677517]     surf_stride   = 1568
[ 1961.677709]     plane_stride  = 0
[ 1961.677889] ]
[ 1961.677909] offset_u            = 0
[ 1961.678184] in_line_uv_stride   = 0
[ 1961.678184] 
[ 1961.678445] *********************************************************
[ 1961.678729] NVDLA FW ROI[0]: dla_conv_op_desc
[ 1961.678943] ---------------------------------------------------------
[ 1961.679229] conv_mode          = 0
[ 1961.679410] data_reuse         = 0
[ 1961.679599] weight_reuse       = 0
[ 1961.679790] skip_data_rls      = 0
[ 1961.679979] skip_weight_rls    = 0
[ 1961.680160] entry_per_slice    = 56
[ 1961.680348] data_format        = 36
[ 1961.680534] pixel_mapping      = 0
[ 1961.680719] fetch_grain        = 1
[ 1961.680904] batch              = 1
[ 1961.681087] weight_format      = 0
[ 1961.681278] data_bank          = 2
[ 1961.681466] weight_bank        = 10
[ 1961.681660] batch_stride       = 0
[ 1961.681849] post_extension     = 0
[ 1961.682035] pixel_override     = 1
[ 1961.682217] release            = 7
[ 1961.682401] input_width_csc    = 7
[ 1961.682588] input_height_csc   = 7
[ 1961.682771] input_channel_csc  = 512
[ 1961.682963] kernel_width_csc   = 3
[ 1961.683158] kernel_height_csc  = 3
[ 1961.683345] kernel_channel_csc = 512
[ 1961.683530] input_width_cmac   = 7
[ 1961.683716] input_height_cmac  = 7
[ 1961.683899] bytes_per_kernel   = 9216
[ 1961.684094] mean_ry            = 0
[ 1961.684280] mean_gu            = 0
[ 1961.684458] mean_bv            = 0
[ 1961.684652] mean_ax            = 0
[ 1961.684840] mean_format        = 0
[ 1961.685024] conv_stride_x      = 1
[ 1961.685207] conv_stride_y      = 1
[ 1961.685395] pad_x_left         = 1
[ 1961.685597] pad_x_right        = 1
[ 1961.685787] pad_y_top          = 1
[ 1961.685981] pad_y_bottom       = 1
[ 1961.686169] dilation_x         = 1
[ 1961.686357] dilation_y         = 1
[ 1961.686541] pra_truncate       = 0
[ 1961.686730] in_precision       = 2
[ 1961.686914] out_precision      = 2
[ 1961.687104] pad_val            = 0
[ 1961.687286] in_cvt             =
[ 1961.687470] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1961.687735] out_cvt            =
[ 1961.687919] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 1961.688189] 
[ 1961.688307] Exit: dla_read_config
[ 1961.688491] Exit: dla_prepare_operation status=0
[ 1961.688719] Enter: dla_program_operation
[ 1961.688929] Program Convolution operation index 45 ROI 0 Group[0]
[ 1961.689568] 
[ 1961.689568] entered processor_conv_program():
[ 1961.689872] conv getting weight_address:
[ 1961.690082] entered dla_get_dma_cube_address(index = 1, offset = 0x1800000):
[ 1961.690399] entered dla_get_dma_address(index = 1):
[ 1961.690637] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1961.690893] entered dla_read_dma_address(index = 1):
[ 1961.691141] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1961.691453] *phys_addr = 0xc4000000 + 0x0
[ 1961.691670] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1961.691991] back to dla_get_dma_cube_address: dst_ptr += 0x1800000
[ 1961.692276] conv weight_addr = 0xc5800000
[ 1961.692276] 
[ 1961.692554] conv getting input_address:
[ 1961.692751] entered dla_read_input_address():
[ 1961.692976] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7340032)
[ 1961.693348] entered dla_get_dma_cube_address(index = 2, offset = 0x700000):
[ 1961.693669] entered dla_get_dma_address(index = 2):
[ 1961.693905] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1961.694171] entered dla_read_dma_address(index = 2):
[ 1961.694413] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1961.694708] *phys_addr = 0xc0800000 + 0x0
[ 1961.694924] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1961.695242] back to dla_get_dma_cube_address: dst_ptr += 0x700000
[ 1961.695523] conv input_addr = 0xc0f00000
[ 1961.695523] 
[ 1961.699205] no desc get due to index==-1
[ 1961.699434] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1961.699889] no desc get due to index==-1
[ 1961.700090] no desc get due to index==-1
[ 1961.700301] no desc get due to index==-1
[ 1961.700505] no desc get due to index==-1
[ 1961.700708] Enter: dla_op_programmed
[ 1961.700910] Update dependency operation index 47 ROI 0 DEP_COUNT=3
[ 1961.701204] Update dependency operation index 46 ROI 0 DEP_COUNT=1
[ 1961.701493] enable SDP in dla_update_dependency as depdency are resolved
[ 1961.701799] Enter: dla_enable_operation
[ 1961.701999] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 1961.702401] Exit: dla_enable_operation status=0
[ 1961.702630] Exit: dla_op_programmed
[ 1961.702820] Exit: dla_program_operation status=0
[ 1961.703044] Exit: dla_submit_operation
[ 1961.703241] Exit: dla_dequeue_operation
[ 1961.703447] Exit:dla_op_completion processor Convolution group0 status=0
[ 1961.703760] Exit:dla_handle_events, ret:0
[ 1961.703979] Enter:dla_handle_events, processor:SDP
[ 1961.704220] Handle op complete event, processor SDP group 0
[ 1961.704487] Enter:dla_op_completion processor SDP group0
[ 1961.704747] Completed SDP operation index 42 ROI 0
[ 1961.704994] Update dependency operation index 43 ROI 0 DEP_COUNT=1
[ 1961.705289] enable Convolution in dla_update_dependency as depdency are resolved
[ 1961.705639] Enter: dla_enable_operation
[ 1961.705847] Enable Convolution operation index 43 ROI 0
[ 1961.706654] Enter: dla_op_enabled
[ 1961.706842] Exit: dla_op_enabled
[ 1961.707025] Exit: dla_enable_operation status=0
[ 1961.707249] 43 HWLs done, totally 52 layers
[ 1961.707469] Enter: dla_free_op_desc op desc index 41 ROI 0
[ 1961.707752] Exit: dla_free_op_desc
[ 1961.707944] Enter: dla_dequeue_operation
[ 1961.708138] Dequeue op from SDP processor, index=46 ROI=0
[ 1961.708393] Enter: dla_submit_operation
[ 1961.708606] Prepare SDP operation index 46 ROI 0 dep_count 0
[ 1961.708865] Enter: dla_prepare_operation
[ 1961.781288] processor:SDP group:0, rdma_group:0 available
[ 1961.781709] Enter: dla_read_config
[ 1961.782029] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 1961.782741] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 1961.783363] *********************************************************
[ 1961.783708] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 1961.783972] ---------------------------------------------------------
[ 1961.784314] src_data            = [ dla_data_cube =>
[ 1961.784593]     type          = 2
[ 1961.784844]     address       = -1
[ 1961.785122]     offset        = 0
[ 1961.785399]     width         = 7
[ 1961.785683]     height        = 7
[ 1961.785964]     channel       = 200
[ 1961.786251]     size          = 50176
[ 1961.786548]     line_stride   = 224
[ 1961.786803]     surf_stride   = 1568
[ 1961.787027]     plane_stride  = 0
[ 1961.787234] ]
[ 1961.787257] x1_data             = [ dla_data_cube =>
[ 1961.787657]     type          = 0
[ 1961.787875]     address       = 1
[ 1961.788090]     offset        = b1000
[ 1961.788318]     width         = 1
[ 1961.788534]     height        = 1
[ 1961.788746]     channel       = 200
[ 1961.788977]     size          = 1024
[ 1961.789205]     line_stride   = 32
[ 1961.789433]     surf_stride   = 32
[ 1961.789660]     plane_stride  = 0
[ 1961.789840] ]
[ 1961.789858] x2_data             = [ dla_data_cube =>
[ 1961.790177]     type          = 0
[ 1961.790355]     address       = 0
[ 1961.790528]     offset        = 0
[ 1961.790702]     width         = 0
[ 1961.790881]     height        = 0
[ 1961.791055]     channel       = 0
[ 1961.791234]     size          = 0
[ 1961.791407]     line_stride   = 0
[ 1961.791584]     surf_stride   = 0
[ 1961.791760]     plane_stride  = 0
[ 1961.791932] ]
[ 1961.791950] y_data              = [ dla_data_cube =>
[ 1961.792277]     type          = 0
[ 1961.792456]     address       = 0
[ 1961.792635]     offset        = 0
[ 1961.792810]     width         = 0
[ 1961.792986]     height        = 0
[ 1961.793161]     channel       = 0
[ 1961.793343]     size          = 0
[ 1961.793524]     line_stride   = 0
[ 1961.793710]     surf_stride   = 0
[ 1961.793890]     plane_stride  = 0
[ 1961.794065] ]
[ 1961.794083] dst_data            = [ dla_data_cube =>
[ 1961.794405]     type          = 0
[ 1961.794583]     address       = 2
[ 1961.794762]     offset        = 710000
[ 1961.794950]     width         = 7
[ 1961.795125]     height        = 7
[ 1961.795300]     channel       = 200
[ 1961.795484]     size          = 50176
[ 1961.795673]     line_stride   = 224
[ 1961.795863]     surf_stride   = 1568
[ 1961.796050]     plane_stride  = 0
[ 1961.796227] ]
[ 1961.796247] *********************************************************
[ 1961.796616] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 1961.796829] ---------------------------------------------------------
[ 1961.797106] src_precision    = 2
[ 1961.797283] dst_precision    = 2
[ 1961.797458] lut_index        = -1
[ 1961.797644] out_cvt          =
[ 1961.797825] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 1961.798087] conv_mode        = 0
[ 1961.798268] batch_num        = 1
[ 1961.798446] batch_stride     = 0
[ 1961.798620] x1_op            = [ dla_sdp_op =>
[ 1961.798841]     enable         = 1
[ 1961.799023]     alu_type       = 2
[ 1961.799204]     type           = 2
[ 1961.799388]     mode           = 1
[ 1961.799570]     act            = 1
[ 1961.799751]     shift_value    = 0
[ 1961.799933]     truncate       = 0
[ 1961.800117]     precision      = 2
[ 1961.800300]     alu_operand    = 0
[ 1961.800484]     mul_operand    = 1
[ 1961.800660] cvt.alu_cvt          =
[ 1961.800849] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.801105] cvt.mul_cvt          =
[ 1961.801295] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.801561] ]
[ 1961.801681] x2_op            = [ dla_sdp_op =>
[ 1961.801894]     enable         = 0
[ 1961.802074]     alu_type       = 0
[ 1961.802253]     type           = 0
[ 1961.802434]     mode           = 0
[ 1961.802614]     act            = 0
[ 1961.802795]     shift_value    = 0
[ 1961.802977]     truncate       = 0
[ 1961.803156]     precision      = 0
[ 1961.803343]     alu_operand    = 0
[ 1961.803526]     mul_operand    = 0
[ 1961.803706] cvt.alu_cvt          =
[ 1961.803892] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.804151] cvt.mul_cvt          =
[ 1961.804333] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.804604] ]
[ 1961.804723] y_op             = [ dla_sdp_op =>
[ 1961.804942]     enable         = 0
[ 1961.805128]     alu_type       = 0
[ 1961.805309]     type           = 0
[ 1961.805490]     mode           = 0
[ 1961.805676]     act            = 0
[ 1961.805855]     shift_value    = 0
[ 1961.806037]     truncate       = 0
[ 1961.806219]     precision      = 0
[ 1961.806398]     alu_operand    = 0
[ 1961.806582]     mul_operand    = 0
[ 1961.806763] cvt.alu_cvt          =
[ 1961.806941] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.807208] cvt.mul_cvt          =
[ 1961.807387] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 1961.807647] ]
[ 1961.807769] Exit: dla_read_config
[ 1961.807952] Exit: dla_prepare_operation status=0
[ 1961.808177] Enter: dla_program_operation
[ 1961.808382] Program SDP operation index 46 ROI 0 Group[0]
[ 1961.809679] 
[ 1961.809679] entered processor_sdp_program():
[ 1961.809969] sdp skip getting src_addr
[ 1961.809969] 
[ 1961.810228] sdp getting dst_addr:
[ 1961.810412] entered dla_get_dma_cube_address(index = 2, offset = 0x710000):
[ 1961.810714] entered dla_get_dma_address(index = 2):
[ 1961.810937] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1961.811187] entered dla_read_dma_address(index = 2):
[ 1961.811416] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 1961.811705] *phys_addr = 0xc0800000 + 0x0
[ 1961.811909] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 1961.812213] back to dla_get_dma_cube_address: dst_ptr += 0x710000
[ 1961.812485] sdp dst_addr = 0xc0f10000
[ 1961.812485] 
[ 1961.812741] sdp getting x1_addr:
[ 1961.812919] entered dla_get_dma_cube_address(index = 1, offset = 0xb1000):
[ 1961.813210] entered dla_get_dma_address(index = 1):
[ 1961.813434] in branch dla_get_dma_address(DESTINATION_DMA):
[ 1961.813692] entered dla_read_dma_address(index = 1):
[ 1961.813924] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 1961.814208] *phys_addr = 0xc4000000 + 0x0
[ 1961.814413] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 1961.814723] back to dla_get_dma_cube_address: dst_ptr += 0xb1000
[ 1961.814992] sdp x1_addr = 0xc40b1000
[ 1961.814992] 
[ 1961.815252] sdp skip getting x2_addr
[ 1961.815252] 
[ 1961.815507] sdp skip getting y_addr
[ 1961.815507] 
[ 1961.824004] no desc get due to index==-1
[ 1961.824358] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 1961.825036] no desc get due to index==-1
[ 1961.825348] no desc get due to index==-1
[ 1961.825659] no desc get due to index==-1
[ 1961.825984] Enter: dla_op_programmed
[ 1961.826298] Update dependency operation index 48 ROI 0 DEP_COUNT=2
[ 1961.826744] Exit: dla_op_programmed
[ 1961.827040] Exit: dla_program_operation status=0
[ 1961.827393] Enter: dla_enable_operation
[ 1961.827714] Enable SDP operation index 46 ROI 0
[ 1961.829115] Enter: dla_op_enabled
[ 1961.829427] Update dependency operation index 45 ROI 0 DEP_COUNT=2
[ 1961.829874] Exit: dla_op_enabled
[ 1961.830159] Exit: dla_enable_operation status=0
[ 1961.830513] Exit: dla_submit_operation
[ 1961.830819] Exit: dla_dequeue_operation
[ 1961.831147] Enter: dla_free_op_desc op desc index 42 ROI 0
[ 1961.831587] Exit: dla_free_op_desc
[ 1961.831895] Exit:dla_op_completion processor SDP group0 status=0
[ 1961.832340] Exit:dla_handle_events, ret:0
[ 1961.832665] Enter:dla_handle_events, processor:PDP
[ 1961.833031] Exit:dla_handle_events, ret:0
[ 1961.833357] Enter:dla_handle_events, processor:CDP
[ 1961.833722] Exit:dla_handle_events, ret:0
[ 1961.833926] Enter:dla_handle_events, processor:RUBIK
[ 1961.834161] Exit:dla_handle_events, ret:0
[ 2028.520251] Enter:dla_handle_events, processor:BDMA
[ 2028.520819] Exit:dla_handle_events, ret:0
[ 2028.521259] Enter:dla_handle_events, processor:Convolution
[ 2028.521795] Handle cdma weight done event, processor Convolution group 1
[ 2028.522396] Handle cdma data done event, processor Convolution group 1
[ 2028.522980] Handle op complete event, processor Convolution group 1
[ 2028.523541] Enter:dla_op_completion processor Convolution group1
[ 2028.524087] Completed Convolution operation index 43 ROI 0
[ 2028.524607] 44 HWLs done, totally 52 layers
[ 2028.525029] Enter: dla_dequeue_operation
[ 2028.525439] Dequeue op from Convolution processor, index=47 ROI=0
[ 2028.525992] Enter: dla_submit_operation
[ 2028.526398] Prepare Convolution operation index 47 ROI 0 dep_count 2
[ 2028.526954] Enter: dla_prepare_operation
[ 2028.527490] processor:Convolution group:1, rdma_group:0 available
[ 2028.528036] Enter: dla_read_config
[ 2028.528490] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 2028.529408] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 2028.530369] *********************************************************
[ 2028.530661] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 2028.530875] ---------------------------------------------------------
[ 2028.531147] weight_data         = [ dla_data_cube =>
[ 2028.531393]     type          = 0
[ 2028.531592]     address       = 1
[ 2028.531775]     offset        = 2000000
[ 2028.531976]     width         = 3
[ 2028.532156]     height        = 3
[ 2028.532330]     channel       = 200
[ 2028.532518]     size          = 4718592
[ 2028.532715]     line_stride   = 0
[ 2028.532894]     surf_stride   = 0
[ 2028.533066]     plane_stride  = 0
[ 2028.533238] ]
[ 2028.533258] wmb_data            = [ dla_data_cube =>
[ 2028.533593]     type          = 0
[ 2028.533771]     address       = 0
[ 2028.533948]     offset        = 0
[ 2028.534124]     width         = 0
[ 2028.534301]     height        = 0
[ 2028.534476]     channel       = 0
[ 2028.534656]     size          = 0
[ 2028.534832]     line_stride   = 0
[ 2028.535020]     surf_stride   = 0
[ 2028.535201]     plane_stride  = 0
[ 2028.535373] ]
[ 2028.535391] wgs_data            = [ dla_data_cube =>
[ 2028.535725]     type          = 0
[ 2028.535906]     address       = 0
[ 2028.536086]     offset        = 0
[ 2028.536263]     width         = 0
[ 2028.536440]     height        = 0
[ 2028.536624]     channel       = 0
[ 2028.536801]     size          = 0
[ 2028.536979]     line_stride   = 0
[ 2028.537159]     surf_stride   = 0
[ 2028.537333]     plane_stride  = 0
[ 2028.537515] ]
[ 2028.537533] src_data            = [ dla_data_cube =>
[ 2028.537869]     type          = 0
[ 2028.538050]     address       = 2
[ 2028.538229]     offset        = 710000
[ 2028.538421]     width         = 7
[ 2028.538599]     height        = 7
[ 2028.538774]     channel       = 200
[ 2028.538964]     size          = 50176
[ 2028.539155]     line_stride   = 224
[ 2028.539341]     surf_stride   = 1568
[ 2028.539530]     plane_stride  = 0
[ 2028.539700] ]
[ 2028.539716] dst_data            = [ dla_data_cube =>
[ 2028.540042]     type          = 2
[ 2028.540227]     address       = -1
[ 2028.540408]     offset        = 0
[ 2028.540591]     width         = 7
[ 2028.540770]     height        = 7
[ 2028.540945]     channel       = 200
[ 2028.541131]     size          = 50176
[ 2028.541332]     line_stride   = 224
[ 2028.541527]     surf_stride   = 1568
[ 2028.541715]     plane_stride  = 0
[ 2028.541888] ]
[ 2028.541908] offset_u            = 0
[ 2028.542175] in_line_uv_stride   = 0
[ 2028.542175] 
[ 2028.542441] *********************************************************
[ 2028.542748] NVDLA FW ROI[0]: dla_conv_op_desc
[ 2028.542936] ---------------------------------------------------------
[ 2028.543259] conv_mode          = 0
[ 2028.543477] data_reuse         = 0
[ 2028.543685] weight_reuse       = 0
[ 2028.543896] skip_data_rls      = 0
[ 2028.544110] skip_weight_rls    = 0
[ 2028.544323] entry_per_slice    = 56
[ 2028.544544] data_format        = 36
[ 2028.544762] pixel_mapping      = 0
[ 2028.544977] fetch_grain        = 1
[ 2028.545191] batch              = 1
[ 2028.545398] weight_format      = 0
[ 2028.545620] data_bank          = 2
[ 2028.545838] weight_bank        = 10
[ 2028.546072] batch_stride       = 0
[ 2028.546354] post_extension     = 0
[ 2028.546626] pixel_override     = 1
[ 2028.546916] release            = 7
[ 2028.547105] input_width_csc    = 7
[ 2028.547292] input_height_csc   = 7
[ 2028.547483] input_channel_csc  = 512
[ 2028.547683] kernel_width_csc   = 3
[ 2028.547872] kernel_height_csc  = 3
[ 2028.548058] kernel_channel_csc = 512
[ 2028.548244] input_width_cmac   = 7
[ 2028.548430] input_height_cmac  = 7
[ 2028.548613] bytes_per_kernel   = 9216
[ 2028.548804] mean_ry            = 0
[ 2028.548987] mean_gu            = 0
[ 2028.549170] mean_bv            = 0
[ 2028.549351] mean_ax            = 0
[ 2028.549551] mean_format        = 0
[ 2028.549736] conv_stride_x      = 1
[ 2028.549916] conv_stride_y      = 1
[ 2028.550104] pad_x_left         = 1
[ 2028.550284] pad_x_right        = 1
[ 2028.550467] pad_y_top          = 1
[ 2028.550653] pad_y_bottom       = 1
[ 2028.550838] dilation_x         = 1
[ 2028.551018] dilation_y         = 1
[ 2028.551324] pra_truncate       = 0
[ 2028.551619] in_precision       = 2
[ 2028.551835] out_precision      = 2
[ 2028.552046] pad_val            = 0
[ 2028.552247] in_cvt             =
[ 2028.552453] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 2028.552750] out_cvt            =
[ 2028.552958] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 2028.553252] 
[ 2028.553382] Exit: dla_read_config
[ 2028.553595] Exit: dla_prepare_operation status=0
[ 2028.553845] Enter: dla_program_operation
[ 2028.554076] Program Convolution operation index 47 ROI 0 Group[1]
[ 2028.554730] 
[ 2028.554730] entered processor_conv_program():
[ 2028.555074] conv getting weight_address:
[ 2028.555310] entered dla_get_dma_cube_address(index = 1, offset = 0x2000000):
[ 2028.555650] entered dla_get_dma_address(index = 1):
[ 2028.555925] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2028.556230] entered dla_read_dma_address(index = 1):
[ 2028.556521] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 2028.556880] *phys_addr = 0xc4000000 + 0x0
[ 2028.557127] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 2028.557506] back to dla_get_dma_cube_address: dst_ptr += 0x2000000
[ 2028.557831] conv weight_addr = 0xc6000000
[ 2028.557831] 
[ 2028.558149] conv getting input_address:
[ 2028.558374] entered dla_read_input_address():
[ 2028.558628] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7405568)
[ 2028.559059] entered dla_get_dma_cube_address(index = 2, offset = 0x710000):
[ 2028.559410] entered dla_get_dma_address(index = 2):
[ 2028.559671] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2028.559964] entered dla_read_dma_address(index = 2):
[ 2028.560248] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 2028.560584] *phys_addr = 0xc0800000 + 0x0
[ 2028.560822] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 2028.561190] back to dla_get_dma_cube_address: dst_ptr += 0x710000
[ 2028.561526] conv input_addr = 0xc0f10000
[ 2028.561526] 
[ 2028.565764] no desc get due to index==-1
[ 2028.566070] no desc get due to index==-1
[ 2028.566352] no desc get due to index==-1
[ 2028.566585] no desc get due to index==-1
[ 2028.566817] no desc get due to index==-1
[ 2028.567047] Enter: dla_op_programmed
[ 2028.567255] Update dependency operation index 50 ROI 0 DEP_COUNT=3
[ 2028.567598] Update dependency operation index 48 ROI 0 DEP_COUNT=1
[ 2028.567923] enable SDP in dla_update_dependency as depdency are resolved
[ 2028.568266] Enter: dla_enable_operation
[ 2028.568490] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 2028.568945] Exit: dla_enable_operation status=0
[ 2028.569208] Exit: dla_op_programmed
[ 2028.569428] Exit: dla_program_operation status=0
[ 2028.569696] Exit: dla_submit_operation
[ 2028.569924] Exit: dla_dequeue_operation
[ 2028.570157] Exit:dla_op_completion processor Convolution group1 status=0
[ 2028.570511] Exit:dla_handle_events, ret:0
[ 2028.570743] Enter:dla_handle_events, processor:SDP
[ 2028.571004] Handle op complete event, processor SDP group 1
[ 2028.571308] Enter:dla_op_completion processor SDP group1
[ 2028.571598] Completed SDP operation index 44 ROI 0
[ 2028.571876] Update dependency operation index 45 ROI 0 DEP_COUNT=1
[ 2028.572191] enable Convolution in dla_update_dependency as depdency are resolved
[ 2028.572559] Enter: dla_enable_operation
[ 2028.572800] Enable Convolution operation index 45 ROI 0
[ 2028.573671] Enter: dla_op_enabled
[ 2028.573887] Exit: dla_op_enabled
[ 2028.574085] Exit: dla_enable_operation status=0
[ 2028.574352] 45 HWLs done, totally 52 layers
[ 2028.574601] Enter: dla_free_op_desc op desc index 43 ROI 0
[ 2028.574955] Exit: dla_free_op_desc
[ 2028.575175] Enter: dla_dequeue_operation
[ 2028.575411] Dequeue op from SDP processor, index=48 ROI=0
[ 2028.575709] Enter: dla_submit_operation
[ 2028.575947] Prepare SDP operation index 48 ROI 0 dep_count 0
[ 2028.576253] Enter: dla_prepare_operation
[ 2028.646193] processor:SDP group:1, rdma_group:1 available
[ 2028.646550] Enter: dla_read_config
[ 2028.646823] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 2028.647431] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 2028.647997] *********************************************************
[ 2028.648317] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 2028.648562] ---------------------------------------------------------
[ 2028.648872] src_data            = [ dla_data_cube =>
[ 2028.649133]     type          = 2
[ 2028.649328]     address       = -1
[ 2028.649537]     offset        = 0
[ 2028.649743]     width         = 7
[ 2028.649948]     height        = 7
[ 2028.650157]     channel       = 200
[ 2028.650369]     size          = 50176
[ 2028.650586]     line_stride   = 224
[ 2028.650812]     surf_stride   = 1568
[ 2028.651027]     plane_stride  = 0
[ 2028.651224] ]
[ 2028.651243] x1_data             = [ dla_data_cube =>
[ 2028.651615]     type          = 0
[ 2028.651819]     address       = 1
[ 2028.652030]     offset        = b2000
[ 2028.652253]     width         = 1
[ 2028.652464]     height        = 1
[ 2028.652664]     channel       = 200
[ 2028.652877]     size          = 1024
[ 2028.653086]     line_stride   = 32
[ 2028.653294]     surf_stride   = 32
[ 2028.653506]     plane_stride  = 0
[ 2028.653716] ]
[ 2028.653734] x2_data             = [ dla_data_cube =>
[ 2028.654108]     type          = 0
[ 2028.654311]     address       = 2
[ 2028.654516]     offset        = 700000
[ 2028.654737]     width         = 7
[ 2028.654944]     height        = 7
[ 2028.655147]     channel       = 200
[ 2028.655361]     size          = 50176
[ 2028.655591]     line_stride   = 224
[ 2028.655801]     surf_stride   = 1568
[ 2028.656018]     plane_stride  = 0
[ 2028.656223] ]
[ 2028.656241] y_data              = [ dla_data_cube =>
[ 2028.656695]     type          = 0
[ 2028.657016]     address       = 0
[ 2028.657304]     offset        = 0
[ 2028.657522]     width         = 0
[ 2028.657729]     height        = 0
[ 2028.657936]     channel       = 0
[ 2028.658148]     size          = 0
[ 2028.658359]     line_stride   = 0
[ 2028.658572]     surf_stride   = 0
[ 2028.658780]     plane_stride  = 0
[ 2028.658991] ]
[ 2028.659009] dst_data            = [ dla_data_cube =>
[ 2028.659403]     type          = 0
[ 2028.659618]     address       = 2
[ 2028.659830]     offset        = 720000
[ 2028.660049]     width         = 7
[ 2028.660252]     height        = 7
[ 2028.660459]     channel       = 200
[ 2028.660669]     size          = 50176
[ 2028.660884]     line_stride   = 224
[ 2028.661096]     surf_stride   = 1568
[ 2028.661319]     plane_stride  = 0
[ 2028.661525] ]
[ 2028.661545] *********************************************************
[ 2028.661980] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 2028.662211] ---------------------------------------------------------
[ 2028.662541] src_precision    = 2
[ 2028.662750] dst_precision    = 2
[ 2028.662974] lut_index        = -1
[ 2028.663184] out_cvt          =
[ 2028.663391] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 2028.663705] conv_mode        = 0
[ 2028.663908] batch_num        = 1
[ 2028.664113] batch_stride     = 0
[ 2028.664320] x1_op            = [ dla_sdp_op =>
[ 2028.664579]     enable         = 1
[ 2028.664802]     alu_type       = 2
[ 2028.665016]     type           = 2
[ 2028.665230]     mode           = 1
[ 2028.665445]     act            = 0
[ 2028.665662]     shift_value    = 0
[ 2028.665869]     truncate       = 0
[ 2028.666078]     precision      = 2
[ 2028.666293]     alu_operand    = 0
[ 2028.666510]     mul_operand    = 1
[ 2028.666724] cvt.alu_cvt          =
[ 2028.666947] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.667250] cvt.mul_cvt          =
[ 2028.667472] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.667774] ]
[ 2028.667904] x2_op            = [ dla_sdp_op =>
[ 2028.668151]     enable         = 1
[ 2028.668357]     alu_type       = 2
[ 2028.668566]     type           = 2
[ 2028.668774]     mode           = 2
[ 2028.668985]     act            = 1
[ 2028.669203]     shift_value    = 0
[ 2028.669414]     truncate       = 0
[ 2028.669639]     precision      = 2
[ 2028.669853]     alu_operand    = 0
[ 2028.670065]     mul_operand    = 1
[ 2028.670276] cvt.alu_cvt          =
[ 2028.670490] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.670810] cvt.mul_cvt          =
[ 2028.671024] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.671349] ]
[ 2028.671496] y_op             = [ dla_sdp_op =>
[ 2028.671851]     enable         = 0
[ 2028.672173]     alu_type       = 0
[ 2028.672479]     type           = 0
[ 2028.672693]     mode           = 0
[ 2028.672907]     act            = 0
[ 2028.673116]     shift_value    = 0
[ 2028.673323]     truncate       = 0
[ 2028.673553]     precision      = 0
[ 2028.673764]     alu_operand    = 0
[ 2028.673975]     mul_operand    = 0
[ 2028.674182] cvt.alu_cvt          =
[ 2028.674389] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.674690] cvt.mul_cvt          =
[ 2028.674893] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2028.675197] ]
[ 2028.675338] Exit: dla_read_config
[ 2028.675545] Exit: dla_prepare_operation status=0
[ 2028.675813] Enter: dla_program_operation
[ 2028.676060] Program SDP operation index 48 ROI 0 Group[1]
[ 2028.677619] 
[ 2028.677619] entered processor_sdp_program():
[ 2028.677962] sdp skip getting src_addr
[ 2028.677962] 
[ 2028.678266] sdp getting dst_addr:
[ 2028.678482] entered dla_get_dma_cube_address(index = 2, offset = 0x720000):
[ 2028.678840] entered dla_get_dma_address(index = 2):
[ 2028.679114] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2028.679416] entered dla_read_dma_address(index = 2):
[ 2028.679691] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 2028.680033] *phys_addr = 0xc0800000 + 0x0
[ 2028.680272] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 2028.680634] back to dla_get_dma_cube_address: dst_ptr += 0x720000
[ 2028.680959] sdp dst_addr = 0xc0f20000
[ 2028.680959] 
[ 2028.681261] sdp getting x1_addr:
[ 2028.681466] entered dla_get_dma_cube_address(index = 1, offset = 0xb2000):
[ 2028.681834] entered dla_get_dma_address(index = 1):
[ 2028.682104] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2028.682391] entered dla_read_dma_address(index = 1):
[ 2028.682658] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 2028.682996] *phys_addr = 0xc4000000 + 0x0
[ 2028.683238] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 2028.683596] back to dla_get_dma_cube_address: dst_ptr += 0xb2000
[ 2028.683902] sdp x1_addr = 0xc40b2000
[ 2028.683902] 
[ 2028.684200] sdp getting x2_addr:
[ 2028.684410] entered dla_get_dma_cube_address(index = 2, offset = 0x700000):
[ 2028.684767] entered dla_get_dma_address(index = 2):
[ 2028.685050] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2028.685357] entered dla_read_dma_address(index = 2):
[ 2028.685635] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 2028.685963] *phys_addr = 0xc0800000 + 0x0
[ 2028.686201] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 2028.686566] back to dla_get_dma_cube_address: dst_ptr += 0x700000
[ 2028.686881] sdp x1_addr = 0xc0f00000
[ 2028.686881] 
[ 2028.687191] sdp skip getting y_addr
[ 2028.687191] 
[ 2028.697271] no desc get due to index==-1
[ 2028.697654] no desc get due to index==-1
[ 2028.698055] dla_data_read(src_index = 9): mapped dma_buf(handle = 8, offset = 0) to vaddr = 0xffff000040002000
[ 2028.699057] no desc get due to index==-1
[ 2028.699536] no desc get due to index==-1
[ 2028.700006] Enter: dla_op_programmed
[ 2028.700469] Update dependency operation index 51 ROI 0 DEP_COUNT=2
[ 2028.701140] Exit: dla_op_programmed
[ 2028.701590] Exit: dla_program_operation status=0
[ 2028.702179] Enter: dla_enable_operation
[ 2028.702823] Enable SDP operation index 48 ROI 0
[ 2028.705525] Enter: dla_op_enabled
[ 2028.705935] Update dependency operation index 47 ROI 0 DEP_COUNT=2
[ 2028.706426] Exit: dla_op_enabled
[ 2028.706701] Exit: dla_enable_operation status=0
[ 2028.707042] Exit: dla_submit_operation
[ 2028.707318] Exit: dla_dequeue_operation
[ 2028.707568] Enter: dla_free_op_desc op desc index 44 ROI 0
[ 2028.707928] Exit: dla_free_op_desc
[ 2028.708168] Exit:dla_op_completion processor SDP group1 status=0
[ 2028.708582] Exit:dla_handle_events, ret:0
[ 2028.708895] Enter:dla_handle_events, processor:PDP
[ 2028.709271] Exit:dla_handle_events, ret:0
[ 2028.709551] Enter:dla_handle_events, processor:CDP
[ 2028.709839] Exit:dla_handle_events, ret:0
[ 2028.710102] Enter:dla_handle_events, processor:RUBIK
[ 2028.710400] Exit:dla_handle_events, ret:0
[ 2102.074714] Enter:dla_handle_events, processor:BDMA
[ 2102.075289] Exit:dla_handle_events, ret:0
[ 2102.075707] Enter:dla_handle_events, processor:Convolution
[ 2102.076239] Handle cdma weight done event, processor Convolution group 0
[ 2102.076904] Handle cdma data done event, processor Convolution group 0
[ 2102.077552] Handle op complete event, processor Convolution group 0
[ 2102.078132] Enter:dla_op_completion processor Convolution group0
[ 2102.078690] Completed Convolution operation index 45 ROI 0
[ 2102.079229] 46 HWLs done, totally 52 layers
[ 2102.079656] Enter: dla_dequeue_operation
[ 2102.080070] Dequeue op from Convolution processor, index=50 ROI=0
[ 2102.080630] Enter: dla_submit_operation
[ 2102.081036] Prepare Convolution operation index 50 ROI 0 dep_count 2
[ 2102.081614] Enter: dla_prepare_operation
[ 2102.082038] processor:Convolution group:0, rdma_group:0 available
[ 2102.082311] Enter: dla_read_config
[ 2102.082529] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 2102.082987] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 2102.083489] *********************************************************
[ 2102.083769] NVDLA FW ROI[0]: dla_conv_surface_desc
[ 2102.083995] ---------------------------------------------------------
[ 2102.084272] weight_data         = [ dla_data_cube =>
[ 2102.084498]     type          = 0
[ 2102.084671]     address       = 1
[ 2102.084866]     offset        = a00000
[ 2102.085057]     width         = 1
[ 2102.085236]     height        = 1
[ 2102.085410]     channel       = 200
[ 2102.085601]     size          = 1024000
[ 2102.085790]     line_stride   = 0
[ 2102.085976]     surf_stride   = 0
[ 2102.086152]     plane_stride  = 0
[ 2102.086325] ]
[ 2102.086346] wmb_data            = [ dla_data_cube =>
[ 2102.086668]     type          = 0
[ 2102.086841]     address       = 0
[ 2102.087018]     offset        = 0
[ 2102.087197]     width         = 0
[ 2102.087371]     height        = 0
[ 2102.087552]     channel       = 0
[ 2102.087725]     size          = 0
[ 2102.087897]     line_stride   = 0
[ 2102.088073]     surf_stride   = 0
[ 2102.088251]     plane_stride  = 0
[ 2102.088428] ]
[ 2102.088446] wgs_data            = [ dla_data_cube =>
[ 2102.088767]     type          = 0
[ 2102.088943]     address       = 0
[ 2102.089122]     offset        = 0
[ 2102.089303]     width         = 0
[ 2102.089484]     height        = 0
[ 2102.089665]     channel       = 0
[ 2102.089843]     size          = 0
[ 2102.090020]     line_stride   = 0
[ 2102.090197]     surf_stride   = 0
[ 2102.090372]     plane_stride  = 0
[ 2102.090541] ]
[ 2102.090559] src_data            = [ dla_data_cube =>
[ 2102.090889]     type          = 0
[ 2102.091067]     address       = 2
[ 2102.091242]     offset        = 730000
[ 2102.091433]     width         = 1
[ 2102.091606]     height        = 1
[ 2102.091784]     channel       = 200
[ 2102.092000]     size          = 1024
[ 2102.092194]     line_stride   = 32
[ 2102.092383]     surf_stride   = 32
[ 2102.092561]     plane_stride  = 0
[ 2102.092735] ]
[ 2102.092752] dst_data            = [ dla_data_cube =>
[ 2102.093105]     type          = 2
[ 2102.093285]     address       = -1
[ 2102.093473]     offset        = 0
[ 2102.093663]     width         = 1
[ 2102.093851]     height        = 1
[ 2102.094034]     channel       = 3e8
[ 2102.094221]     size          = 2016
[ 2102.094413]     line_stride   = 32
[ 2102.094603]     surf_stride   = 32
[ 2102.094785]     plane_stride  = 0
[ 2102.094954] ]
[ 2102.094974] offset_u            = 0
[ 2102.095238] in_line_uv_stride   = 0
[ 2102.095238] 
[ 2102.095489] *********************************************************
[ 2102.095767] NVDLA FW ROI[0]: dla_conv_op_desc
[ 2102.095971] ---------------------------------------------------------
[ 2102.096243] conv_mode          = 0
[ 2102.096426] data_reuse         = 0
[ 2102.096604] weight_reuse       = 0
[ 2102.096784] skip_data_rls      = 0
[ 2102.096963] skip_weight_rls    = 0
[ 2102.097144] entry_per_slice    = 8
[ 2102.097321] data_format        = 36
[ 2102.097509] pixel_mapping      = 0
[ 2102.097692] fetch_grain        = 1
[ 2102.097871] batch              = 1
[ 2102.098049] weight_format      = 0
[ 2102.098226] data_bank          = 1
[ 2102.098406] weight_bank        = 2
[ 2102.098588] batch_stride       = 0
[ 2102.098766] post_extension     = 0
[ 2102.098944] pixel_override     = 0
[ 2102.099123] release            = 1
[ 2102.099307] input_width_csc    = 1
[ 2102.099493] input_height_csc   = 1
[ 2102.099677] input_channel_csc  = 512
[ 2102.099862] kernel_width_csc   = 1
[ 2102.100043] kernel_height_csc  = 1
[ 2102.100220] kernel_channel_csc = 512
[ 2102.100405] input_width_cmac   = 1
[ 2102.100589] input_height_cmac  = 1
[ 2102.100770] bytes_per_kernel   = 1024
[ 2102.100956] mean_ry            = 0
[ 2102.101138] mean_gu            = 0
[ 2102.101315] mean_bv            = 0
[ 2102.101530] mean_ax            = 0
[ 2102.101756] mean_format        = 0
[ 2102.101939] conv_stride_x      = 1
[ 2102.102117] conv_stride_y      = 1
[ 2102.102298] pad_x_left         = 0
[ 2102.102476] pad_x_right        = 0
[ 2102.102658] pad_y_top          = 0
[ 2102.102836] pad_y_bottom       = 0
[ 2102.103011] dilation_x         = 1
[ 2102.103193] dilation_y         = 1
[ 2102.103374] pra_truncate       = 0
[ 2102.103551] in_precision       = 2
[ 2102.103729] out_precision      = 2
[ 2102.103907] pad_val            = 0
[ 2102.104084] in_cvt             =
[ 2102.104264] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 2102.104525] out_cvt            =
[ 2102.104708] [ scale = 1, truncate = 0, enable = 1, offset = 0 ]
[ 2102.104967] 
[ 2102.105084] Exit: dla_read_config
[ 2102.105266] Exit: dla_prepare_operation status=0
[ 2102.105496] Enter: dla_program_operation
[ 2102.105708] Program Convolution operation index 50 ROI 0 Group[0]
[ 2102.106218] 
[ 2102.106218] entered processor_conv_program():
[ 2102.106507] conv getting weight_address:
[ 2102.106715] entered dla_get_dma_cube_address(index = 1, offset = 0xa00000):
[ 2102.107015] entered dla_get_dma_address(index = 1):
[ 2102.107241] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2102.107501] entered dla_read_dma_address(index = 1):
[ 2102.107735] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 2102.108037] *phys_addr = 0xc4000000 + 0x0
[ 2102.108244] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 2102.108549] back to dla_get_dma_cube_address: dst_ptr += 0xa00000
[ 2102.108820] conv weight_addr = 0xc4a00000
[ 2102.108820] 
[ 2102.109098] conv getting input_address:
[ 2102.109286] entered dla_read_input_address():
[ 2102.109505] passed to dla_get_dma_cube_address(data->address = 2, data->offset = 7536640)
[ 2102.109898] entered dla_get_dma_cube_address(index = 2, offset = 0x730000):
[ 2102.110201] entered dla_get_dma_address(index = 2):
[ 2102.110427] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2102.110682] entered dla_read_dma_address(index = 2):
[ 2102.110914] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 2102.111217] *phys_addr = 0xc0800000 + 0x0
[ 2102.111424] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 2102.111726] back to dla_get_dma_cube_address: dst_ptr += 0x730000
[ 2102.111996] conv input_addr = 0xc0f30000
[ 2102.111996] 
[ 2102.115215] no desc get due to index==-1
[ 2102.115420] no desc get due to index==-1
[ 2102.115616] no desc get due to index==-1
[ 2102.115813] no desc get due to index==-1
[ 2102.116003] no desc get due to index==-1
[ 2102.116196] no desc get due to index==-1
[ 2102.116391] Enter: dla_op_programmed
[ 2102.116583] Update dependency operation index 51 ROI 0 DEP_COUNT=1
[ 2102.116871] enable SDP in dla_update_dependency as depdency are resolved
[ 2102.117161] Enter: dla_enable_operation
[ 2102.117357] exit dla_enable_operation without actual enable due to processor hasn't been programmed
[ 2102.117764] Exit: dla_enable_operation status=0
[ 2102.118127] Exit: dla_op_programmed
[ 2102.118429] Exit: dla_program_operation status=0
[ 2102.118795] Exit: dla_submit_operation
[ 2102.119112] Exit: dla_dequeue_operation
[ 2102.119444] Exit:dla_op_completion processor Convolution group0 status=0
[ 2102.119921] Exit:dla_handle_events, ret:0
[ 2102.120245] Enter:dla_handle_events, processor:SDP
[ 2102.120614] Handle op complete event, processor SDP group 0
[ 2102.121029] Enter:dla_op_completion processor SDP group0
[ 2102.121432] Completed SDP operation index 46 ROI 0
[ 2102.121821] Update dependency operation index 47 ROI 0 DEP_COUNT=1
[ 2102.122265] enable Convolution in dla_update_dependency as depdency are resolved
[ 2102.122790] Enter: dla_enable_operation
[ 2102.123114] Enable Convolution operation index 47 ROI 0
[ 2102.123948] Enter: dla_op_enabled
[ 2102.124249] Exit: dla_op_enabled
[ 2102.124536] Exit: dla_enable_operation status=0
[ 2102.124899] 47 HWLs done, totally 52 layers
[ 2102.125249] Enter: dla_free_op_desc op desc index 45 ROI 0
[ 2102.125713] Exit: dla_free_op_desc
[ 2102.125926] Enter: dla_dequeue_operation
[ 2102.126126] Dequeue op from SDP processor, index=51 ROI=0
[ 2102.126426] Enter: dla_submit_operation
[ 2102.126631] Prepare SDP operation index 51 ROI 0 dep_count 0
[ 2102.126888] Enter: dla_prepare_operation
[ 2102.193788] processor:SDP group:0, rdma_group:0 available
[ 2102.194118] Enter: dla_read_config
[ 2102.194374] dla_data_read(src_index = 10): mapped dma_buf(handle = 9, offset = 0) to vaddr = 0xffff000040004000
[ 2102.195127] dla_data_read(src_index = 11): mapped dma_buf(handle = 10, offset = 0) to vaddr = 0xffff000040010000
[ 2102.196166] *********************************************************
[ 2102.196746] NVDLA FW ROI[0]: dla_sdp_surface_desc
[ 2102.197198] ---------------------------------------------------------
[ 2102.197787] src_data            = [ dla_data_cube =>
[ 2102.198257]     type          = 2
[ 2102.198623]     address       = -1
[ 2102.198991]     offset        = 0
[ 2102.199353]     width         = 1
[ 2102.199714]     height        = 1
[ 2102.200075]     channel       = 3e8
[ 2102.200446]     size          = 2016
[ 2102.200864]     line_stride   = 32
[ 2102.201227]     surf_stride   = 32
[ 2102.201598]     plane_stride  = 0
[ 2102.201945] ]
[ 2102.201983] x1_data             = [ dla_data_cube =>
[ 2102.202627]     type          = 0
[ 2102.202982]     address       = 1
[ 2102.203339]     offset        = b3000
[ 2102.203711]     width         = 1
[ 2102.204062]     height        = 1
[ 2102.204413]     channel       = 3e8
[ 2102.204779]     size          = 2000
[ 2102.205150]     line_stride   = 32
[ 2102.205529]     surf_stride   = 32
[ 2102.205834]     plane_stride  = 0
[ 2102.206003] ]
[ 2102.206021] x2_data             = [ dla_data_cube =>
[ 2102.206342]     type          = 0
[ 2102.206517]     address       = 0
[ 2102.206689]     offset        = 0
[ 2102.206864]     width         = 0
[ 2102.207041]     height        = 0
[ 2102.207217]     channel       = 0
[ 2102.207392]     size          = 0
[ 2102.207570]     line_stride   = 0
[ 2102.207745]     surf_stride   = 0
[ 2102.207927]     plane_stride  = 0
[ 2102.208100] ]
[ 2102.208117] y_data              = [ dla_data_cube =>
[ 2102.208445]     type          = 0
[ 2102.208622]     address       = 0
[ 2102.208795]     offset        = 0
[ 2102.208971]     width         = 0
[ 2102.209148]     height        = 0
[ 2102.209324]     channel       = 0
[ 2102.209509]     size          = 0
[ 2102.209721]     line_stride   = 0
[ 2102.209896]     surf_stride   = 0
[ 2102.210073]     plane_stride  = 0
[ 2102.210249] ]
[ 2102.210267] dst_data            = [ dla_data_cube =>
[ 2102.210585]     type          = 0
[ 2102.210763]     address       = 2
[ 2102.210942]     offset        = 731000
[ 2102.211133]     width         = 1
[ 2102.211308]     height        = 1
[ 2102.211489]     channel       = 3e8
[ 2102.211675]     size          = 2016
[ 2102.211861]     line_stride   = 32
[ 2102.212044]     surf_stride   = 32
[ 2102.212223]     plane_stride  = 0
[ 2102.212404] ]
[ 2102.212423] *********************************************************
[ 2102.212796] NVDLA FW ROI[0]: dla_sdp_op_desc
[ 2102.213004] ---------------------------------------------------------
[ 2102.213286] src_precision    = 2
[ 2102.213463] dst_precision    = 2
[ 2102.213651] lut_index        = -1
[ 2102.213828] out_cvt          =
[ 2102.214004] [ scale = 1, truncate = 0, enable = 0, offset = 0 ]
[ 2102.214270] conv_mode        = 0
[ 2102.214447] batch_num        = 1
[ 2102.214630] batch_stride     = 0
[ 2102.214810] x1_op            = [ dla_sdp_op =>
[ 2102.215027]     enable         = 1
[ 2102.215213]     alu_type       = 2
[ 2102.215396]     type           = 2
[ 2102.215579]     mode           = 1
[ 2102.215764]     act            = 0
[ 2102.215947]     shift_value    = 0
[ 2102.216130]     truncate       = 0
[ 2102.216315]     precision      = 2
[ 2102.216496]     alu_operand    = 0
[ 2102.216681]     mul_operand    = 1
[ 2102.216857] cvt.alu_cvt          =
[ 2102.217046] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.217311] cvt.mul_cvt          =
[ 2102.217508] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.217769] ]
[ 2102.217890] x2_op            = [ dla_sdp_op =>
[ 2102.218141]     enable         = 0
[ 2102.218368]     alu_type       = 0
[ 2102.218554]     type           = 0
[ 2102.218732]     mode           = 0
[ 2102.218914]     act            = 0
[ 2102.219096]     shift_value    = 0
[ 2102.219278]     truncate       = 0
[ 2102.219456]     precision      = 0
[ 2102.219637]     alu_operand    = 0
[ 2102.219822]     mul_operand    = 0
[ 2102.219999] cvt.alu_cvt          =
[ 2102.220188] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.220451] cvt.mul_cvt          =
[ 2102.220640] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.220902] ]
[ 2102.221022] y_op             = [ dla_sdp_op =>
[ 2102.221238]     enable         = 0
[ 2102.221421]     alu_type       = 0
[ 2102.221606]     type           = 0
[ 2102.221786]     mode           = 0
[ 2102.221971]     act            = 0
[ 2102.222151]     shift_value    = 0
[ 2102.222334]     truncate       = 0
[ 2102.222514]     precision      = 0
[ 2102.222700]     alu_operand    = 0
[ 2102.222887]     mul_operand    = 0
[ 2102.223067] cvt.alu_cvt          =
[ 2102.223255] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.223519] cvt.mul_cvt          =
[ 2102.223706] [ scale = 0, truncate = 0, enable = 0, offset = 0 ]
[ 2102.223972] ]
[ 2102.224097] Exit: dla_read_config
[ 2102.224284] Exit: dla_prepare_operation status=0
[ 2102.224511] Enter: dla_program_operation
[ 2102.224718] Program SDP operation index 51 ROI 0 Group[0]
[ 2102.226212] 
[ 2102.226212] entered processor_sdp_program():
[ 2102.226531] sdp skip getting src_addr
[ 2102.226531] 
[ 2102.226798] sdp getting dst_addr:
[ 2102.226989] entered dla_get_dma_cube_address(index = 2, offset = 0x731000):
[ 2102.227289] entered dla_get_dma_address(index = 2):
[ 2102.227521] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2102.227782] entered dla_read_dma_address(index = 2):
[ 2102.228012] pass to nvdla_gem_dma_addr(fd = handles[index=2] = 6):
[ 2102.228298] *phys_addr = 0xc0800000 + 0x0
[ 2102.228503] exiting dla_get_dma_address(), got dst_ptr = c0800000 (index = 2)
[ 2102.228814] back to dla_get_dma_cube_address: dst_ptr += 0x731000
[ 2102.229082] sdp dst_addr = 0xc0f31000
[ 2102.229082] 
[ 2102.229343] sdp getting x1_addr:
[ 2102.229528] entered dla_get_dma_cube_address(index = 1, offset = 0xb3000):
[ 2102.229832] entered dla_get_dma_address(index = 1):
[ 2102.230058] in branch dla_get_dma_address(DESTINATION_DMA):
[ 2102.230314] entered dla_read_dma_address(index = 1):
[ 2102.230547] pass to nvdla_gem_dma_addr(fd = handles[index=1] = 5):
[ 2102.230837] *phys_addr = 0xc4000000 + 0x0
[ 2102.231042] exiting dla_get_dma_address(), got dst_ptr = c4000000 (index = 1)
[ 2102.231345] back to dla_get_dma_cube_address: dst_ptr += 0xb3000
[ 2102.231621] sdp x1_addr = 0xc40b3000
[ 2102.231621] 
[ 2102.231879] sdp skip getting x2_addr
[ 2102.231879] 
[ 2102.232135] sdp skip getting y_addr
[ 2102.232135] 
[ 2102.240723] no desc get due to index==-1
[ 2102.241060] no desc get due to index==-1
[ 2102.241377] no desc get due to index==-1
[ 2102.241701] no desc get due to index==-1
[ 2102.242016] no desc get due to index==-1
[ 2102.242337] no desc get due to index==-1
[ 2102.242657] Enter: dla_op_programmed
[ 2102.243001] Exit: dla_op_programmed
[ 2102.243309] Exit: dla_program_operation status=0
[ 2102.243670] Enter: dla_enable_operation
[ 2102.243997] Enable SDP operation index 51 ROI 0
[ 2102.245491] Enter: dla_op_enabled
[ 2102.245812] Update dependency operation index 50 ROI 0 DEP_COUNT=2
[ 2102.246258] Exit: dla_op_enabled
[ 2102.246543] Exit: dla_enable_operation status=0
[ 2102.246901] Exit: dla_submit_operation
[ 2102.247214] Exit: dla_dequeue_operation
[ 2102.247597] Enter: dla_free_op_desc op desc index 46 ROI 0
[ 2102.248068] Exit: dla_free_op_desc
[ 2102.248384] Exit:dla_op_completion processor SDP group0 status=0
[ 2102.248825] Exit:dla_handle_events, ret:0
[ 2102.249153] Enter:dla_handle_events, processor:PDP
[ 2102.249525] Exit:dla_handle_events, ret:0
[ 2102.249854] Enter:dla_handle_events, processor:CDP
[ 2102.250220] Exit:dla_handle_events, ret:0
[ 2102.250544] Enter:dla_handle_events, processor:RUBIK
[ 2102.250928] Exit:dla_handle_events, ret:0
[ 2176.068166] Enter:dla_handle_events, processor:BDMA
[ 2176.068586] Exit:dla_handle_events, ret:0
[ 2176.068864] Enter:dla_handle_events, processor:Convolution
[ 2176.069214] Handle cdma weight done event, processor Convolution group 1
[ 2176.069622] Handle cdma data done event, processor Convolution group 1
[ 2176.070019] Handle op complete event, processor Convolution group 1
[ 2176.070386] Enter:dla_op_completion processor Convolution group1
[ 2176.070752] Completed Convolution operation index 47 ROI 0
[ 2176.071090] 48 HWLs done, totally 52 layers
[ 2176.071374] Enter: dla_dequeue_operation
[ 2176.071631] exit Convolution as there's no further operation
[ 2176.071958] Exit: dla_dequeue_operation
[ 2176.072217] Exit:dla_op_completion processor Convolution group1 status=0
[ 2176.072588] Exit:dla_handle_events, ret:0
[ 2176.072850] Enter:dla_handle_events, processor:SDP
[ 2176.073146] Handle op complete event, processor SDP group 1
[ 2176.073484] Enter:dla_op_completion processor SDP group1
[ 2176.073813] Completed SDP operation index 48 ROI 0
[ 2176.074123] Update dependency operation index 49 ROI 0 DEP_COUNT=1
[ 2176.074633] enable PDP in dla_update_dependency as depdency are resolved
[ 2176.075226] Enter: dla_enable_operation
[ 2176.075636] Enable PDP operation index 49 ROI 0
[ 2176.076088] group id 1 rdma id 1
[ 2176.076621] rdma needed 1
[ 2176.077122] Enter: dla_op_enabled
[ 2176.077440] Exit: dla_op_enabled
[ 2176.077634] Exit: dla_enable_operation status=0
[ 2176.077867] 49 HWLs done, totally 52 layers
[ 2176.078091] Enter: dla_free_op_desc op desc index 47 ROI 0
[ 2176.078420] Exit: dla_free_op_desc
[ 2176.078609] Enter: dla_dequeue_operation
[ 2176.078807] exit SDP as there's no further operation
[ 2176.079048] Exit: dla_dequeue_operation
[ 2176.079255] Enter: dla_free_op_desc op desc index 48 ROI 0
[ 2176.079554] Exit: dla_free_op_desc
[ 2176.079747] Exit:dla_op_completion processor SDP group1 status=0
[ 2176.080025] Exit:dla_handle_events, ret:0
[ 2176.080229] Enter:dla_handle_events, processor:PDP
[ 2176.080465] Exit:dla_handle_events, ret:0
[ 2176.080671] Enter:dla_handle_events, processor:CDP
[ 2176.080913] Exit:dla_handle_events, ret:0
[ 2176.081124] Enter:dla_handle_events, processor:RUBIK
[ 2176.081366] Exit:dla_handle_events, ret:0
[ 2176.530851] Enter:dla_handle_events, processor:BDMA
[ 2176.531370] Exit:dla_handle_events, ret:0
[ 2176.531698] Enter:dla_handle_events, processor:Convolution
[ 2176.532119] Exit:dla_handle_events, ret:0
[ 2176.532448] Enter:dla_handle_events, processor:SDP
[ 2176.532827] Exit:dla_handle_events, ret:0
[ 2176.533191] Enter:dla_handle_events, processor:PDP
[ 2176.533581] Handle op complete event, processor PDP group 1
[ 2176.534015] Enter:dla_op_completion processor PDP group1
[ 2176.534430] Completed PDP operation index 49 ROI 0
[ 2176.534816] Update dependency operation index 50 ROI 0 DEP_COUNT=1
[ 2176.535270] enable Convolution in dla_update_dependency as depdency are resolved
[ 2176.535809] Enter: dla_enable_operation
[ 2176.536136] Enable Convolution operation index 50 ROI 0
[ 2176.536960] Enter: dla_op_enabled
[ 2176.537265] Exit: dla_op_enabled
[ 2176.537567] Exit: dla_enable_operation status=0
[ 2176.537939] 50 HWLs done, totally 52 layers
[ 2176.538286] Enter: dla_dequeue_operation
[ 2176.538617] exit PDP as there's no further operation
[ 2176.539032] Exit: dla_dequeue_operation
[ 2176.539370] Enter: dla_free_op_desc op desc index 49 ROI 0
[ 2176.539860] Exit: dla_free_op_desc
[ 2176.540175] Exit:dla_op_completion processor PDP group1 status=0
[ 2176.540628] Exit:dla_handle_events, ret:0
[ 2176.540958] Enter:dla_handle_events, processor:CDP
[ 2176.541337] Exit:dla_handle_events, ret:0
[ 2176.541692] Enter:dla_handle_events, processor:RUBIK
[ 2176.542079] Exit:dla_handle_events, ret:0
[ 2176.662058] Enter:dla_handle_events, processor:BDMA
[ 2176.662418] Exit:dla_handle_events, ret:0
[ 2176.662630] Enter:dla_handle_events, processor:Convolution
[ 2176.662897] Handle cdma data done event, processor Convolution group 0
[ 2176.663204] Exit:dla_handle_events, ret:0
[ 2176.663417] Enter:dla_handle_events, processor:SDP
[ 2176.663659] Exit:dla_handle_events, ret:0
[ 2176.663863] Enter:dla_handle_events, processor:PDP
[ 2176.664097] Exit:dla_handle_events, ret:0
[ 2176.664303] Enter:dla_handle_events, processor:CDP
[ 2176.664534] Exit:dla_handle_events, ret:0
[ 2176.664740] Enter:dla_handle_events, processor:RUBIK
[ 2176.664974] Exit:dla_handle_events, ret:0
[ 2181.109107] Enter:dla_handle_events, processor:BDMA
[ 2181.109747] Exit:dla_handle_events, ret:0
[ 2181.110210] Enter:dla_handle_events, processor:Convolution
[ 2181.110735] Handle cdma weight done event, processor Convolution group 0
[ 2181.111371] Handle op complete event, processor Convolution group 0
[ 2181.111963] Enter:dla_op_completion processor Convolution group0
[ 2181.112537] Completed Convolution operation index 50 ROI 0
[ 2181.113081] 51 HWLs done, totally 52 layers
[ 2181.113524] Enter: dla_dequeue_operation
[ 2181.113940] exit Convolution as there's no further operation
[ 2181.114473] Exit: dla_dequeue_operation
[ 2181.114899] Exit:dla_op_completion processor Convolution group0 status=0
[ 2181.115520] Exit:dla_handle_events, ret:0
[ 2181.115942] Enter:dla_handle_events, processor:SDP
[ 2181.116418] Handle op complete event, processor SDP group 0
[ 2181.116954] Enter:dla_op_completion processor SDP group0
[ 2181.117469] Completed SDP operation index 51 ROI 0
[ 2181.118001] 52 HWLs done, totally 52 layers
[ 2181.118438] Enter: dla_free_op_desc op desc index 50 ROI 0
[ 2181.118745] Exit: dla_free_op_desc
[ 2181.118966] Enter: dla_free_op_desc op desc index 51 ROI 0
[ 2181.119245] Exit: dla_free_op_desc
[ 2181.119449] Exit:dla_op_completion processor SDP group0 status=0
[ 2181.119718] Exit:dla_handle_events, ret:0
[ 2181.119921] Enter:dla_handle_events, processor:PDP
[ 2181.120149] Exit:dla_handle_events, ret:0
[ 2181.120351] Enter:dla_handle_events, processor:CDP
[ 2181.120580] Exit:dla_handle_events, ret:0
[ 2181.120787] Enter:dla_handle_events, processor:RUBIK
[ 2181.121033] Exit:dla_handle_events, ret:0
[ 2181.139848] reset engine done
Work Found!
Work Done
execution time = 2129507019.000000 s
Shutdown signal received, exiting
Test pass
# 